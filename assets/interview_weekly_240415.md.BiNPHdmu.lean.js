import{_ as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.Co43k6IT.js";import{_ as p,c as o,j as a,a as e,G as t,a6 as c,o as r}from"./chunks/framework.D7D3iUXQ.js";import"./chunks/theme.BzyCvZRr.js";const h=JSON.parse('{"title":"2024-04-15","description":"","frontmatter":{},"headers":[],"relativePath":"interview/weekly/240415.md","filePath":"interview/weekly/240415.md","lastUpdated":1731426020000}'),F={name:"interview/weekly/240415.md"};function D(y,s,i,B,A,d){const n=l;return r(),o("div",null,[s[0]||(s[0]=a("h1",{id:"_2024-04-15",tabindex:"-1"},[e("2024-04-15 "),a("a",{class:"header-anchor",href:"#_2024-04-15","aria-label":'Permalink to "2024-04-15"'},"​")],-1)),t(n,{readTime:"8",words:"2.1k"}),s[1]||(s[1]=c(`<h5 id="创建一个递增的数字数组" tabindex="-1">创建一个递增的数字数组 <a class="header-anchor" href="#创建一个递增的数字数组" aria-label="Permalink to &quot;创建一个递增的数字数组&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> nums </span><span style="color:#89DDFF;">=</span><span style="color:#F78C6C;"> 100</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">from</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">Array</span><span style="color:#BABED8;">(nums)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">keys</span><span style="color:#BABED8;">())</span></span></code></pre></div><h3 id="reduce方法的使用" tabindex="-1">reduce方法的使用 <a class="header-anchor" href="#reduce方法的使用" aria-label="Permalink to &quot;reduce方法的使用&quot;">​</a></h3><ul><li>给定数组arr, 执行以下操作后最后打印结果</li></ul><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 8</span><span style="color:#BABED8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">map</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">/</span><span style="color:#F78C6C;">2</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">filter</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">n</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;">n</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reduce</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">a</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;">b</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;">b</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">a)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 打印结果为3</span></span></code></pre></div><p><strong>第一步：</strong> 通过<code>map</code>方法给元素每一项执行 <code>n / 2</code>的回调函数， 得到结果为数组<code>[1, 2, 3, 4]</code></p><p><strong>第二步：</strong> 再调用<code>filter</code>方法过滤出来 <code>n &gt; 1</code>的值并且返回这个新数组<code>[2, 3, 4]</code></p><p><strong>第三步：</strong> 新数组开始执行reduce方法， 目标reduce方法中没有传入第二个参数， 所以是默认从0开始计算的， 运行顺序为下面的顺序：</p><blockquote><p><code>reduce</code>中回调函数有两个参数， 第一个是累加器(accumulator)， 第二个是当前值(currentValue)</p></blockquote><p>|-|累加器acc|当前值cur|index|返回值(cur - acc)| |第一次调用|0|2|0|2| |第二次调用|2|3|1|1| |第一次调用|1|4|2|3|</p><p>综上 输出最终结果为 3</p><h3 id="js事件循环机制" tabindex="-1">JS事件循环机制 <a class="header-anchor" href="#js事件循环机制" aria-label="Permalink to &quot;JS事件循环机制&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">1</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">setTimeout</span><span style="color:#BABED8;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;"> ()</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#89DDFF;"> },</span><span style="color:#F78C6C;"> 0</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#FFCB6B;"> Promise</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">3</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">    resolve</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">4</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">    console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">5</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>打印结果为 1 -&gt; 3 -&gt; 4 -&gt; 6 -&gt; 5 -&gt; 2</p><p>JavaScript中事件执行顺序是 先同步任务形成执行栈， 执行同步任务的过程中遇到异步任务会把异步任务先放到任务队列中，等同步任务执行完成后开始自行异步任务队列.</p><p>题中 属于同步任务的是 <code>console.log(1)</code>、<code>console.log(6)</code> <code>new Promise()</code>,</p><p>属于异步任务的是<code>setTimeout(function () { console.log(2); }, 0)</code> <code>.then()函数</code></p><p>所以先打印的项按顺序为 1 -&gt; 3 -&gt; 4 -&gt; 6</p><p>在异步任务中，分为宏任务和微任务， 微任务先执行， 属于微任务的是 <code>.then()</code> <code>resolve()</code> 方法 属于宏任务的是<code>定时器setTimemout</code> 所以一步任务中先执行 .then, 之后执行 定时器，</p><p>所以先打印的项按顺序为 5 -&gt; 2</p><p>综上 打印顺序为 1 -&gt; 3 -&gt; 4 -&gt; 6 -&gt; 5 -&gt; 2</p><div class="info custom-block"><p class="custom-block-title">补充</p><p>属于宏任务的有：</p><ul><li><code>setTimeout</code></li><li><code>setInterval</code></li><li><code>I/O</code></li><li><code>setImmediate</code>(NodeJs中使用 浏览器中已经废弃)</li><li><code>事件</code></li><li><code>requestAnimationFrame</code></li></ul><p>属于微任务的有</p><ul><li><code>Promise.then()</code></li><li><code>async/await</code></li><li><code>MutationObserver</code></li><li><code>process.nextTick</code>(NodeJS)</li></ul></div><h3 id="封装一个多维数组转一维数组的方法" tabindex="-1">封装一个多维数组转一维数组的方法 <a class="header-anchor" href="#封装一个多维数组转一维数组的方法" aria-label="Permalink to &quot;封装一个多维数组转一维数组的方法&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> arr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 3</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 5</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">6</span><span style="color:#BABED8;">]]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> myFlat </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#BABED8;font-style:italic;">arr</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">T</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> T</span><span style="color:#BABED8;">[] </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> resultArr</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">T</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span></span>
<span class="line"><span style="color:#BABED8;">  arr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">item</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      resultArr</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> resultArr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">concat</span><span style="color:#F07178;">(</span><span style="color:#82AAFF;">myflat</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#F07178;">))</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      resultArr</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> resultArr</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="解析url参数的函数" tabindex="-1">解析URL参数的函数 <a class="header-anchor" href="#解析url参数的函数" aria-label="Permalink to &quot;解析URL参数的函数&quot;">​</a></h3><ul><li>eg:</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">  &#39;</span><span style="color:#C3E88D;">http://www.baidu.com?k=1&amp;k=1&amp;kk=2#c=3</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">    query</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">        k</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;"> 2</span><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#BABED8;">        kk: </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#89DDFF;">    },</span></span>
<span class="line"><span style="color:#F07178;">    hash</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">        c</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 3</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">type</span><span style="color:#FFCB6B;"> ParseUrl</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  query</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">|</span><span style="color:#FFCB6B;"> string</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">&gt;,</span></span>
<span class="line"><span style="color:#F07178;">  hash</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> parseUrl </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">url</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> ParseUrl</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> parsedUrl</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> new</span><span style="color:#82AAFF;"> URL</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">url</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 处理query</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> query</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;"> |</span><span style="color:#FFCB6B;"> string</span><span style="color:#F07178;">[]</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">  parsedUrl</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">searchParams</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">value</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> key</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasOwnProperty</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">query</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">]))</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        query</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">        query</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">query</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> value</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      query</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> value</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 处理Hash</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> hash</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#89DDFF;"> =</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#BABED8;">  parsedUrl</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">slice</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">1</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&amp;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">item</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> index</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#89DDFF;"> [</span><span style="color:#BABED8;">key</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> value</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">split</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">hash</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">hasOwnProperty</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">])) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">        hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">value</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">        hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#BABED8;">hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> value</span><span style="color:#F07178;">]</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      hash</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">key</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> value</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;"> query</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> hash</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> url </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">http://www.baidu.com?k=1&amp;k=1&amp;kk=2#c=3&amp;d=4</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">parseUrl</span><span style="color:#BABED8;">(url))</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="option请求" tabindex="-1">option请求 <a class="header-anchor" href="#option请求" aria-label="Permalink to &quot;option请求&quot;">​</a></h3><p>HTTP中的<code>OPTIONS</code>请求是用于确定服务器支持哪些HTTP方法和信息，它是一种预检请求， 通常用于跨域请求和CORS(跨资源共享)机制</p><p>一般是通过复杂跨域请求时才会发送<code>OPTIONS</code>请求</p><div class="info custom-block"><p class="custom-block-title">复杂跨域请求</p><p>复杂跨域请求满足以下任意条件就会触发</p><ol><li>请求方法不是<code>GET/POST/HEAD</code>时</li><li>Content-Type并非application/x-www-form-urlencoded, multipart/form-data, 或text/plain</li><li>请求设置了自定义的header字段</li></ol></div><h5 id="用途" tabindex="-1">用途 <a class="header-anchor" href="#用途" aria-label="Permalink to &quot;用途&quot;">​</a></h5><ol><li><p><strong>检查服务器支持的方法</strong></p><p><code>OPTIONS</code>请求可以告诉客户端服务器支持哪些 HTTP 方法（如 <code>GET</code>、<code>POST</code>、<code>PUT</code>、<code>DELETE</code> 等）。</p></li><li><p><strong>CORS预检</strong></p><p>在进行跨域请求时，浏览器会自动发送<code>OPTIONS</code>请求，以确定实际请求（如 <code>POST</code> 或 <code>GET</code>）是否安全。</p></li><li><p><strong>访问控制</strong></p></li></ol><p><code>OPTIONS</code>请求也可以用于访问控制，服务器可以根据请求头信息（如 <code>Origin</code>、<code>Access-Control-Request-Method</code>、<code>Access-Control-Request-Headers</code> 等）来决定是否允许请求。</p><h3 id="封装一个判断是否为数字类型的方法-返回布尔值" tabindex="-1">封装一个判断是否为数字类型的方法，返回布尔值 <a class="header-anchor" href="#封装一个判断是否为数字类型的方法-返回布尔值" aria-label="Permalink to &quot;封装一个判断是否为数字类型的方法，返回布尔值&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> isNumber </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> &lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;(</span><span style="color:#BABED8;font-style:italic;">num</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> T</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> boolean</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#82AAFF;">isNaN</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">num</span><span style="color:#F07178;">)) </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  if</span><span style="color:#F07178;"> (</span><span style="color:#89DDFF;">typeof</span><span style="color:#BABED8;"> num</span><span style="color:#89DDFF;"> ===</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">number</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#FF9CAC;"> true</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    return</span><span style="color:#FF9CAC;"> false</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="箭头函数指向" tabindex="-1">箭头函数指向 <a class="header-anchor" href="#箭头函数指向" aria-label="Permalink to &quot;箭头函数指向&quot;">​</a></h3><p>箭头函数的this指向 指向的是由其所属函数或全局作用域决定的</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> config </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> configs </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> b</span><span style="color:#89DDFF;"> ()</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">b</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">configs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">b</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> config </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">a</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> b</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> ()</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">}}</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> other </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> {</span><span style="color:#F07178;">c</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;"> 1</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">other</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> config</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">b</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#BABED8;">other</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">b</span><span style="color:#BABED8;">()</span></span></code></pre></div><h3 id="promise类方法" tabindex="-1">Promise类方法 <a class="header-anchor" href="#promise类方法" aria-label="Permalink to &quot;Promise类方法&quot;">​</a></h3><h5 id="promise-all" tabindex="-1">Promise.all() <a class="header-anchor" href="#promise-all" aria-label="Permalink to &quot;Promise.all()&quot;">​</a></h5><p><code>Promise.all</code>的作用是将多个<code>Promise</code>包裹在一起形成一个新的<code>Promise</code>，并且这个新的Promise的状态是由包裹的Promise的状态共同决定的：</p><ul><li><p>当所有的<code>Promise</code>的状态变成<code>fullfilled</code>，新的Promise的状态变为<code>fullfilled</code>，并将所有<code>promise</code>的返回值组成一个数组</p></li><li><p>当有一个<code>Promise</code>的状态变成<code>reject</code>,新的<code>Promise</code>的状态会变成<code>reject</code>，并且会将第一个<code>reject</code>的<code>Promise</code>的返回值作为参数</p></li></ul><h5 id="promise-resolve" tabindex="-1">Promise.resolve <a class="header-anchor" href="#promise-resolve" aria-label="Permalink to &quot;Promise.resolve&quot;">​</a></h5><p><code>Promise.resolve(res)</code>方法返回一个以给定值解析后的<code>Promise</code>对象，有时候我们已经有一个现成的值希望将其转换成<code>Promise</code>可以使用该类方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">  Promise</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">这是一个Promise</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  //等价于</span></span>
<span class="line"><span style="color:#89DDFF;">  new</span><span style="color:#FFCB6B;"> Promise</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">resolve</span><span style="color:#C792EA;">=&gt;</span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">这是一个Promise</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">))</span></span></code></pre></div><h5 id="promise-race" tabindex="-1">Promise.race <a class="header-anchor" href="#promise-race" aria-label="Permalink to &quot;Promise.race&quot;">​</a></h5><p>如果有一个<code>Promise</code>有了结果，我们就希望决定最终新<code>Promise</code>的状态，那么可以使用race方法</p><h5 id="promise-any" tabindex="-1">Promise.any <a class="header-anchor" href="#promise-any" aria-label="Permalink to &quot;Promise.any&quot;">​</a></h5><p><code>any</code>方法是ES12中新增的方法，和<code>race</code>方法是类似的,不同的是<code>any</code>方法会等到一个<code>fulfilled</code>状态，才会决定新<code>Promise</code>的状态，如果所有的<code>Promise</code>都是<code>reject</code>的，那么也会等到所有的<code>Promise</code>都变成<code>rejected</code>状态。</p><blockquote><p>如果所有的Promise都是reject的，那么会报一个AggregateError的错误 <code>All promises were rejected</code></p></blockquote><h5 id="promise-allsettled" tabindex="-1">Promise.allSettled <a class="header-anchor" href="#promise-allsettled" aria-label="Permalink to &quot;Promise.allSettled&quot;">​</a></h5><p><code>all</code>方法有一个缺陷：当有其中一个<code>Promise</code>变成<code>reject</code>状态时，新<code>Promise</code>就会立即变成对应的<code>reject</code>状态。那么对于<code>resolved</code>的，以及依然处于<code>pending</code>状态的<code>Promise</code>，我们是获取不到对应的结果的 在ES11（ES2020）中，添加了新的API <code>Promise.allSettled</code>，该方法会在所有的<code>Promise</code>都有结果（<code>settled</code>），无论是<code>fulfilled</code>，还是<code>rejected</code>时，才会有最终的状态</p><h3 id="typescript问题" tabindex="-1">Typescript问题 <a class="header-anchor" href="#typescript问题" aria-label="Permalink to &quot;Typescript问题&quot;">​</a></h3><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#C792EA;">interface</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  username</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  userid</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  children</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#BABED8;">[]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> orgTreeData</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#BABED8;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">  {</span></span>
<span class="line"><span style="color:#F07178;">    username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    children</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span></span>
<span class="line"><span style="color:#F07178;">        username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        children</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">          {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">          {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">          {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">郭子鑫</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> }</span></span>
<span class="line"><span style="color:#BABED8;">        ]</span></span>
<span class="line"><span style="color:#89DDFF;">      },</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#BABED8;">    ]</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  {</span></span>
<span class="line"><span style="color:#F07178;">    username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    children</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> [</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#89DDFF;">      {</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-1-0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> },</span></span>
<span class="line"><span style="color:#BABED8;">    ]</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  {</span></span>
<span class="line"><span style="color:#F07178;">    username</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    userid</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">0-2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#BABED8;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 问题1： ts 描述 treeData 数据结构</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#F07178;">  username</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  userid</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  children</span><span style="color:#89DDFF;">?:</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#BABED8;">[]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 问题2： 写一个根据用户名称，查找userid的方法， 并且找到自己的姓名对应的userid ts来实现</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> getUserId </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">treeData</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> userName</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> string</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 递归遍历treeData</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> treeData</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 查找children节点上是否包含目标用户</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">children</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">      const</span><span style="color:#BABED8;"> deepUserId</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> getUserId</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> userName</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">deepUserId</span><span style="color:#89DDFF;"> !==</span><span style="color:#89DDFF;"> undefined</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">        return</span><span style="color:#BABED8;"> deepUserId</span></span>
<span class="line"><span style="color:#89DDFF;">      };</span></span>
<span class="line"><span style="color:#89DDFF;">    };</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 设置边界条件， 找到目标用户名称后终止， 返回对应的userId</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">username</span><span style="color:#89DDFF;"> ===</span><span style="color:#BABED8;"> userName</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">      return</span><span style="color:#89DDFF;"> \`\${</span><span style="color:#BABED8;">userName</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">的用户ID为：</span><span style="color:#89DDFF;">\${</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">userid</span><span style="color:#89DDFF;">}\`</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">  };</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 如果未找到匹配的用户名，返回 undefined</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">未匹配到目标用户</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> targetUserId</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> getUserId</span><span style="color:#BABED8;">(orgTreeData</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">郭子鑫</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> emptyUserId</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#89DDFF;"> =</span><span style="color:#82AAFF;"> getUserId</span><span style="color:#BABED8;">(orgTreeData</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">测试不存在用户</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> targetUserId)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> emptyUserId)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 问题3： 获取最长路径， 如 [&#39;0-0&#39;, &#39;0-0-0&#39;, &#39;0-0-0-0&#39;]格式 由userid组成，多个最长返回任意一个 ts来实现</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> getLongPath </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">treeData</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> TreeData</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> path</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#BABED8;">[]</span><span style="color:#89DDFF;">):</span><span style="color:#FFCB6B;"> string</span><span style="color:#BABED8;">[] </span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">  let</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> []</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 遍历树结构</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  for</span><span style="color:#F07178;"> (</span><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;"> of</span><span style="color:#BABED8;"> treeData</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 收集用户ID</span></span>
<span class="line"><span style="color:#C792EA;">    const</span><span style="color:#BABED8;"> newPath</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> [</span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">path</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">userid</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    // 遍历children节点， 继续递归收集用户ID</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">    if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;"> &amp;&amp;</span><span style="color:#BABED8;"> item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#F78C6C;"> 0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#C792EA;">      const</span><span style="color:#BABED8;"> deepLongPath</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#F07178;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getLongPath</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">item</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">children</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> newPath</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 这里直接比较收集的数组的长度, 将最长的数组重新赋值给longPath</span></span>
<span class="line"><span style="color:#BABED8;">      longPath</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> deepLongPath</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> deepLongPath</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#89DDFF;font-style:italic;"> else</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      //设置边界条件 当节点不再存在children， 比较收集的数组的长度， 将最长的数组重新赋值给longPath</span></span>
<span class="line"><span style="color:#BABED8;">      longPath</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> &gt;</span><span style="color:#BABED8;"> newPath</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">length</span><span style="color:#89DDFF;"> ?</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;"> :</span><span style="color:#BABED8;"> newPath</span></span>
<span class="line"><span style="color:#89DDFF;">    };</span></span>
<span class="line"><span style="color:#89DDFF;">  };</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> longPath</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;"> string</span><span style="color:#BABED8;">[] </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> getLongPath</span><span style="color:#BABED8;">(orgTreeData</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> [])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(longPath)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,56))])}const g=p(F,[["render",D]]);export{h as __pageData,g as default};
