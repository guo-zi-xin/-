import{_ as a}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.QrrBmjNq.js";import{_ as o,c as s,j as p,a as i,G as r,a6 as n,o as l}from"./chunks/framework.8Xbk4tT3.js";import"./chunks/theme.VasyDUoe.js";const h=JSON.parse('{"title":"webpack5 主要升级点","description":"","frontmatter":{},"headers":[],"relativePath":"tools/build/webpack5主要升级点.md","filePath":"tools/build/webpack5主要升级点.md","lastUpdated":1709109078000}'),c={name:"tools/build/webpack5主要升级点.md"};function b(d,e,g,k,m,u){const t=a;return l(),s("div",null,[e[0]||(e[0]=p("h1",{id:"webpack5-主要升级点",tabindex:"-1"},[i("webpack5 主要升级点 "),p("a",{class:"header-anchor",href:"#webpack5-主要升级点","aria-label":'Permalink to "webpack5 主要升级点"'},"​")],-1)),r(t,{readTime:"1",words:"367"}),e[1]||(e[1]=n("<ul><li><p><strong>持久缓存(Persistent Caching)</strong></p><p>webpack5 引入了 更好的持久缓存机制， 利用了更稳定的HashedModuleldsPlugin和 NamedChunksPlugin， 以改善构建性能。</p></li><li><p><strong>Tree-Shaking改进</strong></p><p>webpack5 对Tree-Shaking进行了改进， 提供了更好的代码优化，以便删除未使用的代码。</p></li><li><p><strong>支持WebAssembly(WASM)</strong></p><p>webpack5 对 WebAssembly提供了原生的支持，使得在项目中使用WebAssembly更加方便。</p></li><li><p><strong>支持ES6模块导入(Dynamic Import)</strong></p><p>Webpack5对动态导入语法(import()) 提供了更好的支持，可以更轻松地使用代码分割。</p></li><li><p><strong>模块联邦(Module Fedration)</strong></p><p>这是Webpack5的一项重大功能，允许多个独立的webpack构建连接在一起，实现模块共享， 从而更好地支持微服务架构。</p></li><li><p><strong>缓存组(Caching Groups)</strong></p><p>新的缓存组概念被引入，可以更细粒度地控制模块的缓存策略。</p></li><li><p><strong>内置代码分割优化(optimization.splitChunks)</strong></p><p>webpack5 通过 optimization.splitChunks进行了重新设计，提供了灵活的选项，是的代码分割更为强大和易用。</p></li><li><p><strong>默认配置优化</strong></p><p>Webpack5 默认配置中的一些优化，使得开箱即用的性能更好。</p></li><li><p><strong>提高构建性能</strong></p><p>Webpack引入了一些性能优化，包括更快地持久化缓存，更快地构建速度等。</p></li><li><p><strong>移除废弃特性</strong></p><p>做未更新， webpack移除了一些过时的特性和API，因此再升级时需要注意潜在的破坏性变化。</p></li></ul>",1))])}const P=o(c,[["render",b]]);export{h as __pageData,P as default};
