const e={map:'[{"n数之和":["0.0"],"一些整理的算法":["1.0"],"三数之和":["2.0"],"两数之和":["3.0"],"删除有序数组中的重复项":["4.0"],"合并两个有序数组":["5.0"],"寻找数组中最长驼峰":["6.0"],"搜索插入位置":["7.0"],"移除元素":["8.0"],"计数器":["9.0"],"数组中心下标索引":["10.0"],"首位不重复字符索引":["11.0"],"学习angularjs":["12.0"],"learning":["12.1"],"本书地址":["12.2"],"章节目录":["12.3"],"本书的读者":["12.4"],"我应用angularjs的方法":["12.5"],"这样做的好处":["12.6"],"为什么选择angularjs":["12.7"],"我选择angularjs的历程":["12.8"],"为什么写这本书":["12.9"],"另":["12.10"],"版权声明":["12.11"],"summary":["13.0"],"环境的准备":["14.0"],"webstorm":["14.1"],"chrome":["14.2"],"node":["14.3","117.0"],"其它工具":["14.4"],"其它工具和库":["14.5"],"项目的创建和配置":["15.0"],"创建基本的文件结构":["15.1"],"public":["15.2"],"配置并初始化bower":["15.3"],"打开命令行工具":["15.4"],"初始化bower":["15.5"],"bowerrc":["15.6"],"配置完成":["15.7"],"angularjs的第一步":["16.0"],"在项目中安装angularjs的基本库":["16.1"],"建立":["16.2"],"引入angularjs的库文件":["16.3"],"第一个程序hello":["16.4"],"运行hello":["16.5"],"学习angularjs的规划":["17.0"],"基本表达式":["18.0"],"引入":["19.0","19.1"],"其它属性":["19.2"],"模板":["19.3"],"angularjs初始化":["20.0"],"创建一个独立的javascript文件":["20.1"],"angularjs的作用域":["20.2"],"引入文件的顺序":["20.3"],"控制器":["21.0"],"ng":["21.1","23.1","26.1","26.5","33.1"],"javascript部分":["21.2"],"html中调用":["21.4"],"为什么要额外封装一层":["21.5"],"数据绑定data":["22.0"],"功能的绑定":["22.1"],"更多地方的绑定":["22.2"],"条件判断":["23.0"],"冒号中的表达式":["23.2"],"重复语句":["24.0"],"index":["24.1"],"过滤器":["25.0"],"多个filter同时应用":["25.1"],"创建自己的过滤器":["25.2"],"通过":["25.3","32.4"],"一些值得注意的用法":["25.4"],"样式选择器":["26.0"],"动态化的样式输入":["26.2"],"结合两种模式的应用示例":["26.3"],"css动画效果应用":["26.4"],"下拉列表选项":["27.0"],"增加未选中的选项":["27.1"],"按组排列":["27.2"],"禁用某些选项":["27.3"],"将对象作为参数传入":["27.4"],"本章总结":["28.0","37.0"],"深入学习angularjs":["29.0"],"directive在系统中的使用":["29.1"],"学习directive的路程":["29.2"],"制作一个自定义的directive":["30.0"],"代码分析":["30.1"],"template":["30.2"],"用替换而不是插入的方式应用directive":["30.3"],"restrict":["30.4"],"directive的命名和使用规则":["31.0"],"命名规则":["31.1"],"使用规则":["31.2"],"为什么会有这种差异":["31.3"],"怎么实现的":["31.4"],"连接符":["31.5"],"为什么要先去除":["31.6"],"让directive支持传入数据":["32.0"],"directive的":["32.1"],"scope":["32.2"],"在一个":["32.3"],"在directive中修改控制器中的数据":["32.5"],"以只读的方式传入数据":["32.6"],"在directive中进行函数回调":["32.7"],"使用":["33.0","66.7","66.8","103.13"],"使用函数获取templateurl":["33.2"],"让directive动起来":["34.0"],"element":["34.1","34.2"],"在angularjs中使用jquery":["34.3"],"实际体验":["34.4"],"在":["34.5"],"把directive变为一个容器":["35.0"],"directive之间互相通讯":["36.0"],"angular1":["38.0"],"框架相关":["39.0","65.0"],"ssr相关":["40.0"],"对于ssr的理解":["40.1"],"ssr的局限":["40.2"],"react":["41.0","42.1","42.2","42.4","42.7","42.10","42.11","42.12","45.0","47.1","66.10","66.18","66.19","73.12","74.10","77.2"],"react一些相关":["42.0"],"react生命周期":["42.3"],"react的严格模式":["42.5"],"严格模式优点":["42.6"],"jsx与js的区别":["42.8"],"react中必须要使用":["42.9"],"受控组件":["42.13"],"useeffect和uselayouteffect的区别":["43.0"],"何时使用":["43.1","43.2","67.24"],"使用注意事项":["43.3"],"usereducer":["44.0","69.34"],"用法":["44.1"],"参数":["44.2"],"reducer":["44.3"],"initialarg":["44.4"],"init":["44.5"],"返回值":["44.6"],"当前的state":["44.7"],"dispatch函数":["44.8"],"计数器案例":["44.9"],"购物车案例":["44.10"],"参考文档":["44.11"],"父组件调用子组件":["45.1"],"虚拟dom与diff算法":["46.0"],"结构对比":["46.1"],"流程对比":["46.2"],"什么是虚拟dom":["46.3","66.2"],"虚拟dom的优势":["46.4"],"虚拟dom可以提高效率":["46.5"],"超强的兼容性":["46.6"],"高阶函数hoc":["47.0"],"usestate":["47.2","69.28"],"vue":["48.0","51.0","54.0","55.0","66.3","67.0","67.10","67.13","67.14","67.15","67.17","67.21","67.25","67.32","67.36","67.42","67.48","67.53","67.55","70.5"],"keep":["49.0"],"引用":["49.1","50.6","93.3","107.5","112.8","123.13"],"nexttick":["50.0"],"异步任务队列":["50.1"],"vue2":["50.2","52.1"],"nexttick源码":["50.3"],"vue3":["50.4","50.5","52.4","67.56"],"定义":["51.1","101.1","122.1","127.1","130.1","133.1","134.1"],"常见的vue指令":["51.2"],"v":["51.3","51.4","51.5","51.6","51.7","67.7","67.8","67.9","69.11"],"vue生命周期":["52.0"],"具体分析":["52.2"],"题外话":["52.3"],"具体功能":["52.5"],"watch":["53.0","53.1"],"watch参数":["53.2"],"第一个参数":["53.3","53.8"],"第二个参数":["53.4","53.9"],"第三个参数":["53.5"],"watcheffect":["53.6"],"watcheffect参数":["53.7"],"停止监听":["53.10"],"watch和":["53.11"],"区别":["53.12","111.5","115.5"],"访问":["53.13"],"小技巧":["53.14"],"关闭监听器":["53.15"],"异步数据加载":["53.16"],"单向绑定":["54.1"],"双向绑定":["54.2"],"双向绑定原理":["54.3"],"viewmodel":["54.4"],"实现":["54.5"],"代码实现":["54.6","86.1"],"编译":["54.7"],"依赖收集":["54.8"],"来源":["54.9","95.8","115.7"],"首页加载白屏的原因":["55.1"],"spa":["55.2","55.3"],"解决方案":["55.4"],"主要记录了工作中遇到的问题":["56.0"],"import":["57.3"],"typescript中":["58.2","78.9"],"typescript中的":["58.3"],"小程序相关":["61.0"],"小程序的优势":["61.1"],"小程序的页面构成":["61.2"],"小程序的生命周期":["61.3"],"小程序如何请求数据":["61.4"],"如何提高小程序的首屏加载时间":["61.5"],"请简述你经常使用的小程序的组件":["61.6"],"wxss":["61.7"],"小程序如何实现响应式":["61.8"],"怎么优化小程序":["61.9"],"小程序如何显示用户头像与用户名":["61.10"],"请谈谈小程序的双向绑定和":["61.11"],"小程序中传参是怎么传的":["61.12"],"和":["61.13"],"说一下微信小程序的适配问题":["61.14"],"小程序页面间有哪些传递数据的方法":["61.15"],"你是怎么封装微信小程序的数据请求的":["61.16"],"小程序跳转页面的方式":["61.17"],"微信小程序如何跳转到其它小程序":["61.18"],"小程序加载过慢的解决方式":["61.19"],"前端基础":["62.0"],"javascript":["63.0","63.2","63.27","63.37","63.38","71.6"],"javascript的语言特性":["63.1"],"ajax使用":["63.3"],"ajax请求返回的状态码":["63.4"],"闭包":["63.5","73.17"],"闭包的定义":["63.6"],"为什么要用":["63.7"],"闭包的特性":["63.8"],"事件委托":["63.9"],"事件委托优点":["63.10"],"事件源":["63.11"],"事件冒泡":["63.12"],"本地存储与cookie的区别":["63.13"],"es6新特性":["63.14","88.0","89.0"],"数组的方法":["63.15"],"json":["63.16","69.53"],"面向对象":["63.17"],"普通函数与构造函数区别":["63.18"],"原型与原型链":["63.19","107.0"],"promise":["63.20","70.1","73.4","75.11","75.12","75.13","75.14","75.15"],"async函数":["63.21"],"get":["63.22","63.23","89.4"],"事件流":["63.24"],"事件流定义":["63.25"],"改变this指针的指向函数":["63.26"],"拖拽功能的实现":["63.28"],"javascript的垃圾回收机制":["63.29"],"必要性":["63.30"],"常见的垃圾回收方式":["63.31"],"javascript监听对象属性的改变":["63.32"],"手动实现一个":["63.33"],"怎么控制一次加载一张图片":["63.34"],"方法1":["63.35"],"方法2":["63.36"],"跨域问题":["63.39","77.12"],"为什么会出现跨域":["63.40"],"同源策略":["63.41"],"减少页面加载时间":["63.42"],"this":["63.43"],"数组去重":["63.44","103.12"],"深拷贝与浅拷贝":["63.45"],"for循环与map循环有什么区别":["63.46"],"类的继承":["63.47","113.0"],"同步与异步的区别":["63.48"],"重绘和回流":["63.49"],"http":["63.50","77.7","77.8","77.19","77.20"],"如何对网站的文件和资源进行优化":["63.51"],"预加载与懒加载的区别":["63.52"],"防抖与节流":["63.53","115.0"],"xss":["63.54","95.3","95.7"],"html":["64.0"],"常用的图片的格式有哪些":["64.1"],"jpeg":["64.2"],"png":["64.3"],"gif":["64.4"],"css的盒模型":["64.5"],"标准盒模型":["64.6"],"ie盒模型":["64.7"],"视频":["64.8"],"视频标签":["64.9"],"音频标签":["64.10"],"html5新增的内容":["64.11"],"新增的语义化标签":["64.12"],"css3新增特性":["64.13"],"border":["64.14"],"background":["64.15"],"gradient":["64.16"],"word":["64.17"],"transform":["64.18"],"transition":["64.19"],"animation":["64.20"],"清除浮动":["64.21"],"定位属性":["64.22"],"元素居中":["64.23"],"水平居中":["64.24"],"垂直居中":["64.25"],"水平垂直居中":["64.26"],"三栏布局方式两边固定":["64.27"],"浏览器显示小于12px的文字":["64.28"],"css选择器":["64.29"],"种类":["64.30"],"优先级":["64.31"],"可继承属性":["64.32"],"图片加载缓慢问题":["64.33"],"行内元素":["64.34"],"margin与padding使用场景":["64.35"],"flex":["64.36"],"标签的禁用":["64.37"],"px":["64.38"],"媒体查询":["64.39"],"网页的三层结构":["64.40"],"doctype":["64.41"],"html5":["64.42","71.4"],"浏览器性能优化":["64.43"],"加载阶段的优化":["64.44"],"交互阶段的优化":["64.45"],"回流和重绘":["64.46"],"浏览器缓存机制":["64.47"],"浏览器输入网址到页面渲染的全过程":["64.48"],"如何画一条0":["64.49"],"关于":["64.50"],"双边距重叠":["64.51"],"react相关":["66.0"],"常用的react":["66.1","69.27"],"受控组件和非受控组件的区别":["66.4"],"基于类的":["66.5"],"组件的生命周期方法是什么":["66.6"],"如何跟踪功能组件的卸载":["66.9"],"什么是state管理器":["66.11"],"在哪些状态下可以使用本地状态":["66.12"],"redux":["66.13","66.15"],"什么是":["66.14"],"简述":["66.16"],"axios":["66.17"],"diff":["66.20"],"为什么虚拟":["66.21"],"何为高阶组件":["66.22"],"vue的核心":["67.1"],"核心思想":["67.2"],"vue中的单项数据流":["67.3"],"vue中常用的修饰符":["67.4"],"计算属性":["67.11"],"vue中跳转路由的方式":["67.12"],"基本原理":["67.16"],"hash":["67.18"],"history":["67.19"],"两者区别":["67.20"],"路由参数":["67.22"],"查询参数":["67.23"],"插值":["67.26"],"绑定属性":["67.27"],"动态类绑定":["67.28"],"动态样式绑定":["67.29"],"表单输入绑定":["67.30"],"事件绑定":["67.31"],"全局路由钩子":["67.33"],"路由独享守卫":["67.34"],"组件内守卫":["67.35"],"组成":["67.37"],"setup标签版本":["67.38"],"子组件传递给父组件参数":["67.39"],"setup函数":["67.40"],"setup标签":["67.41"],"默认内容":["67.43"],"具名插槽":["67.44"],"动态插槽":["67.45"],"作用域插槽":["67.46"],"具名作用域插槽":["67.47"],"类型":["67.49"],"详细信息":["67.50"],"示例":["67.51","134.3"],"计算属性与watch的区别":["67.52"],"vue中":["67.54"],"vuex":["67.57"],"面试相关问题":["68.0"],"关于vue组件通信":["69.1"],"props":["69.3"],"emit":["69.5"],"ref":["69.7"],"provide":["69.9"],"mitt":["69.13"],"pinia":["69.15"],"react中遇到过什么坑":["69.16"],"不正确地使用状态更新":["69.17"],"使用索引作为":["69.18"],"忘记绑定事件处理程序":["69.19"],"忘记在条件渲染中处理":["69.20"],"在渲染函数中定义函数":["69.21"],"ssr中node的配置消耗的qps":["69.22"],"react的生命周期":["69.23"],"挂载阶段":["69.24"],"更新阶段":["69.25"],"卸载阶段":["69.26"],"useeffect":["69.29"],"usecontext":["69.30"],"useref":["69.31"],"usecallback":["69.32"],"usememo":["69.33"],"uselayouteffect":["69.35"],"什么是虚拟滚动":["69.36"],"lighthouse主要使用什么性能指标":["69.37"],"主要检测指标":["69.38"],"评分说明":["69.39"],"三种使用方式":["69.40"],"跨页面通信使用什么方式呢":["69.41"],"url":["69.42"],"local":["69.43"],"session":["69.44"],"cookies":["69.45"],"postmessage":["69.46"],"websocket":["69.47"],"跨域的方法":["69.48"],"jsonp":["69.49"],"cors":["69.50"],"代理服务器":["69.51"],"使用跨域资源共享":["69.52"],"通过iframe标签跨页面通信遇到过什么问题":["69.54"],"有了解过mono":["69.55"],"usememo可以在其它地方调用么":["69.56"],"项目中做了哪些性能优化":["69.57"],"构建工具有什么性能优化":["69.58"],"基本数据类型":["69.59","72.29","106.1"],"在项目中有自己实现过hook吗":["69.60"],"继承方式":["70.2"],"项目中遇到哪些难点":["70.3"],"封装一个tree组件":["70.4"],"防抖函数":["70.6"],"实现一个event类":["70.7"],"适配多端":["70.8"],"taro如何实现多端适配的":["70.9"],"小程序双线程有了解过吗":["70.10"],"模块化":["70.11","88.23"],"esmodule":["70.12"],"项目中遇到过什么难点":["71.1"],"拖拽的功能实现主要使用的什么api":["71.2"],"drag":["71.3"],"css":["71.5","79.0","80.0","109.6"],"typescript常用的类型工具":["71.7"],"vuex和pinia的区别":["71.8"],"option":["71.9"],"页面从url到渲染完成发生了什么":["72.2"],"什么是强缓存":["72.3"],"dns解析的是什么":["72.4"],"性能优化":["72.5","109.5"],"react常用的hook":["72.6"],"useeffect的副作用指的是什么":["72.7"],"重绘和重排":["72.8"],"防抖和节流":["72.9"],"dns是去哪里获取ip呢":["72.10"],"cookie和":["72.11"],"假如上线遇到一个bug":["72.12"],"react简介和它的优点":["72.14"],"常用的hooks":["72.15"],"react组件间通信方式":["72.16"],"如何实现一个两边盒子固定":["72.17"],"如何实现盒子垂直居中":["72.18"],"js常用的数组方法":["72.19"],"es6新语法有哪些":["72.20"],"reduce的方法":["72.21"],"什么是闭包":["72.22"],"redux是什么":["72.23"],"如何实现一个两个已经排序的数组合并后还是排序好的数组":["72.24"],"js中如何进行数组排序":["72.25"],"输入":["72.26"],"js的事件循环机制":["72.27"],"什么是原型链":["72.28"],"判断基本数据类型的方法":["72.30"],"instanceof原理":["72.31"],"es6常用语法":["73.1"],"css盒模型":["73.2"],"promise和":["73.3"],"react组件传参":["73.5"],"父组件传子组件":["73.6"],"通过props参数进行传递":["73.7"],"子组件传递给父组件":["73.8"],"使用回调函数":["73.9"],"通过ref":["73.10"],"跨组件传值":["73.11"],"css3常用属性":["73.13"],"常用布局方式":["73.14"],"css实现垂直居中":["73.15"],"宏任务和微任务的关系":["73.16"],"使用场景":["73.18","103.5","134.2"],"react18新特性":["73.19"],"升级":["73.20"],"setstate异步同步":["73.21"],"新增api":["73.22"],"严格模式":["73.23"],"在应用程序启动时禁用严格模式":["73.24"],"并发模式":["73.25"],"null":["74.1","74.3"],"undefined":["74.2"],"联合类型和交叉类型的区别":["74.4"],"交叉类型":["74.5","123.1"],"联合类型":["74.6","123.2"],"实现千分号分隔符功能":["74.7"],"虚拟滚动":["74.8"],"react有哪些性能优化":["74.9"],"n":["74.11"],"settimeout":["74.12","104.1"],"网格布局":["74.13"],"容器属性":["74.14"],"display属性":["74.15"],"grid":["74.16","74.17","74.18","74.19","74.22","74.24","74.25"],"justify":["74.20","74.21","74.26"],"项目属性":["74.23"],"创建一个递增的数字数组":["75.1"],"reduce方法的使用":["75.2"],"js事件循环机制":["75.3"],"封装一个多维数组转一维数组的方法":["75.4"],"解析url参数的函数":["75.5"],"option请求":["75.6"],"用途":["75.7"],"封装一个判断是否为数字类型的方法":["75.8"],"箭头函数指向":["75.9"],"promise类方法":["75.10"],"typescript问题":["75.16"],"自我介绍":["77.1","78.1"],"vue2和vue3区别":["77.3"],"js":["77.4","77.5","77.21","77.22","109.7"],"微任务和宏任务哪个优先级更高":["77.6"],"浏览器加载url发生了哪些过程":["77.9"],"缓存判断什么来判断":["77.10"],"做一个性能监控工具":["77.11"],"做过小程序吗":["77.13"],"项目详细介绍一下":["77.14"],"ts":["77.15","77.16","122.0"],"怎么区分动态还是静态语言":["77.17"],"浏览器协商缓存":["77.18"],"set":["77.23","89.5","89.17","89.18"],"宏任务队列":["77.24"],"react的react":["78.2"],"react中usememo":["78.3"],"react中常见的hooks":["78.4"],"react中":["78.5"],"vue2和vue3的区别":["78.6"],"总结":["78.7","96.1","112.7","113.9"],"vue响应式如何实现的":["78.8"],"css中我想实现一个上下固定容器":["78.10"],"vue3中":["78.11"],"手写题":["78.12"],"css一些加载样式":["81.0"],"动画效果一":["81.1"],"动画效果二":["81.2"],"动画效果三":["81.3"],"动画效果四":["81.4"],"动画效果五":["81.5"],"动画效果六":["81.6"],"动画效果七":["81.7"],"动画效果八":["81.8"],"动画样式九":["81.9"],"动画效果十":["81.10"],"动画效果11":["81.11"],"动画效果12":["81.12"],"动画效果13":["81.13"],"动画效果14":["81.14"],"动画效果15":["81.15"],"css权重规则":["82.0"],"css背景动画":["83.0"],"方块跳动动画":["84.0"],"一些原生css样式与概念":["85.0"],"炫目动画":["86.0"],"es6":["87.0","87.36"],"字符串类型的扩展":["87.1"],"模版字符串":["87.2","88.14"],"模版标签函数":["87.3"],"string":["87.4","87.5","87.6","87.7","87.8","87.9","87.10"],"数组类型的扩展":["87.11"],"扩展运算符":["87.12"],"array":["87.13","87.14","87.15","87.16","87.17","87.18","101.0","103.0","110.1","110.2","110.3","110.4","110.5","110.6","110.7","110.8","110.9","110.10","110.11","110.12","110.13","110.14","110.15","110.16","110.17","110.18","110.19","110.20","110.21","110.23"],"对象类型的扩展":["87.19"],"属性的简洁表示法":["87.20"],"属性名表达式":["87.21","88.21"],"object":["87.22","87.23","87.24","87.25","106.3"],"正则的扩展":["87.26"],"regexp构造函数的扩展":["87.27"],"flags属性":["87.28"],"u修饰符":["87.29"],"y修饰符":["87.30"],"regexp":["87.31"],"正则方法调用变更":["87.32"],"函数类型的扩展":["87.33"],"基本用法":["87.34","121.1"],"运算符的扩展":["87.35"],"声明方式":["88.1"],"let":["88.2"],"const":["88.3"],"变量的解构赋值":["88.4"],"数组的解构":["88.5"],"对象的解构":["88.6"],"字符串的解构":["88.7"],"数值与布尔值的解构":["88.8"],"函数的参数的解构":["88.9"],"函数参数默认值":["88.10"],"箭头函数":["88.11"],"使用注意点":["88.12"],"箭头函数与普通函数的区别":["88.13"],"扩展操作符":["88.15"],"展开数组":["88.16"],"传递参数给函数":["88.17"],"浅拷贝数组或对象":["88.18"],"对象字面量简化":["88.19"],"属性的简介表示法":["88.20"],"类":["88.22"],"proxy":["89.1","89.2","89.3"],"apply":["89.6"],"reflect":["89.7"],"常用方法":["89.8"],"利用":["89.9"],"symbol":["89.10"],"map":["89.11","89.12"],"方法":["89.13"],"weekmap":["89.14"],"应用":["89.15","130.2"],"weakmap":["89.16"],"weakset":["89.19","89.21"],"weakset应用":["89.20"],"迭代器":["89.22","89.23"],"迭代器功能":["89.24"],"遍历过程":["89.25"],"原生具备":["89.26"],"迭代器对象方法":["89.27"],"使用场合":["89.28"],"for":["89.29"],"生成器":["89.30"],"特征":["89.31"],"js下载文件":["90.0"],"js中的元素尺寸与布局信息":["91.0"],"js解析url参数":["92.0"],"tcp的三次握手与四次挥手":["93.0"],"tcp三次握手":["93.1"],"tcp四次挥手":["93.2"],"tcp":["94.0"],"xss攻击与":["95.0"],"xss攻击":["95.1"],"常见注入方法":["95.2"],"防范方法":["95.4"],"csrf攻击":["95.5"],"防御方法":["95.6"],"js中call":["96.0"],"cookie":["97.0"],"从document":["97.1"],"写入document":["97.2"],"path":["97.3"],"domain":["97.4"],"expires":["97.5"],"secure":["97.6"],"eslint":["98.0"],"一些javascript基础知识与方法":["99.0"],"js模块化":["100.0"],"简单实现":["101.2"],"momentjs":["102.0"],"一":["102.1"],"二":["102.4"],"三":["102.5"],"功能":["103.1"],"参数值":["103.2"],"回调函数":["103.3"],"initialvalue":["103.4"],"一维数组求和":["103.6"],"累加对象数组里的值":["103.7"],"展平嵌套数组":["103.8"],"统计对象中值出现的次数":["103.9"],"按属性对对象进行分组":["103.10"],"使用扩展运算符和":["103.11"],"按顺序运行promise":["103.14"],"在稀疏数组中使用reduce":["103.15"],"非数组对象上调用reduce":["103.16"],"功能性函数管道":["103.17"],"settimeout与setinterval区别":["104.0"],"setinterval":["104.2"],"精度问题":["104.3"],"取消调度":["104.4"],"利用settimeout实现一个setinterval":["104.5"],"requestanimationframe":["104.6"],"对比":["104.7"],"关于this指向":["105.0"],"this指向的规律":["105.1"],"全局环境中的":["105.2"],"上下文对象中调用的":["105.3"],"通过bind":["105.4"],"构造函数和this":["105.5"],"箭头函数中的this":["105.6"],"this优先级":["105.7"],"前端数据类型":["106.0"],"复杂数据类型":["106.2"],"判断数据类型的方式":["106.4"],"前置知识":["107.1"],"prototype":["107.2"],"proto":["107.3"],"constructor":["107.4"],"变量的提升":["108.0"],"回流与重绘":["109.0"],"回流":["109.1"],"重绘":["109.2"],"render树":["109.3"],"何时触发回流和重绘":["109.4"],"数组常用的方法":["110.0"],"序列生成器":["110.22"],"浅拷贝与深拷贝":["111.0"],"数据类型存储":["111.1"],"浅拷贝":["111.2"],"手动实现":["111.3"],"深拷贝":["111.4"],"小结":["111.6"],"文章来源":["111.7","113.10"],"浏览器缓存":["112.0"],"优点":["112.1","113.1"],"浏览器缓存过程":["112.2"],"强缓存":["112.3"],"强缓存规则":["112.4"],"协商缓存":["112.5"],"协商缓存规则":["112.6"],"实现方式":["113.2"],"原型链继承":["113.3"],"构造函数继承":["113.4"],"组合继承":["113.5"],"原型式继承":["113.6"],"寄生式继承":["113.7"],"寄生组合式继承":["113.8"],"获取当前页面url信息":["114.0"],"节流":["115.1"],"节流实现方式":["115.2"],"防抖":["115.3"],"防抖实现方式":["115.4"],"应用场景":["115.6"],"node基础与拓展":["116.0"],"node特点":["117.1"],"typescript":["118.0","119.0"],"omit":["119.1"],"pick":["119.2"],"partial":["119.3"],"required":["119.4"],"readonly":["119.5"],"record":["119.6"],"exclude":["119.7"],"extract":["119.8"],"nonnullable":["119.9"],"returntype":["119.10"],"parameters":["119.11"],"constructorparameters":["119.12"],"thisparametertype":["119.13"],"instancetype":["119.14"],"awaited":["119.15"],"omitthisparameter":["119.16"],"thistype":["119.17"],"推荐文档":["120.0"],"枚举":["121.0"],"手动赋值":["121.2"],"常数项和计算所得项":["121.3"],"常数枚举":["121.4"],"外部枚举":["121.5"],"typescript中的高级类型":["123.0"],"类型守卫":["123.3"],"typeof":["123.4"],"instanceof":["123.5"],"自定义类型守卫":["123.6"],"in":["123.7"],"类型别名":["123.8"],"泛型式类型别名":["123.9"],"接口与类型别名":["123.10"],"元组类型":["123.11"],"infer":["123.12"],"一些微信小程序相关问题":["124.0"],"微信小程序":["125.0"],"数据结构":["126.0"],"链表":["127.0"],"特点":["127.2"],"链表节点":["127.3"],"链表实现":["127.4"],"分类":["127.5"],"双向链表实现":["127.6"],"参考资料":["127.7"],"构建":["128.0"],"webpack5":["129.0"],"ast":["130.0"],"整体流程":["130.3"],"编译原理":["130.4"],"sourcemap":["131.0"],"什么是source":["131.1"],"source":["131.2","131.4"],"浏览器中如何使用source":["131.3"],"各个关键字处理示例":["131.5"],"cheap":["131.7"],"常见配置项的对比":["131.8"],"在项目中的使用":["131.9"],"一些css相关的工具":["132.0"],"unocss":["133.0"],"git":["134.0","135.0","136.0","137.0","137.1","138.0","139.0","139.1","140.0"],"操作步骤":["135.1","138.2"],"场景一":["137.2"],"场景二":["137.3"],"rebase":["138.1"],"常用的":["139.2"],"num":["139.9"],"删除分支":["140.1"],"同步到git仓库上":["140.2"],"git常用操作":["141.0"],"工作流程":["141.1"],"一些git常用操作与命令":["142.0"],"图片工具":["143.0"],"本地图片压缩工具":["144.0"]},{"0":["2.0","10.0","12.11","16.1","44.9","67.51","67.56","69.3","69.5","69.7","69.9","69.11","69.13","75.3","75.16","78.12","81.15","98.0","102.7","122.3","127.4","127.6"],"1":["2.0","7.0","8.0","11.0","12.0","12.1","12.4","12.6","12.7","16.1","17.0","40.2","44.10","54.5","63.18","63.42","63.44","63.51","64.12","64.21","64.24","64.25","64.26","64.27","64.28","64.33","69.38","72.26","73.11","73.14","73.15","73.20","73.21","73.22","74.7","74.11","75.3","75.4","75.5","75.7","76.0","78.3","78.9","78.12","87.12","87.14","88.5","88.9","88.12","89.25","93.2","102.2","102.6","102.7","102.9","105.1","105.7","107.1","110.1","110.14","111.4","112.2","112.4","117.1","121.1","122.2","123.10","127.6","131.5","131.8","134.3","135.1","136.1","137.2","139.3"],"2":["2.0","3.0","7.0","12.10","25.0","44.10","63.18","63.42","64.12","64.25","73.20","74.11","75.2","75.3","75.5","76.0","78.3","78.9","87.12","87.14","88.5","88.9","89.25","97.2","98.0","102.3","102.6","102.7","103.17","114.0","121.2","122.3","134.3","135.1","136.2","139.4"],"3":["6.0","7.0","44.10","63.18","75.5","76.0","87.12","88.5","88.9","89.25","102.6","102.8","121.2","122.4","136.3","137.2","139.5"],"4":["6.0","12.11","61.2","75.2","76.0","87.12","89.25","102.6","102.9","122.5","136.4","139.6"],"5":["6.0","7.0","16.1","76.0","87.12","102.10","108.0","139.7"],"6":["7.0","75.2","102.11","139.8"],"7":["3.0","6.0","102.12"],"8":["6.0","42.3","75.2","102.13","139.10"],"9":["102.14"],"10":["102.13","102.15"],"11":["3.0","102.7"],"12":["57.1"],"14":["6.0"],"15":["3.0","72.1"],"18":["114.0"],"20":["72.13"],"21":["103.10"],"23":["57.1","57.2","58.1","59.1","59.2","59.3","59.4","76.0"],"24":["71.0","77.0"],"50":["64.26"],"100":["44.10","63.4","69.39"],"123":["88.21"],"200":["44.10","89.5"],"234":["72.26","74.7"],"300":["44.10"],"567":["74.7"],"890":["74.7"],"1000":["76.0"],"1234":["25.0"],"2019":["102.7"],"2024":["69.0","70.0","74.0","75.0","76.0","78.0"],"8080":["114.0"],"231204":["57.0"],"231211":["58.0"],"231218":["59.0"],"240326":["72.0"],"1234567890":["72.26","74.7"],"请用算法实现":["0.0"],"从给定的无需":["0.0"],"不重复的数组a中":["0.0"],"取出n个数":["0.0"],"algorithm":["1.0"],"给你一个包含":["2.0"],"n":["2.0","5.0","9.0"],"个整数的数组":["2.0"],"nums":["2.0","3.0","4.0","7.0","8.0","10.0"],"判断":["2.0"],"中是否存在三个元素":["2.0"],"a":["2.0","74.11","88.5","88.21","89.28","90.0","105.7","108.0","111.4","119.5","127.6","131.5","136.2","137.2","137.3"],"b":["2.0","88.5","89.28","111.4","127.6","131.5","136.2","137.3"],"c":["2.0","12.11","75.5","88.5","89.28","111.4","136.2"],"使得":["2.0"],"请你找出所有满足条件且不重复的三元组":["2.0"],"注意":["2.0","27.3"],"答案中不可以包含重复的三元组":["2.0"],"示例":["2.0","3.0","6.0","11.0","74.14","89.4","123.2"],"javascript":["2.0","3.0","6.0","7.0","22.1","25.0","30.0","30.1","32.6","32.7","34.0","34.5","45.1","53.10","54.6","54.7","63.3","63.33","63.35","63.36","66.5","67.18","67.51","69.60","73.4","73.16","74.11","75.1","75.3","75.5","75.9","87.3","87.12","87.14","87.21","87.30","87.34","87.36","88.5","88.6","88.9","88.10","88.16","88.17","88.18","88.21","89.1","89.4","89.5","89.6","89.9","89.10","89.28","90.0","92.0","97.1","99.0","100.0","101.2","102.4","102.6","102.7","102.9","102.11","102.12","102.13","102.14","102.15","106.0","106.3","107.4","108.0","110.14","110.16","110.22","111.3","111.4","111.5","113.1","113.3","113.4","113.5","113.6","113.7","113.8","115.2","117.0","125.0","127.4","127.6","131.5","131.7"],"给定数组":["2.0"],"给定一个整数数组":["3.0"],"和一个目标值":["3.0"],"target":["3.0","7.0","87.23","89.1","89.2","89.4","89.8"],"请你在该数组中找出和为目标值的那":["3.0"],"两个":["3.0"],"整数":["3.0"],"并返回它们的数组下标":["3.0"],"你可以假设每种输入只会对应一个答案":["3.0"],"但是":["3.0","21.5","27.0","32.0","32.7"],"你不能重复利用这个数组中同样的元素":["3.0"],"给定":["3.0"],"给你一个":["4.0"],"非严格递增排列":["4.0"],"的数组":["4.0"],"请你":["4.0"],"原地":["4.0","8.0"],"删除重复出现的元素":["4.0"],"使每个元素":["4.0"],"只出现一次":["4.0"],"返回删除后数组的新长度":["4.0"],"元素的":["4.0"],"相对顺序":["4.0"],"应该保持":["4.0"],"一致":["4.0"],"然后返回":["4.0"],"中唯一元素的个数":["4.0"],"考虑":["4.0"],"的唯一元素的数量为":["4.0"],"给你两个有序整数数组":["5.0"],"nums1":["5.0"],"和":["5.0","30.0","32.7","36.0","42.1","47.2","51.1","52.4","52.5","53.0","53.12","57.3","63.3","64.32","64.50","66.5","66.17","66.18","67.16","67.52","69.7","69.9","70.12","71.9","74.1","74.11","78.2","78.11","89.6","89.7","89.9","94.0","95.7","103.12","107.1","110.21","112.4","112.6","121.3","127.6","130.4","138.2"],"nums2":["5.0"],"请你将":["5.0"],"合并到":["5.0","138.2"],"中":["5.0","49.0","52.4","52.5","63.27","69.56","88.10","106.3","119.1","119.8","138.2"],"使":["5.0","45.1"],"num1":["5.0"],"成为一个有序数组":["5.0"],"说明":["5.0","69.38","102.8"],"初始化":["5.0","52.2","135.0"],"需要合并的元素数量分别为":["5.0"],"m":["5.0","102.8","137.2","137.3"],"你可以假设":["5.0"],"有足够的空间":["5.0"],"空间大小大于或等于":["5.0"],"给定一个纯数字数组":["6.0"],"原地生成一个最长驼峰子数组":["6.0"],"元素大小从中间向两侧递减":["6.0"],"原数组":["6.0"],"const":["6.0","44.9","44.10","45.1","50.3","50.5","67.51","73.11","74.7","75.2","75.4","75.5","75.16","78.12","81.10","81.13","81.15","87.3","87.14","88.16","88.18","98.0","101.2","103.6","103.8","103.9","103.10","103.12","103.17","104.5","105.3","105.5","105.7","110.14","110.22","111.3","111.4","111.5","114.0","115.2","121.4","122.3","122.4","127.4","131.7"],"arr":["6.0","74.7","75.2","75.4","78.12","87.14","103.6","103.8","103.14","110.14","111.5"],"给定一个排序数组和一个目标值":["7.0"],"在数组中找到目标值":["7.0"],"并返回其索引":["7.0"],"如果目标值不存在于数组中":["7.0"],"返回它将会被按顺序插入的位置":["7.0"],"示例1":["7.0","78.12"],"var":["7.0","32.7","63.7","63.35","63.36","63.37","63.38","74.11","89.4","89.6","90.0","98.0","108.0","131.5"],"输出":["7.0","72.26","74.7","78.12","114.0"],"示例2":["7.0","78.12"],"给你一个数组":["8.0"],"和一个值":["8.0"],"val":["8.0"],"你需要":["8.0"],"移除所有数值等于":["8.0"],"的元素":["8.0"],"并返回移除后数组的新长度":["8.0"],"不要使用额外的数组空间":["8.0"],"你必须仅使用":["8.0"],"o":["8.0","98.0","117.1","127.2"],"额外空间并":["8.0"],"给定一个整型参数":["9.0"],"请你编写并返回一个":["9.0"],"counter":["9.0"],"函数":["9.0","34.0","63.33","67.51","106.3","113.4"],"这个":["9.0"],"给你一个整数数组":["10.0"],"请计算数组的":["10.0"],"中心下标":["10.0"],"数组":["10.0","88.15"],"是数组的一个下标":["10.0"],"其左侧所有元素相加的和等于右侧所有元素相加的和":["10.0"],"如果中心下标位于数组最左端":["10.0"],"那么左侧数之和视为":["10.0"],"因为在下标的左侧不存在元素":["10.0"],"这一点对于中心下标位于数组最右端同样适用":["10.0"],"如果数组有多个中心下标":["10.0"],"应该返回":["10.0"],"最靠近左边":["10.0"],"的那一个":["10.0"],"如果数组不存在中心下标":["10.0"],"给定一个字符串":["11.0"],"找到它的第一个不重复的字符":["11.0"],"并返回它的索引":["11.0"],"如果不存在":["11.0"],"则返回":["11.0"],"angularjs":["12.1"],"本书使用gitbook和github托管":["12.2"],"简介":["12.3","13.0","117.0","138.1"],"环境的准备":["12.3","13.0"],"项目的创建和配置":["12.3","13.0"],"angularjs的第一步":["12.3","13.0"],"学习和使用angularjs":["12.3","13.0"],"基本表达式":["12.3","13.0"],"本书会介绍如何应用angularjs":["12.4"],"但是本书不会涉及到javascript语法以及html和css的布局模式":["12.4"],"因此":["12.4","97.4"],"本书对读者有一定的前置技术要求":["12.4"],"在进行前端开发的工作之前":["12.5"],"我担任过几年的移动互联网产品经理":["12.5"],"这样实现后":["12.6"],"我认为主要有以下几个方面的好处":["12.6"],"以下内容部分读者可能会感到有些偏激":["12.8"],"但是这是对我":["12.8"],"一个拥有一些其它编程经验的前端入门者":["12.8"],"的心路记录":["12.8"],"2015年初":["12.8"],"在准备通过完全的web方式实现一个b":["12.8"],"s模式的企业服务网站之后":["12.8"],"我开始进行技术方面的准备":["12.8"],"在此之前":["12.8"],"我只有android客户端和php服务端的工作经验":["12.8"],"另外":["12.8"],"我对web的基本开发技能使用过一些":["12.8"],"由于业务需要":["12.9"],"我准备重新制作网站的v2版本":["12.9"],"在这个版本中":["12.9"],"为什么没有选择angular":["12.10"],"其实在重构时":["12.10"],"我优先的选择是angular":["12.10"],"typescript":["12.10","44.8","44.9","44.10","50.3","50.5","58.2","58.3","67.49","74.7","75.2","75.4","75.8","75.16","78.12","81.10","81.13","81.15","101.1","103.6","103.7","103.8","103.9","103.10","103.11","103.14","103.17","104.5","105.2","105.3","105.5","105.6","105.7","114.0","119.5","119.7","119.10","119.11","119.12","119.14","119.16","119.17","121.1","121.2","121.4","121.5","122.3","122.4","123.4","123.5","123.9","123.11","123.12"],"license":["12.11"],"text":["12.11","26.1","51.4","67.7"],"署名":["12.11"],"非商业性使用":["12.11"],"国际":["12.11"],"版权所有":["12.11"],"开发web网站":["14.0"],"使用合适的工具和环境会极大的提升开发的效率":["14.0"],"本章将讲述如何准备用于angularjs项目开发的环境":["14.0"],"本书将会使用如下工具和库":["14.0"],"在过去的开发中":["14.1"],"webstorm一直是我对编辑器的首选":["14.1"],"webstorm是商业化的产品":["14.1"],"如果长期使用":["14.1"],"需要花钱购买":["14.1"],"chrome浏览器的开发者工具可以极大的方便开发时的调试工作":["14.2"],"目前国内大量浏览器也是基于chrome的开源内核开发":["14.2"],"在通用性上也有保证":["14.2"],"js":["14.3","20.1","25.2","30.0","50.3","81.10","81.13","81.15","117.0"],"在安装好node":["14.4"],"js后":["14.4"],"可以通过node":["14.4"],"js的npm命令安装最新版本的npm":["14.4"],"cnpm":["14.4"],"bower":["14.4","15.5","16.1"],"如果已经存在":["14.4"],"自动安装最新版本":["14.4"],"使用命令如下":["14.4"],"windows上打开cmd":["14.4"],"os":["14.4"],"x上打开terminal":["14.4"],"bash":["14.4","15.5","16.1","134.3","135.1"],"windows":["14.4"],"npm":["14.4"],"install":["14.4","16.1"],"g":["14.4","90.0","111.4"],"其它的工具和库":["14.5"],"使用webstorm可以直接创建angularjs项目":["15.0"],"且会自动帮助你配置好项目并自动下载angularjs等库":["15.0"],"首先建立一个":["15.1"],"public":["15.1","15.6","16.2","20.1"],"目录":["15.1"],"目录设置的意义":["15.2"],"从字面意思即可理解":["15.2"],"bower的配置可以通过手动创建文件或者命令行的方法来进行":["15.3"],"webstorm内置了命令行工具":["15.4"],"在命令行下运行":["15.5"],"init":["15.5","111.5","137.3"],"你将会看到如下的若干选项":["15.5"],"并会自动的在项目的根目录生成一个":["15.5"],"json":["15.5","69.49","98.0"],"注":["15.5"],"以下的汉字部分都是额外加入的注释":["15.5"],"运行命令":["15.5"],"第一次运行的时候会弹出":["15.5"],"是否愿意提交匿名的统计信息":["15.5"],"随意选择":["15.5"],"may":["15.5"],"anonymously":["15.5"],"report":["15.5"],"usage":["15.5"],"配置文件":["15.6"],"由于我们建立了":["15.6"],"至此":["15.7"],"在前面的章节":["16.0"],"angularjs官网提供了通过bower安装的命令行":["16.1"],"我们需要做的":["16.1"],"就是在webstorm的命令行工具中":["16.1"],"运行如下命令":["16.1"],"angular":["16.1"],"rc":["16.1"],"save":["16.1"],"结果如下所示":["16.1"],"index":["16.2","16.5","30.0","46.3"],"html":["16.2","16.5","20.2","22.2","26.5","30.0","33.1","46.3","55.3","55.4","62.0","63.24","67.8","74.14","81.1","81.2","81.3","81.4","81.5","81.6","81.7","81.8","81.9","81.10","81.11","81.12","81.13","81.14","81.15","92.0","95.2","114.0"],"文件":["16.2","26.1","64.48"],"在":["16.2","20.1","23.0","25.2","49.0","52.4","52.5","67.46","69.56","73.15","73.21","89.10","95.2","106.3","122.1","127.2"],"目录下建立":["16.2"],"引入angularjs库文件很简单":["16.3"],"一行html语言加入html的head部分即可":["16.3"],"world":["16.4","16.5","88.10","108.0"],"是时候来测试下我们是否成功的引入了angularjs了":["16.4"],"我们在":["16.4"],"body":["16.4","20.2"],"右键选择":["16.5"],"我们已经完成了基本的准备工作":["17.0"],"从本章开始":["17.0","29.0"],"我们将专注于学习和应用angularjs":["17.0"],"作为一个功能完整的框架":["17.0"],"angularjs提供了一套开发理念和方法":["17.0"],"我们只需要掌握这套理念和方法即可明确如何实现我们需要的功能":["17.0"],"根据我个人的认知":["17.0"],"我设计了如下的学习路线图":["17.0"],"第四章":["17.0"],"基本语法":["17.0"],"在第三章的结尾":["18.0"],"我们制作了一个基本的hello":["18.0"],"world应用":["18.0"],"在其中":["18.0"],"我们使用了如下的语法":["18.0"],"ng":["19.0","19.1","19.2","19.3","20.0","20.2","21.0","21.2","21.4","22.0","23.0","24.0","24.1","26.0","26.2","27.0","27.2","27.3","27.4","32.1","32.3","32.4"],"include":["19.0","19.1"],"当html代码过于复杂":["19.1"],"或者期望建立单页应用":["19.1"],"single":["19.1","55.2"],"page":["19.1","55.2","114.0"],"application":["19.1","55.2"],"spa":["19.1"],"时":["19.1"],"template":["19.3","32.5","33.0","33.1","35.0","49.0","50.2","67.37","67.38","67.41","67.46","67.47","69.11","70.5","74.16","74.18","81.9","81.10","81.11","81.12","81.13","81.14","81.15","86.1"],"用于将多个html片段存放于一个html文件中":["19.3"],"app":["20.0","20.1","20.2","22.1","25.2","30.0","30.1","32.6","34.0","34.5"],"并在html中引用":["20.1"],"目录中新建一个":["20.1"],"标签可以放置在":["20.2"],"标签或者":["20.2"],"标签上":["20.2"],"也可以放置在html页面的任何一个标签上":["20.2"],"这里":["20.2"],"引入javascript文件的顺序是有差异的":["20.3"],"controller":["21.0","21.1","21.2","22.0","22.1","32.1","36.0"],"是使用angularjs的核心功能之一":["21.0"],"在前一节我们已经了解了作用域的概念":["21.0"],"则是真正应用作用域来制作功能的核心部分":["21.0"],"应用":["21.0"],"我们先分析":["21.2"],"的javascript编码部分":["21.2"],"funtion":["21.3"],"封装的函数":["21.3"],"会被绑定到":["21.3"],"firstctrl":["21.3","22.1"],"上":["21.3","51.1"],"这个概念相对容易理解":["21.3"],"我们需要注意的":["21.3"],"在angularjs中":["21.5"],"最简单传入数据的方法其实可以更简单":["21.5"],"不推荐这样做":["21.5"],"binding":["22.0","67.27","67.28","67.29","67.31"],"上一节我们介绍了如何将":["22.0"],"的数据显示在html当中":["22.0"],"但是我们如何在页面中修改这些数据呢":["22.0"],"这一步操作也很简单":["22.0"],"我们先直接看看代码吧":["22.0"],"界面操作里面还有一个重要的功能":["22.1"],"就是界面上按钮的与控制器中的函数进行绑定":["22.1"],"这个也很容易实现":["22.1"],"除了用于显示信息外":["22.2"],"数据绑定还可用于其它地方":["22.2"],"比如":["22.2","89.2","89.7","117.1"],"下面的例子用于根据输入来调整样式":["22.2"],"doctype":["22.2"],"if":["23.0","23.1","51.1","51.3","63.38","78.12","89.4","89.5","98.0","111.3","112.6","127.6"],"show":["23.0","23.1","51.3"],"hide":["23.0"],"本节我们将学习的是如何通过变量来控制html是否显示":["23.0"],"这三个语句具体的用法如下":["23.0"],"scope":["23.0","32.1","36.0"],"data":["23.0","23.2","31.6","54.6","54.8","90.0"],"与":["23.1","51.3","58.2","61.7","63.54","66.3","67.54","87.22","88.3","104.3","110.8","110.16"],"例子中使用了":["23.2"],"flag":["23.2"],"repeat":["24.0","27.0","32.4","87.6"],"本节将讲述如何使用":["24.0"],"对一个列表的数据进行遍历并显示出来":["24.0"],"首先":["24.0","26.1"],"在实际的使用场景中":["24.1"],"如果我们使用一个表格来管理信息":["24.1"],"那么可能表格的每一行都会有一些对应的操作功能":["24.1"],"如编辑":["24.1"],"删除":["24.1"],"等":["24.1","51.1","52.5","89.29","110.22","127.4","130.2"],"那么":["24.1","107.4"],"我们如何在":["24.1"],"filter":["25.0","25.3","103.13","110.4"],"过滤器是angularjs的另一项强大的功能":["25.0"],"如果能使用好它":["25.0"],"能够帮助我们极大的节省工作量":["25.0"],"以下是几个应用":["25.0"],"的例子":["25.0"],"number":["25.0","51.4","63.37","74.7","89.5","103.8","103.10","119.5","122.3","123.1","127.6"],"显示两位小数":["25.0"],"angularjs支持多个filter同时应用":["25.1"],"比如以下的例子":["25.1"],"自己创建自定义的过滤器也很简单":["25.2"],"我们下面尝试自己制作一个将文字全部翻转过来的过滤器":["25.2"],"中增加如下代码":["25.2"],"进行搜索":["25.3"],"angularjs提供了通过filter的搜索功能":["25.3"],"当然":["25.3"],"这个搜索功能并不是非常常用":["25.3"],"因为搜索工作现在一般在服务端完成":["25.3"],"如果数据量非常小":["25.3"],"用法":["25.4","49.0","136.3","136.4"],"效果":["25.4"],"searchtext":["25.4"],"t":["25.4","50.5","67.49","119.1","119.2","119.3","119.4","119.5","119.6","119.7","119.8","119.9","119.10","119.11","119.12","119.13","119.14","119.15","119.16","119.17","122.4","123.9","123.12"],"搜索所有字段":["25.4"],"name":["25.4","44.10","50.2","67.44","88.10","89.4","97.1","103.10","103.11","105.3","111.5","113.5","113.6","123.1"],"class":["26.1","26.4","26.5","51.5","54.6","54.7","67.28","74.14","81.1","81.2","81.3","81.4","81.5","81.6","81.7","81.8","81.9","81.10","81.11","81.12","81.13","81.14","81.15","88.22","89.9","98.0","123.5","127.4","127.6"],"通过":["26.1","34.3","63.33","66.3","69.54"],"我们可以对界面元素的css样式进行控制":["26.1"],"下面":["26.1","32.3","34.0"],"让我们通过示例来看看功能如何实现":["26.1"],"此示例来源于官网的":["26.1"],"ngclass介绍界面":["26.1"],"我进行了一些加工":["26.1"],"我们先创建一个":["26.1"],"style":["26.1","26.4","26.5","51.5","67.29","69.3","69.5","69.7","69.9","69.11","69.13","81.3","81.9","81.10","81.11","81.12","81.13","81.15"],"css":["26.1","26.4","64.0","73.13","73.15","74.16","74.21","81.2","81.4","81.5","81.7","82.0","85.0","132.0"],"删除线":["26.1"],"strike":["26.1"],"decoration":["26.1"],"line":["26.1"],"through":["26.1"],"在上方的示例中":["26.2"],"我们是针对提前设定好的样式进行是否生效的判断":["26.2"],"除了这种使用方式":["26.2"],"class还支持直接传入字符串的方式进行样式调整":["26.2"],"这两种模式也可以结合使用":["26.3"],"示例如下":["26.3"],"我们先在":["26.4"],"中加入css的动画效果代码":["26.4"],"base":["26.4","137.3"],"transition":["26.4"],"all":["26.4","75.11","75.15"],"提供的功能比":["26.5"],"要少一些":["26.5"],"只支持样式的传入":["26.5"],"我们可以使用以下两种模式":["26.5"],"span":["26.5"],"background":["26.5"],"options":["27.0","27.2","27.3","27.4","75.6","75.7"],"在学习了":["27.0"],"过后":["27.0"],"我们其实已经可以用循环的方式实现下拉列表的选项":["27.0"],"angularjs提供了":["27.0"],"的方法":["27.0"],"让我们能够更轻松的完成这项工作":["27.0"],"官网提供了一个详尽的示例进行演示":["27.0"],"点击打开后滑动到页面最下部进行效果测试":["27.0"],"本节中的内容":["27.0"],"是将官网的内容进行梳理后进行的讲解":["27.0"],"在很多时候":["27.1"],"我们期望能有一个没选中的选项":["27.1"],"我们可以通过手动的方式添加这个选项":["27.1"],"group":["27.2"],"by":["27.2"],"也支持按组排列数据":["27.2"],"使用":["27.2","27.4","32.6","63.44","63.47","67.19","67.28","67.29","67.31","69.40","69.60","73.15","74.7","78.6","102.5","123.4","123.5"],"disable":["27.3"],"when":["27.3"],"还可以通过":["27.3"],"语法来设置选项是否可选":["27.3"],"同样的":["27.3"],"我们需要在列表中先新增字段":["27.3"],"以下第一列数据并未加上":["27.3"],"在上面的例子中":["27.4"],"我们传入的是一个列表":["27.4"],"array":["27.4","51.4","63.37","74.7","98.0","101.1","101.2","103.1","103.12","103.14","122.2"],"也支持以对象":["27.4"],"object":["27.4","51.4","63.32","63.37","67.56","78.8","87.13","89.7","98.0","106.1","113.6","113.8","119.14"],"的方式传入数据":["27.4"],"在本章中":["28.0"],"directive":["29.0","30.1","34.0","34.5"],"在前一章中":["29.0"],"我们学习了angularjs的基本用法":["29.0"],"我们将学习":["29.0"],"其实":["29.1"],"本章我们将从最基本的自定义directive开始":["29.2"],"下面我们将制作我们的第一个自定义directive":["30.0"],"让我们对":["30.0"],"进行一些修改":["30.0"],"以下这段代码用于声明一个directive":["30.1"],"people":["30.1"],"function":["30.1","34.0","34.5","50.5","63.33","63.37","63.38","63.47","67.49","69.60","74.12","75.3","87.34","88.9","88.10","88.17","89.31","98.0","101.2","105.2","105.3","105.5","105.7","113.3","113.5","113.8","127.6"],"return":["30.1","34.0","34.5","50.5","73.11","75.5","78.12","88.9","89.1","98.0","105.3","122.3","127.6"],"如果在配置directive时":["30.3"],"加入":["30.3"],"replace":["30.3","67.16","90.0"],"true":["30.3","88.21","98.0","121.2"],"是告诉angularjs":["30.4"],"这个directive应该如何使用":["30.4"],"在前一节中":["31.0"],"我们创建了一个名为":["31.0"],"angularjs要求directive的命名使用":["31.1"],"在html代码中":["31.2"],"使用的是连接符的形式":["31.2"],"下面我们对比看看命名和使用的对应字符串":["31.2"],"命名和用法不同的核心原因":["31.3"],"angularjs在解析html时":["31.4"],"会将名称取出":["31.4"],"如":["31.4","52.5","103.12","109.5","123.1","127.4"],"在前面的讲解中":["31.5"],"我们讲解示例时":["31.5"],"使用的连接符全部都为减号":["31.5"],"x":["31.6","38.0","88.9","103.17","108.0","119.5","119.12"],"部分":["31.6"],"在第一节中":["32.0"],"我们使用的directive":["32.0"],"可以直接获取并显示控制器中的数据":["32.0"],"人的名称和性别":["32.0"],"如果我们有多个人的信息需要显示怎么处理":["32.0"],"这个问题其实非常常见":["32.0"],"因为directive通常是将需要在界面中重复使用的部分抽象出来":["32.0"],"便于一次修改":["32.0"],"多处地方生效":["32.0"],"如博客的评论的列表显示":["32.0"],"在之前学习控制器":["32.1"],"的使用过程中":["32.1"],"我们使用了":["32.1"],"功能":["32.1","64.14","64.18","64.20","64.30","66.6","67.4","89.2","89.13","89.18"],"用于提供对接html和javascript对应模块的功能":["32.1"],"中的配置":["32.2"],"可以看到":["32.2"],"在上方的javasciprt文件中":["32.2"],"ontroller":["32.3"],"中放入多个相同的directive":["32.3"],"和directive一起显示数据":["32.4"],"知道了如何传入数据":["32.4"],"那么我们就可以将directive的使用和":["32.4"],"以上我们看到的示例只是将数据显示了出来":["32.5"],"如果我们期望在directive中修改这些数据如何处理呢":["32.5"],"其实很简单":["32.5"],"将":["32.5","89.7"],"中原先显示的数据的部分":["32.5"],"替换为":["32.5","33.0"],"除了以等号":["32.6"],"直接传入对象之外":["32.6"],"directive也支持直接传入文本":["32.6"],"符号":["32.6","32.7"],"上面我们介绍了等号":["32.7"],"符号的使用方法":["32.7"],"它们分别对应传入对象和文本":["32.7"],"如果我们期望传入一个回调函数呢":["32.7"],"这样我们就可以实现如封装一个按钮为一个directive":["32.7"],"然后让它在点击后实现我们期望的功能的效果":["32.7"],"这就需要使用到":["32.7"],"下面我们来看看实际的例子":["32.7"],"这个例子比较复杂":["32.7"],"请仔细分析研读":["32.7"],"templateurl":["33.0"],"获取模板":["33.0"],"有些时候":["33.0"],"directive中的模板":["33.0"],"会变得很大":["33.0"],"如果仍然放置在定义中":["33.0"],"那么可能会造成阅读和修改不方便的情况":["33.0"],"针对这种情况":["33.0"],"我们可以将":["33.0"],"除了直接将html部件存储为独立的文件":["33.1"],"我们也可以直接使用angularjs提供的ng":["33.1"],"template功能":["33.1"],"这点在第四章中也有提到":["33.1"],"这里是一个新的示例":["33.1"],"帮助您对比物理文件和":["33.1"],"文件的优先级":["33.1"],"例如":["33.1","51.1","95.4","97.2","110.21","110.22","122.4","123.10"],"templateurl的特性与我们在第四章学习的ng":["33.2"],"include类似":["33.2"],"link":["34.0"],"在前面几节中":["34.0"],"我们都是在学习如何配置directive":["34.0"],"我们将开始学习directive最灵活的部分":["34.0"],"函数的基本使用方法如下":["34.0"],"formdirective":["34.0","34.5"],"restrict":["34.0"],"从":["34.1","89.7","107.3"],"与jquery的关系":["34.2"],"在directive中":["34.2"],"我们不免需要对页面元素进行操作":["34.2"],"为了提供这项功能":["34.2"],"angularjs几乎原版搬运了jquery操作元素的功能":["34.2"],"它们称之为":["34.2"],"安装和使用jquery共有两步":["34.3"],"element":["34.4","34.5"],"的功能":["34.4"],"我们在引入jquery后":["34.4"],"可以通过如下代码查看效果":["34.4"],"这里需要注意的是":["34.4"],"使用jqlite的方法和以下代码中使用的方法是不一样的":["34.4"],"上绑定鼠标移入移出时的变化效果":["34.5"],"transclude":["35.0"],"在前面我们使用到的directive":["35.0"],"都会将包含有directive的元素整体替换为":["35.0"],"中的内容":["35.0"],"这样":["35.0","127.2"],"就让directive的用途缩减为只能封装最低级别的元素":["35.0"],"但是我们使用的":["35.0"],"本节是directive的高级使用方法之一":["36.0"],"通过赋予directive之间互相通讯的功能":["36.0"],"我们可以将部件的抽象化提升到一个更高的层次":["36.0"],"本节将通过官方网站中一个较复杂的例子来讲解具体的使用方法":["36.0"],"通过directive的配置":["36.0"],"将html中的代码自动抽取为一个tab列表":["36.0"],"点击tab列表中的标题":["36.0"],"则可自动的显示tab中包含的内容":["36.0"],"在javascript代码中":["36.0"],"我们声明了2个directive":["36.0"],"gqtabcontainer":["36.0"],"gqtabcontent":["36.0"],"中加入了":["36.0"],"这项配置":["36.0"],"并封装了":["36.0"],"panes":["36.0"],"用于存储数据":["36.0"],"select":["36.0"],"用于接收界面点击事件":["36.0"],"以及一个":["36.0"],"addpane":["36.0"],"方法用于接收":["36.0"],"本章讲述的内容是angularjs的核心内容之一":["37.0"],"对seo友好":["40.1"],"爬虫获取到的是已经异步执行完成后得到的有数据的html":["40.1"],"相关":["41.0","48.0","63.0"],"vue的区别":["42.1"],"设计思想":["42.2"],"组件化":["42.2"],"每个组件都符合开放":["42.2"],"在16":["42.3"],"hooks版本之前":["42.3"],"react的生命周期分为组件挂载阶段":["42.3"],"hooks与":["42.4"],"react的严格模式是在组件外层设置":["42.5"],"react":["42.5","45.1","46.1","66.3","66.5","69.18","69.23","69.56","69.60","73.7","73.11","73.21","73.22","73.23","73.24","73.25","78.2","78.5","100.0"],"scrictmode":["42.5"],"标签":["42.5"],"识别不安全的生命周期":["42.6"],"关于使用过时字符串":["42.6"],"中页面重新加载怎么保留数据":["42.7"],"这个问题就涉及到了":["42.7"],"数据持久化":["42.7"],"jsx":["42.8","47.1"],"jsx吗":["42.9"],"处理错误边界":["42.10"],"error":["42.10","119.17"],"boundaries":["42.10"],"错误边界是一种react组件":["42.10"],"它能够不过并处理子组件中任何位置出现javascript的错误":["42.10"],"并渲染备用ui":["42.10"],"而不是使整个组件数崩溃":["42.10"],"组件为什么要大写":["42.11"],"fragment":["42.12"],"react中组件是不允许返回多个节点的":["42.12"],"非受控组件":["42.13"],"useeffect":["43.0","43.1","66.1","66.8","66.9","69.60","78.4"],"uselayouteffect":["43.2"],"需要同步读取或更改dom":["43.2"],"避免过度使用":["43.3"],"是react提供的一个高级hook":["44.0"],"usereducer":["44.1","44.8"],"usereducer返回一个由两个值组成的数组":["44.6"],"初次渲染时":["44.7"],"用于更新state并触发组件的重新渲染":["44.8"],"import":["44.8","45.1","47.1","66.4","69.60","73.7","100.0"],"初始状态":["44.9"],"initstate":["44.9"],"initialstate":["44.9"],"count":["44.9","44.10","67.51"],"这里定义了一个初始状态对象":["44.9"],"包含一个count属性":["44.9"],"初始值为0":["44.9"],"reducer函数":["44.9"],"初始数据":["44.10"],"initdata":["44.10"],"张三":["44.10","89.4","103.9"],"price":["44.10"],"id":["44.10","69.11","81.9","81.10","81.11","81.12","81.13","81.15","114.0"],"isedit":["44.10"],"false":["44.10","50.3"],"李四":["44.10"],"王五":["44.10","103.9"],"initdata是一个数组":["44.10"],"表示初始的商品列表":["44.10"],"每个商品具有以下属性":["44.10"],"商品名称":["44.10"],"单价":["44.10"],"数量":["44.10"],"小满zs":["44.11"],"组件间的通信":["45.0"],"组件调":["45.1"],"组件":["45.1"],"法":["45.1"],"useimperativehandle":["45.1","73.10"],"调":["45.1"],"useref":["45.1"],"usestate":["45.1","47.1","66.1","66.4","66.7","69.60","78.4"],"from":["45.1","66.4","67.35","69.60","73.7","87.13","100.0","103.12","110.21"],"虚拟dom相当于是在js和":["46.0"],"传统web应用":["46.2"],"虚拟dom是一个对象":["46.3"],"这个对象是由真实的dom转化而来":["46.3"],"div":["46.3","50.2","51.4","67.41","69.3","69.5","69.7","69.9","69.11","69.13","73.13","74.14","81.1","81.2","81.3","81.4","81.5","81.6","81.7","81.8","81.9","81.10","81.11","81.12","81.13","81.14","81.15"],"classname":["46.3"],"开发时不必关注dom":["46.5"],"只关注业务逻辑":["46.5"],"具有浏览器的兼容和跨平台的兼容":["46.6"],"high":["47.0"],"order":["47.0"],"component":["47.0","49.0","67.35"],"在react中":["47.0"],"高阶组件":["47.0"],"hook中常见的高阶函数":["47.1"],"高阶函数":["47.1"],"是react中最基础的hook":["47.1"],"用于在函数组件中添加状态":["47.1"],"它返回一个数组":["47.1"],"包含当前状态":["47.1"],"和更新状态的函数":["47.1"],"这个更新函数可以接收一个新的状态值":["47.1"],"也可以接收一个函数来更新状态":["47.1"],"useref的区别":["47.2"],"两者最大的区别是":["47.2"],"用于管理状态":["47.2"],"alive":["49.0"],"定义":["49.0","67.2","104.0"],"keepalive是一个内置组件":["49.0"],"它的功能是在多个组件间动态切换时缓存被移除的组件实例":["49.0"],"即使被包含的组件保留状态":["49.0"],"或者避免重新渲染":["49.0"],"vue":["49.0","50.2","51.1","51.4","52.2","54.5","54.6","61.11","61.13","67.37","67.38","67.41","67.46","69.11","81.9","81.10","81.11","81.12","81.13","81.14","81.15","86.1","100.0"],"被keep":["49.0"],"alive包含的组件会被缓存":["49.0"],"被":["49.0"],"包含的组件不会被再次初始化":["49.0"],"也就意味着":["49.0"],"不会重走生命周期函数":["49.0"],"但有时候希望缓存的组件能够再次进行渲染":["49.0"],"针对这个问题":["49.0"],"vue3中keepalive源码":["49.1"],"是一个用于在下次":["50.0"],"dom":["50.0","51.1","51.7","66.3","66.21"],"更新循环结束之后执行回调函数的方法":["50.0"],"其内部原理涉及到":["50.0"],"浏览器中":["50.1"],"每个宏任务结束后都会检查微任务队列":["50.1"],"如果有任务则依次执行":["50.1"],"当所有微任务执行完成后":["50.1"],"才会执行下一个宏任务":["50.1"],"因此可以通过将任务作为微任务添加到微任务队列中":["50.1"],"来确保任务在所有宏任务执行完毕后立即执行":["50.1"],"info":["50.1","74.22","97.1","103.12"],"javascript的事件运行机制":["50.1"],"进程与线程":["50.1"],"进程":["50.1"],"看下面一个例子":["50.2"],"比如当dom内容改变后":["50.2"],"我们需要获取的最新高度":["50.2"],"vue2中nexttick源码":["50.3"],"路径":["50.3"],"src":["50.3","50.5","64.9","64.10"],"core":["50.3","50.5"],"util":["50.3"],"next":["50.3","67.35","89.25","89.27"],"tick":["50.3"],"这段源码分为两个部分":["50.3"],"一是判断当前环境能使用的最合适的":["50.3"],"api":["50.3","52.5","64.42","69.46","71.3","71.9","73.22"],"并保存异步函数":["50.3"],"二是调用异步函数执行回调队列":["50.3"],"环境判断":["50.3"],"主要是判断用哪个宏任务或微任务":["50.3"],"因为宏任务耗费的时间是大于微任务的":["50.3"],"所以先使用微任务":["50.3"],"判断顺序如下":["50.3"],"promise":["50.3","50.5","67.55","75.3","76.0","103.14","119.15"],"mutationobserver":["50.3"],"setimmediate":["50.3"],"settimeout":["50.3","75.3","104.3","104.4"],"export":["50.3","50.5","57.3","127.6"],"let":["50.3","50.5","63.37","75.9","78.12","88.1","88.3","88.5","88.6","89.1","89.4","89.5","89.28","92.0","111.3","113.6","113.7","122.3","131.5"],"isusingmicrotask":["50.3"],"是否启用微任务开关":["50.3"],"callbacks":["50.3"],"回调队列":["50.3"],"pending":["50.3"],"异步控制开关":["50.3"],"标记是否在执行回调函数":["50.3"],"该方法负责执行队列中的全部回调":["50.3"],"vue3的例子如下":["50.4"],"nexttick源码":["50.5"],"源码地址":["50.5"],"packages":["50.5"],"runtime":["50.5"],"sheduler":["50.5"],"ts":["50.5"],"resolvedpromise":["50.5"],"any":["50.5","58.2","75.14","122.3"],"ressolve":["50.5"],"currentflushpromise":["50.5"],"void":["50.5","104.5","105.2","119.11"],"null":["50.5","69.20","106.1","106.4","119.9","127.4"],"nexttick":["50.5"],"this":["50.5","66.5","88.12","89.6","89.9","96.0","103.16","105.2","105.3","105.4","105.5","105.6","105.7","113.5","119.13","119.16","119.17","127.4","127.6"],"fn":["50.5","105.3"],"p":["50.5"],"resolvepromise":["50.5"],"then":["50.5","119.15"],"bind":["50.5","51.1","51.5","63.33","96.0","105.7"],"可以看出nexttick接受一个函数为参数":["50.5"],"同时会创建一个微任务":["50.5"],"在页面调用":["50.5"],"一次弄懂":["50.6"],"指令":["51.0"],"vue指令":["51.1"],"directives":["51.1"],"是一种特殊的标记":["51.1"],"用于在模板中以声明式的方式将某些行为应用到":["51.1"],"指令以":["51.1"],"v":["51.1","67.10","67.31","67.37","67.45","67.47","81.9","81.10","81.11","81.12","81.13","81.14","81.15"],"开头":["51.1"],"后面跟着指令的名称":["51.1"],"js提供了一些内置的指令":["51.1"],"同时也允许开发者自定义指令":["51.1"],"指令attribute的期望值是一个javascript表达式":["51.1"],"除了极少数个例外":["51.1"],"for":["51.1","51.4","63.37","66.18","67.10","78.12","81.9","81.10","81.11","81.12","81.13","81.14","81.15","98.0","111.3","122.3"],"on":["51.1","51.7","67.9"],"常见vue指令":["51.2"],"的区别":["51.3"],"基于原始数据多次渲染元素或模板块":["51.4"],"期望绑定值类型":["51.4"],"string":["51.4","63.37","74.7","75.16","78.12","81.15","98.0","103.9","103.10","103.11","105.3","114.0","119.10","119.11","122.4","123.1","127.6"],"iterable":["51.4"],"指令值必须使用特殊语法":["51.4"],"alias":["51.4"],"in":["51.4","63.37","67.35","81.9","81.10","81.11","81.12","81.13","81.14","81.15","111.3"],"expression":["51.4"],"为正在迭代的元素提供一个别名":["51.4"],"item":["51.4","74.14","81.9","81.10","81.11","81.12","81.13","81.14","81.15","103.10","103.11"],"items":["51.4","73.15","74.20"],"动态地绑定一个或多个attribute":["51.5"],"也可以是组件的prop参数":["51.5"],"修饰符":["51.5","51.6","51.7","67.4","87.30"],"camel":["51.5"],"将短横线命名的attribute变更为驼峰式命名":["51.5"],"prop":["51.5","67.3","89.5"],"强制绑定为dom":["51.5"],"property":["51.5"],"attr":["51.5"],"attribute":["51.5"],"用途":["51.5","78.2"],"当用于绑定":["51.5"],"或":["51.5","69.20","89.2","110.21","127.2"],"支持额外的值类型":["51.5"],"如数组或者对象":["51.5"],"model":["51.6","67.2","69.11"],"用于在表单控件或者组件上创建双向数据绑定":["51.6"],"指令用于监听":["51.7"],"事件":["51.7"],"stop":["51.7"],"调用":["51.7","113.4"],"event":["51.7","52.2","63.11","67.31"],"stoppropagation":["51.7"],"prevent":["51.7"],"evemt":["51.7"],"preventdefault":["51.7"],"capture":["51.7"],"在捕获模式中调用事件监听器":["51.7"],"self":["51.7","74.26"],"只有事件从元素本身发出菜触发处理函数":["51.7"],"keyalias":["51.7"],"只在某些案件下触发处理函数":["51.7"],"once":["51.7"],"vue2":["52.0","78.8"],"的生命周期与":["52.0"],"vue3":["52.0"],"的声明是有所区别的":["52.0"],"的生命周期主要是":["52.0"],"生命周期钩子":["52.1"],"描述":["52.1"],"beforecreate":["52.1","52.2","78.6"],"created":["52.2","52.3","52.4"],"实例":["52.2"],"进行数据观测":["52.2"],"完成数据观测":["52.2"],"属性和方法的运算":["52.2"],"watch":["52.2","53.12","67.48","67.49","67.50","67.51","67.52","78.11"],"事件回调的配置":["52.2"],"可调用":["52.2"],"methods":["52.2"],"数据请求在created和mouted的区别":["52.3"],"是在组件实例一旦创建完成的时候立刻调用":["52.3"],"除了":["52.4","106.4"],"setup":["52.4","52.5","78.6"],"替代了":["52.4"],"函数是一个全新的组件选项":["52.5"],"它是":["52.5"],"composition":["52.5","71.9"],"的核心":["52.5"],"用于初始化组件实例":["52.5"],"接收两个参数":["52.5","78.3"],"props":["52.5","66.3","66.10","66.19","67.46","69.25","78.5"],"context":["52.5","67.40"],"其中":["52.5","112.4","112.6"],"是父组件传递给当前组件实例的属性":["52.5"],"而":["52.5"],"属性则包含了一些":["52.5"],"helper":["52.5"],"的方法和组件选项":["52.5"],"attrs":["52.5"],"slots":["52.5"],"emit":["52.5","67.40"],"我们可以使用vue3提供多个工具函数来定义响应式数据":["52.5"],"监听生命周期钩子":["52.5"],"侦听一个或多个响应式数据源":["53.1"],"watch有三个参数":["53.2"],"侦听器的源":["53.3"],"发生变化时要调用的回调函数":["53.4"],"这个回调函数接收三个参数":["53.4"],"watch属性值":["53.5"],"第三个参数是可选的":["53.5"],"是一个对象":["53.5"],"immediate":["53.5"],"在侦听器创建时立即触发回调":["53.5"],"第一次调用时的旧值是":["53.5"],"undefined":["53.5","74.11","88.6","119.9"],"deep":["53.5"],"立即运行一个函数":["53.6"],"watcheffect有两个参数":["53.7"],"当监听的值发生变化时":["53.8"],"会自动再次执行以下回调函数":["53.8"],"第二个参数是一个可选的对象":["53.9"],"支持":["53.9"],"watcheffect":["53.11","53.12","78.11"],"vue更新之后的dom":["53.13"],"在vue2":["53.13"],"x中使用nexttick":["53.13"],"在vue3中":["53.13","69.7","69.13"],"手动停止一个侦听器":["53.15"],"请调用":["53.15"],"如果需要等待一些异步数据":["53.16"],"双向绑定原理":["54.0"],"单向绑定非常简单":["54.1"],"就是把":["54.1"],"双向绑定就是在单向绑定的基础上":["54.2"],"通过修改视图":["54.2"],"双向数据绑定由三部分组成":["54.3"],"数据层":["54.3"],"viewmodel的主要职责":["54.4"],"以":["54.5"],"为例":["54.5"],"先看看双向绑定的流程":["54.5"],"new":["54.5","63.18","63.35","63.36","75.3","89.1","89.4","89.5","89.9","89.28","105.5","105.7","119.12","119.14","137.3"],"先来一个构造函数":["54.6"],"执行初始化":["54.6"],"对":["54.6","105.7"],"执行响应化处理":["54.6"],"constructor":["54.6","54.7","66.6","69.24","89.9","127.4","127.6"],"compile":["54.7"],"对每个元素节点的指令进行扫描跟解析":["54.7"],"根据指令模版替换数据":["54.7"],"以及绑定相应的更新函数":["54.7"],"compile结构":["54.7"],"el":["54.7"],"vm":["54.7"],"视图中会用到":["54.8"],"中某":["54.8"],"key":["54.8","69.18","69.60","78.8","81.9","81.10","81.11","81.12","81.13","81.15","111.3","122.3"],"这称为依赖":["54.8"],"同一个":["54.8"],"可能会出现多次":["54.8"],"每次都需要收集出来用一个":["54.8"],"watcher":["54.8"],"来维护它们":["54.8"],"此过程称为依赖收集":["54.8"],"多个":["54.8"],"需要一个":["54.8"],"dep":["54.8"],"来管理":["54.8"],"需要更新时由":["54.8"],"统一通知":["54.8"],"实现思路":["54.8"],"vue双向绑定":["54.9"],"首页白屏问题以及解决方案":["55.0"],"在谈论首页白屏问题之前":["55.1"],"加载过程":["55.3"],"首先是":["55.3"],"也就是":["55.3"],"fp":["55.3"],"阶段":["55.3"],"全称":["55.3"],"first":["55.3"],"paint":["55.3"],"翻译为":["55.3"],"首次绘制":["55.3"],"是时间线上的第一个时间点":["55.3"],"它代表浏览器第一次向屏幕传输像素的时间":["55.3"],"预渲染":["55.4"],"预渲染就是":["55.4"],"webpack":["55.4","130.2","131.4"],"打包的时候渲染":["55.4"],"通过无头浏览器":["55.4"],"无头浏览器":["55.4"],"打包的时候":["55.4"],"可以把index":["55.4"],"html的内容放入浏览器":["55.4"],"但是浏览器是空白的":["55.4"],"然后当进入页面时直接加载这个index":["55.4"],"但没有ajax请求":["55.4"],"获取到预渲染的页面html内容":["55.4"],"然后再放入index":["55.4"],"积累的知识点":["56.0"],"06":["57.1"],"设计一个函数让两个数字相加":["57.1"],"但不得使用":["57.1"],"或者其它运算符":["57.1"],"require":["57.3","102.4","111.4"],"区别":["57.3","64.38","66.3","67.54"],"来源不同":["57.3"],"来源于ecm":["57.3"],"es6":["57.3","63.37","87.18","87.20","87.34","88.5","88.10","88.21","89.10","98.0"],"exports":["57.3"],"来源于":["57.3"],"commonjs":["57.3","98.0"],"加载时机不同":["57.3"],"unknown":["58.2"],"类型表示没有任何限制":["58.2"],"该类型的变量可以赋予任意类型的值":["58.2"],"一旦设置为":["58.2"],"类型":["58.2","58.3","64.32","106.1","119.9","123.1"],"实际上会关闭这个变量的类型检查":["58.2"],"即使有明显的类型错误":["58.2"],"只要句法正确":["58.2"],"都不会报错":["58.2"],"never":["58.3","98.0","123.1"],"为了保持与":["58.3"],"集合论":["58.3"],"的对应关系":["58.3"],"以及类型运算的完整性":["58.3"],"还引入了":["58.3"],"空类型":["58.3"],"运行在客户端浏览器上":["63.1"],"不用预编译":["63.1"],"直接解析执行代码":["63.1"],"中的基本数据类型":["63.2"],"ajax":["63.3","66.17"],"asynchronous":["63.3"],"and":["63.3"],"xml":["63.3","66.5"],"是一种使用":["63.3"],"进行异步通信的技术":["63.3"],"它可以在不刷新整个页面的情况下":["63.3"],"通过向服务器发送请求并获取响应数据":["63.3"],"实现动态更新页面内容":["63.3"],"常用":["63.4","63.14","63.15","88.0"],"状态码":["63.4"],"含义":["63.4"],"表示客户端应该继续发送请求":["63.4"],"闭包可以简单理解成":["63.6"],"匿名自执行函数":["63.7"],"我们知道所有的变量":["63.7"],"如果不架上":["63.7"],"闭包的写法一般是函数嵌套函数":["63.8"],"可以访问函数外部的变量":["63.8"],"闭包可以访问定义它的函数的参数和局部变量":["63.8"],"甚至可以访问全局变量":["63.8"],"保存变量的状态":["63.8"],"当函数执行完毕后":["63.8"],"闭包仍然可以访问它所引用的变量":["63.8"],"并且这些变量的值不会被回收":["63.8"],"事件委托就是利用时间冒泡":["63.9"],"提高整体运行性能":["63.10"],"假如现在有有00个li标签":["63.10"],"那个li事件都有相同的点击事件":["63.10"],"如果使用循环遍历去触发每个li元素上的事件":["63.10"],"这将会不断与dom节点进行交互":["63.10"],"当一个元素接收到事件的时候":["63.12"],"本地存储":["63.13"],"local":["63.13"],"storage":["63.13","69.43","69.44"],"和cookie都是用于在浏览器端存储数据的两种不同的机制":["63.13"],"主要有以下区别":["63.13"],"存储容量":["63.13"],"cookie的存储容量通常比较小":["63.13"],"新增":["63.16"],"删除键值对":["63.16"],"新增键值对":["63.16"],"面向对象是一种思想":["63.17"],"是基于面向过程而言的":["63.17"],"就是说面向对象是将功能等通过对象来实现":["63.17"],"构造函数也是一个普通函数":["63.18"],"创建方式和普通函数一样":["63.18"],"但是构造函数习惯首字母大写":["63.18"],"调用方式不一样":["63.18"],"普通函数直接调用":["63.18"],"构造函数要用关键字":["63.18"],"来调用":["63.18"],"链接":["63.20"],"async函数其实是":["63.21"],"generatior函数和promise的语法糖":["63.21"],"async就是将generator函数的":["63.21"],"请求传参长度误区":["63.22"],"误区":["63.22"],"我们经常说":["63.22"],"请求参数的大小存在限制":["63.22"],"而post请求的参数大小是无限制的":["63.22"],"请求和":["63.23"],"post":["63.23"],"事件流描述的是从页面中接收事件的顺序":["63.25"],"dom二级事件流包括几个阶段":["63.25"],"call":["63.26","63.33","89.6","96.0","96.1","105.4","105.7","113.4"],"首先是三个事件":["63.28"],"mousedown":["63.28"],"mousemove":["63.28"],"mouseup":["63.28"],"由于字符串":["63.30"],"对象和数组没有固定大小":["63.30"],"所以当它们大小已知时":["63.30"],"才能够对它们进行动态的存储分配":["63.30"],"javascript程序每次创建字符串":["63.30"],"标记清除":["63.31"],"这是最常见的垃圾回收的方式":["63.31"],"当变量进入环境时":["63.31"],"就标记这个变量为":["63.31"],"进入环境":["63.31"],"从逻辑上来讲":["63.31"],"永远不能释放进入环境的变量所占用的内存":["63.31"],"只要执行流程进入相应的环境":["63.31"],"就可以用到它们":["63.31"],"当离开环境时":["63.31"],"就标记离开环境":["63.31"],"在es5中":["63.32"],"我们可以通过":["63.32"],"defineproperty":["63.32","67.56","78.8","89.7"],"原理":["63.33","64.36"],"apply":["63.33","89.8","96.0","105.4","105.7"],"或者":["63.33","100.0","110.18"],"方法来实现":["63.33"],"prototype":["63.33","87.4","87.5","87.7","87.8","87.9","87.10","87.13","87.14","87.15","87.16","87.17","87.18","87.31","103.1","107.3","110.1","110.2","110.3","110.4","110.5","110.6","110.7","110.8","110.9","110.10","110.11","110.12","110.14","110.15","110.16","110.17","110.18","110.19","110.20","110.21","110.23","113.8"],"加载完后再加载下一张":["63.34"],"obj":["63.35","63.36","63.37","78.8","87.21","87.24","87.25","88.21","89.1","89.5","111.3"],"image":["63.36"],"对象的深度克隆":["63.37"],"通过递归可以简单实现对象的深度克隆":["63.37"],"但是这种方法不管是":["63.37"],"还是":["63.37"],"es5":["63.37"],"实现":["63.37"],"都有同样的缺陷":["63.37"],"就是只能实现特定的":["63.37"],"的深度复制":["63.37"],"比如数组和函数":["63.37"],"不能实现包装对象":["63.37"],"boolean":["63.37","127.6"],"以及":["63.37"],"date":["63.37"],"对象":["63.37","106.3","110.21"],"regexp":["63.37"],"对象的复制":["63.37"],"深度克隆":["63.37"],"deepclone":["63.37"],"newobj":["63.37","111.3"],"instanceof":["63.37"],"i":["63.37","74.12"],"全排列":["63.38"],"全排列是一种对给定字符串中的字符进行重新排列的操作":["63.38"],"生成所有可能的排列组合":["63.38"],"permutate":["63.38"],"str":["63.38","78.12","122.4"],"result":["63.38"],"length":["63.38","78.12","90.0","122.3","127.4"],"在前后端分离的模式下":["63.40"],"前后端的域名是不一致的":["63.40"],"是由":["63.41"],"优化压缩图片":["63.42"],"图片格式的选择":["63.42"],"gif":["63.42"],"提供颜色较少":["63.42"],"指向":["63.43","96.0","105.4"],"indexof":["63.44","110.1"],"手写深拷贝":["63.45"],"深拷贝":["63.45"],"指针赋值":["63.45"],"for循环":["63.46"],"创建类有三种方法":["63.47"],"阻塞与非阻塞区别":["63.48"],"同步":["63.48"],"阻塞的":["63.48"],"重绘与回流":["63.49"],"https":["63.50","92.0","114.0","137.2"],"http叫做超文本传输协议":["63.50"],"是互联网应用最广泛的一种网络协议":["63.50"],"文件合并":["63.51"],"目的是减少":["63.51"],"预加载是指在页面加载完成之前":["63.52"],"常用的图片格式有":["64.1"],"盒模型是一个盛放内容的容器":["64.5","73.2"],"它由四部分组成":["64.5","73.2"],"元素的具体内容":["64.5","73.2"],"content":["64.5","73.2","74.21"],"标准盒模型":["64.7"],"css3中引入了":["64.7"],"音频标签的使用":["64.8"],"video":["64.9"],"audio":["64.10"],"source":["64.10","67.49","131.1"],"语义化标签":["64.11"],"优点":["64.12"],"提升可访问性":["64.12"],"利于":["64.12"],"seo优化":["64.12"],"边框":["64.14"],"属性名称":["64.14","64.15","64.17","64.18","64.19","64.20"],"radios":["64.14"],"背景":["64.15"],"渐变":["64.16"],"文本效果":["64.17"],"转换":["64.18"],"应用于":["64.18"],"过渡":["64.19"],"动画":["64.20"],"float":["64.21","73.14"],"当设置浮动属性时":["64.21"],"并且父元素没有设置高度时":["64.21"],"父元素会出现高度塌陷问题":["64.21"],"给父元素单独定义高度":["64.21"],"这个方法简单快速":["64.21"],"代码量少":["64.21"],"position":["64.22"],"reactive":["64.22","67.51"],"相对定位":["64.22"],"子父元素宽度固定":["64.24"],"设置子元素和父元素的行高一样":["64.25"],"子元素设置为行内块":["64.25"],"再加":["64.25"],"vertical":["64.25"],"子元素相对于父元素绝对定位":["64.26"],"子元素top":["64.26"],"left设置":["64.26"],"子元素的margin":["64.26"],"left和margin":["64.26"],"中间自适应":["64.27"],"margin":["64.27","64.35","69.3","69.5","69.7","69.9","69.11","69.13","81.4"],"负值法":["64.27"],"选择器":["64.30","64.31"],"后代选择器":["64.30"],"元素选择器":["64.30"],"类名选择器":["64.30"],"id选择器":["64.30"],"权重":["64.31"],"属性":["64.32","64.36","64.42","71.5","74.16","74.17","74.18","74.19","74.20","74.21","74.22","74.24","74.26","78.10","89.5","107.2","107.3","107.4"],"所有元素":["64.32"],"visibility":["64.32"],"cursor":["64.32"],"块级元素":["64.32","64.34"],"图片懒加载":["64.33"],"相邻的行内元素会排列在同一行":["64.34"],"不会独占一行":["64.34"],"通过给父盒子添加":["64.36"],"添加disable属性":["64.37"],"rem":["64.38"],"em":["64.38"],"绝对长度单位":["64.38"],"媒体查询扩展了":["64.39"],"结构":["64.40"],"作用":["64.41"],"drag":["64.42","71.4"],"如何让页面能够更快地显示和响应":["64.43"],"这里分为三个阶段":["64.43"],"加载阶段能做的主要优化":["64.44"],"减少关键资源个数":["64.44"],"例如把css和js改为内联形式":["64.44"],"关键资源比如原来有3个就减少到1个了":["64.44"],"其实就是说":["64.45"],"优化渲染进程中渲染帧的速度":["64.45"],"浏览器缓存":["64.47"],"用户输入url":["64.48"],"用户在输入url时候":["64.48"],"浏览器会根据url的协议":["64.48"],"在这段内容上加伤协议合成合法的url":["64.48"],"按下回车后":["64.48"],"导航栏显示加载状态":["64.48"],"当用户输入的是关键字的时候":["64.48"],"浏览器会讲输入内容作为搜索条件":["64.48"],"使用用户的默认设置的搜索引擎来进行搜索":["64.48"],"网络进程处理":["64.48"],"网络进程接收到url请求后会先检查本地缓存":["64.48"],"如果有缓存文件":["64.48"],"则先走缓存":["64.48"],"没有则进行网络请求":["64.48"],"开始":["64.48"],"dns解析":["64.48"],"dns解析的详细过程":["64.48"],"dns翻译过来就是域名系统":["64.48"],"是互联网上作为域名和ip地址相互映射的一个分布式数据库":["64.48"],"因为浏览器不能直接通过域名找到对应服务器的ip地址":["64.48"],"所以需要进行dns解析":["64.48"],"查找到对应ip进行访问":["64.48"],"用户在浏览器中输入域名":["64.48"],"操作系统会先检查浏览器的缓存和本地的":["64.48"],"host":["64.48","114.0"],"是否有这个网址记录":["64.48"],"有的话就从记录里找到对应ip地址":["64.48"],"5px的线":["64.49"],"采用":["64.49"],"meta":["64.49","89.1"],"viewport":["64.49"],"js动画和css3动画的差异":["64.50"],"渲染县城分为":["64.50"],"main":["64.50"],"thread":["64.50"],"compositor":["64.50"],"外边距折叠":["64.51"],"hook":["66.1","69.27","69.60","78.3"],"用于管理功能组件中的状态":["66.1","69.28","78.4"],"用于在功能组件中执行副作用":["66.1","69.29","78.4"],"虚拟dom是react中的一个概念":["66.2"],"其中创建了实际dom":["66.2"],"相同点":["66.3","78.9","115.5"],"都支持服务器渲染":["66.3"],"都有虚拟":["66.3"],"组件化开发":["66.3"],"参数进行父子组件数据的传递":["66.3"],"都实现":["66.3"],"受控组件的与非受控组件之间的区别在于它们如何管理和更新其状态":["66.4"],"受控组件是状态通过react控制的组件":["66.4"],"组件接收其当前值并通过props来更新它":["66.4"],"当值更改时":["66.4"],"它还会触发回调函数":["66.4"],"这意味着组件不存储自己的内部状态":["66.4"],"相反":["66.4"],"父组件管理该值并将其向下传递到受控组件":["66.4"],"tsx":["66.4","73.7","73.11"],"组件和函数式组件有什么区别":["66.5"],"基于类的组件和函数组件之间的主要区别在于它们的定义方式以及它们的使用方法":["66.5"],"component基于类的组件被定义为es6类并扩展该类":["66.5"],"它们使用render该方法返回定义组件输出的jsx":["66.5"],"类组件可以通过":["66.5"],"state":["66.5","67.51","69.17"],"生命周期方法是一种挂接到组件生命周期不通阶段的方法":["66.6"],"允许你在特定时间执行特定的代码":["66.6"],"生命周期":["66.6","67.14"],"有什么特点":["66.7","66.8"],"useeffect钩子允许在功能组件中执行副作用":["66.8"],"突变":["66.8"],"通常":["66.9"],"创建需要在组件离开屏幕之前清理或重置的资源":["66.9"],"例如订阅或计时器标识符":["66.9"],"中的道具":["66.10"],"是什么":["66.10","66.13","73.17"],"曾与哪些库相连":["66.11"],"状态管理器是帮助管理应用程序状态的工具或库":["66.11"],"何时应该使用全局状态":["66.12"],"的":["66.13","67.40","106.0","111.4","117.0","123.1"],"reducer":["66.13"],"它需要哪些参数":["66.13"],"action":["66.14"],"如何更改redux的状态":["66.14"],"实现了哪种模式":["66.15"],"flux":["66.16"],"思想":["66.16"],"fetch":["66.17","136.3"],"ajax区别":["66.17"],"这三者都是用于发起网络请求的工具或技术":["66.17"],"但它们有一些区别":["66.17"],"hooks":["66.18"],"为什么不能放在if":["66.18"],"里":["66.18"],"组件之间的数据传递":["66.19"],"算法":["66.20"],"diff算法是一种用于比较两个数据结构":["66.20"],"通常是树或数组":["66.20"],"之间的差异的算法":["66.20"],"higher":["66.22"],"vue是一套构建用户界面的渐进式":["67.1"],"数据驱动":["67.2"],"视图内容随着数据的改变而改变":["67.2"],"组件话":["67.2"],"可以增加代码复用性":["67.2"],"可维护性":["67.2"],"可测试性":["67.2"],"提高了开发效率":["67.2"],"方便重复使用":["67.2"],"体现了高内聚低耦合":["67.2"],"details":["67.2"],"mvvm模型":["67.2"],"mvvm":["67.2"],"view":["67.2"],"viewmodel":["67.2"],"是一种前端设计模式":["67.2"],"它将应用程序分为三个部分":["67.2"],"父级":["67.3"],"lazy":["67.4"],"改变后触发":["67.4"],"光标离开":["67.4"],"input":["67.4","67.30","67.37","103.14"],"输入框的时候值才会改变":["67.4"],"模版插值":["67.6"],"循环中":["67.10"],"computed":["67.11","67.52"],"计算属性是用来声明式地描述一个值依赖了其它的值":["67.11"],"vue中路由跳转的方式有两种":["67.12"],"分别是":["67.12","67.15"],"声明式":["67.12"],"跨域解决方案":["67.13"],"路由的实现":["67.15"],"vue路由有三种模式":["67.15"],"userouter":["67.16"],"中的":["67.16","123.1"],"push":["67.16","78.8","110.10","137.2"],"是手动调用内部路径切换方法":["67.16"],"transitionto":["67.16"],"路由模式":["67.17"],"模式是用":["67.18"],"createwebhashhistory":["67.18"],"创建的":["67.18"],"history就是":["67.19"],"html5模式":["67.19"],"createwebhistory":["67.19"],"创建":["67.19"],"html5":["67.19"],"history模式优势":["67.20"],"pushstate":["67.20"],"路由传参的两种方式":["67.21"],"params":["67.22","67.24"],"路由参数通常用于标识性的信息":["67.22"],"如资源id":["67.22"],"query":["67.23","75.5"],"查询参数适合用于传递非标识性信息":["67.23"],"如筛选条件":["67.23"],"标识性信息":["67.24"],"数据绑定的几种方式":["67.25"],"interpolation":["67.26"],"attributes":["67.27","91.0"],"dynamic":["67.28","67.29"],"form":["67.30"],"的路由钩子函数":["67.32"],"global":["67.33"],"before":["67.33"],"guards":["67.33","67.35"],"beforeeach":["67.33"],"per":["67.34"],"beforerouteenter":["67.35"],"to":["67.35","114.0","134.3","137.2","137.3"],"在路由进入的时候":["67.35"],"但是在组件渲染之前被调用":["67.35"],"beforerouteupdate":["67.35"],"在当前路由改变":["67.35"],"中如何自定义指令":["67.36"],"一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义":["67.37"],"钩子函数会接收到指令所绑定元素作为其参数":["67.37"],"focus":["67.37"],"setup标签版本传递数据的方法还是跟函数版本一致":["67.38"],"只是写法上有所不同":["67.38"],"父组件":["67.38","73.7","73.9","73.11"],"子组件传参版本":["67.40","67.41"],"子组件传值":["67.40"],"setup函数中":["67.40"],"子组件":["67.41","67.46"],"插槽":["67.42"],"slot":["67.42","67.44","67.46"],"简单来说就是子组件中的提供给父组件使用的一个":["67.42"],"坑位":["67.42"],"用":["67.42"],"在父组件中没有提供任何":["67.43"],"插槽内容":["67.43","67.46"],"的时候":["67.43"],"很多时候一个插槽满足不了需求":["67.44"],"需要多个插槽":["67.44"],"于是就有了具名插槽":["67.44"],"比如带有":["67.44"],"属性的插槽":["67.44"],"test":["67.44"],"动态插槽就是插槽名变成了变量的形式":["67.45"],"我们可以随时修改这个变量从而展示不同的效果":["67.45"],"它的写法是":["67.45"],"插槽也可以像组件传递":["67.46"],"那样":["67.46"],"标签绑定属性从而传递给父组件中的":["67.46"],"具名作用域插槽接收参数的方式是通过":["67.47"],"的标签的指令":["67.47"],"侦听单个来源":["67.49"],"watchsource":["67.49"],"callback":["67.49","101.2","104.5"],"默认是懒侦听的":["67.50"],"即仅在侦听起源发生变化时才执行回调函数":["67.50"],"第一个参数是侦听器的源":["67.50"],"侦听一个":["67.51"],"getter":["67.51"],"value":["67.51","89.5","97.1","122.3","123.9","127.4"],"prevalue":["67.51"],"都是":["67.52"],"首屏加载慢的原因":["67.53"],"route":["67.54"],"router":["67.54"],"依然表示路由相关的概念":["67.54"],"但它们功能不尽相同":["67.54"],"路由":["67.54"],"表示应用程序中的一个路由":["67.54"],"路由懒加载":["67.55"],"按需加载路由":["67.55"],"我们可以使用":["67.55"],"defineasynccomponent":["67.55"],"函数来定义异步组件":["67.55"],"该函数接收一个返回值为":["67.55"],"的函数":["67.55","123.6"],"是如何变得更快的":["67.56"],"底层":["67.56"],"源码":["67.56"],"vue3在性能上进行了一系列的优化和改进":["67.56"],"主要通过以下几个方面实现了更好的性能":["67.56"],"proxy":["67.56","89.4","89.5","89.9"],"取代了":["67.56"],"是一个专门为vue":["67.57"],"js应用程序开发的状态管理模式":["67.57"],"通过创建一个集中的数据存储":["67.57"],"方便程序中的所有组件进行访问":["67.57"],"是vue的状态管理工具":["67.57"],"面试相关":["68.0"],"常用的组件通信方式有以下几种":["69.1"],"color":["69.3","69.5","69.7","69.9","69.11","69.13"],"89ddff":["69.3","69.5","69.7","69.9","69.11","69.13"],"10px":["69.3","69.5","69.7","69.9","69.11","69.13","73.13"],"父组件将数据传给子组件":["69.3"],"子组件通过props属性接收父组件传递的数据":["69.3"],"子组件通过":["69.5"],"emit方法触发一个自定义事件":["69.5"],"并传递给需要的参数":["69.5"],"defineexpose":["69.7"],"inject":["69.9"],"provide是在父组件中定义的方法":["69.9"],"用于提供数据给子组件":["69.9"],"它接受两个参数":["69.9"],"第一个参数是一个字符串或者一个symbol类型的键":["69.9"],"用于识别提供的数据":["69.9"],"model可以同事支持多个数据双向绑定":["69.11"],"子组件child":["69.11"],"child":["69.11","113.8"],"button":["69.11"],"click":["69.11"],"changeparentmsg":["69.11"],"可以使用第三方库mitt来实现组件之间的通信":["69.13"],"mitt是一个简单且强大的事件总线库":["69.13"],"类似于vue2中的":["69.13"],"eventbus":["69.13"],"它提供了一种方便的方式来在不同组件中传递事件和数据":["69.13"],"直接修改状态":["69.17"],"而不使用":["69.17"],"在渲染列表时":["69.18"],"将索引作为":["69.18"],"在类组件中":["69.19"],"如果没有将事件处理程序绑定到实例上":["69.19"],"可能会导致":["69.19"],"在渲染函数中定义新的函数":["69.21"],"可能会导致组件重新渲染时创建新的函数实例":["69.21"],"影响性能":["69.21"],"ssr之前接触并不深刻":["69.22"],"在旧版的":["69.23"],"mounting":["69.24"],"构造函数":["69.24","127.6"],"在组件被创建时调用":["69.24"],"updating":["69.25"],"static":["69.25","127.6"],"getderivedstatefromprops":["69.25"],"unmounting":["69.26"],"componentwillunmount":["69.26"],"在组件即将被销毁并从":["69.26"],"用于访问功能组件中react":["69.30"],"用于创建对跨渲染保留的元素或值的可变引用":["69.31"],"缓存回调函数":["69.32"],"用于缓存计算值":["69.33"],"用于使用reducer函数的管理状态":["69.34"],"类似于":["69.35"],"虚拟滚动列表通过只渲染可视区域的列表项":["69.36"],"当用户滚动时":["69.36"],"lighthouse主要是用来做性能检测的工具":["69.37"],"指标":["69.38"],"性能指标":["69.38"],"performance":["69.38"],"可访问性":["69.38"],"经过检测":["69.39"],"lighthouse":["69.39"],"会对上述五个维度给出一个的评估得分":["69.39"],"分值范围0":["69.39"],"跨页面通信是指在web开发中":["69.41"],"参数传递":["69.42"],"通过设置cookie":["69.45"],"websocket是一种在客户端和服务器之间进行全双工通信的协议":["69.47"],"跨域是指在浏览器中":["69.48"],"with":["69.49"],"cross":["69.50","95.1","95.5"],"origin":["69.50","137.2"],"resource":["69.50"],"通过在同源服务器上设置代理服务器来转发请求":["69.51"],"cors":["69.52"],"web":["69.53"],"token":["69.53"],"同源策略限制":["69.54"],"同源策略会限制在":["69.54"],"iframe":["69.54"],"中加载的页面与父页面之间的通信":["69.54"],"除非它们具有相同的协议":["69.54"],"域名和端口":["69.54"],"这意味着如果":["69.54"],"内嵌的页面与父页面不是同源的话":["69.54"],"就无法直接进行跨页面通信":["69.54"],"安全性问题":["69.54"],"如果不小心":["69.54"],"进行跨页面通信可能会引入安全漏洞":["69.54"],"例如跨站脚本攻击":["69.54"],"repo开发方式吗":["69.55"],"mono":["69.55"],"repo":["69.55"],"是指将一个项目的所有代码都存储在一个单独的代码仓库":["69.55"],"repository":["69.55"],"usememo":["69.56","78.2"],"前端数据类型":["69.59"],"举个例子说明":["69.60"],"自定义":["69.60"],"使用本地存储管理数据":["69.60"],"uselocalstorage":["69.60"],"initialvalue":["69.60","103.11"],"allsettled":["70.1","75.15"],"包括":["70.7"],"自适应布局":["70.8"],"events":["71.3"],"编程":["71.6"],"typescript常用类型工具":["71.7"],"什么是协商缓存":["72.3"],"实现一个防抖函数":["72.9"],"storage区别":["72.11"],"在命中缓存之前发生":["72.12"],"中间自适应的布局":["72.17"],"哪些改变了原数组":["72.19"],"它的功能是什么":["72.22"],"num":["72.26","74.7","122.4"],"240328面试":["73.0"],"es6新特性":["73.1"],"async":["73.3"],"是":["73.4","73.16","73.25","123.1","131.4"],"子组件传递给父组件严格来讲还是父传子":["73.8","73.10"],"在父组件中定义一个回调函数":["73.9"],"getchildval":["73.9"],"将这个函数绑定在子组件上通过props传入子组件":["73.9"],"当子组件中是时间或者什么实际需要向父组件传值时":["73.9"],"在子组件内就可以调用这个函数并传入值":["73.9"],"此时定义在父组件的函数被触发":["73.9"],"并可以拿到子组件的传值":["73.9"],"父组件传递给子组件":["73.10"],"ref":["73.10"],"子组件将想要暴露给父组件的值放在上面":["73.10"],"然后父组件就可以使用这个值":["73.10"],"首先需要导入对应模块包":["73.10"],"父组件传孙组件":["73.11"],"在跨组件传值过程中":["73.11"],"我们可以使用父传子的方法":["73.11"],"一层一层嵌套传递":["73.11"],"parent":["73.11","107.3","113.4","113.5","113.6","113.7","113.8"],"fc":["73.11"],"child1":["73.11"],"param1":["73.11"],"子组件如何传递给父组件参数":["73.12"],"border":["73.13"],"radius":["73.13"],"边框圆角":["73.13"],"允许创建元素的圆角边框":["73.13"],"box":["73.13","80.0"],"shadow":["73.13"],"容器阴影":["73.13"],"添加元素的阴影效果":["73.13"],"在网页设计和前端开发中":["73.14"],"有许多常用的布局方式可以实现不同的页面结构和样式":["73.14"],"以下是一些常用的布局方式":["73.14"],"传统布局":["73.14"],"基于浮动":["73.14"],"和清除浮动":["73.14"],"clearfix":["73.14"],"的布局":["73.14"],"使用定位":["73.14"],"positioning":["73.14"],"中实现垂直居中可以使用多种方法":["73.15"],"以下是其中几种常见的方式":["73.15"],"flexbox":["73.15"],"container":["73.15","81.8","123.9"],"display":["73.15","74.15","74.16"],"flex":["73.15","78.10"],"align":["73.15","74.20","74.21","74.26"],"宏任务":["73.16"],"macro":["73.16"],"task":["73.16"],"和微任务":["73.16"],"micro":["73.16"],"创建私有变量":["73.18"],"react18":["73.20"],"不再支持ie浏览器":["73.20"],"新项目直接使用":["73.20"],"异步更新":["73.21"],"默认行为":["73.21"],"starttransition":["73.22"],"是一个新的":["73.22"],"旨在帮助开发者优化应用程序的性能和用户体验":["73.22"],"strict":["73.23"],"mode":["73.23","73.25"],"是一个开发模式":["73.23"],"可以帮助开发者发现一些潜在的问题":["73.23"],"在一些情况下":["73.24"],"移除":["73.24","110.18","127.2"],"strictmode":["73.24"],"组件可能不太方便":["73.24"],"concurrent":["73.25"],"的一项新功能":["73.25"],"旨在改善在复杂应用程序中的用户体验和性能":["73.25"],"在传统的":["73.25"],"未定义":["74.2"],"在javascript中":["74.2"],"空值":["74.3"],"表示一个变量被明确地赋值为一个空值":["74.3"],"表示":["74.3"],"交叉类型是将多个类型合并为同一个类型":["74.5","123.1"],"联合类型与交叉类型很有关联":["74.6","123.2"],"tolocalstring":["74.7"],"方法":["74.7","74.10","89.16","89.18","89.21","89.25","89.28","113.8"],"formattednumber":["74.7"],"tolocalestring":["74.7"],"使用默认的语言环境设置":["74.7"],"console":["74.7","74.12","75.3","87.12","89.1","97.1","105.2","105.3","105.5","105.7","108.0"],"log":["74.7","74.12","75.3","87.12","89.1","97.1","105.2","105.3","105.5","105.7","108.0","121.2","134.3","137.3","138.2"],"使用数组分割方法":["74.7"],"formatnumber":["74.7"],"转换为字符串":["74.7"],"并按照小数点拆分成数组":["74.7"],"分为整数部分和小数部分":["74.7"],"最终到底部后":["74.8"],"memo":["74.10","78.2","78.5"],"是react中用于性能优化的高阶组件":["74.10"],"hoc":["74.10"],"它类似于类组件中的":["74.10"],"shouldcomponentupdate":["74.10"],"用于在函数组件中实现组件的浅比较":["74.10"],"shallow":["74.10"],"分别打印":["74.11"],"分析":["74.11"],"这段代码涉及到":["74.11"],"中变量引用和赋值的机制":["74.11"],"需要分析每一步的操作":["74.11"],"打印结果为三次3":["74.12"],"这是因为":["74.12"],"函数是异步执行的":["74.12"],"网格布局是一种基于网络的二维布局系统":["74.13"],"wrapper":["74.14","74.16"],"one":["74.14"],"two":["74.14"],"three":["74.14"],"columns":["74.16","74.22"],"属性和":["74.16","74.22"],"rows":["74.16","74.22"],"设置行列宽高":["74.16"],"属性设置列宽":["74.16"],"属性设置行高":["74.16"],"固定的列宽和行高":["74.16"],"声明了三列":["74.16"],"宽度分别为200px":["74.16"],"100px":["74.16","81.4"],"200px":["74.16"],"row":["74.17","74.24"],"gap":["74.17"],"column":["74.17","74.24"],"属性以及":["74.17","74.26"],"设置间距":["74.17"],"areas":["74.18"],"定义区域":["74.18"],"属性用于定义区域":["74.18"],"一个区域由一个或者多个单元格组成":["74.18"],"auto":["74.19","74.22","81.4"],"flow":["74.19","78.12"],"设置排列先后顺序":["74.19"],"属性控制着自动布局算法怎样运作":["74.19"],"精确指定在网格中被自动布局的元素怎样排列":["74.19"],"默认的放置顺序是":["74.19"],"先行后列":["74.19"],"即先填满第一行":["74.19"],"再开始放入第二行":["74.19"],"即下图英文数字的顺序":["74.19"],"单元格位置设置":["74.20"],"属性设置单元格内容的水平位置":["74.20"],"左中右":["74.20","74.21"],"内容区域位置设置":["74.21"],"属性是整个内容区域在容器里面的水平位置":["74.21"],"属性是整个内容区域的垂直位置":["74.21"],"上中下":["74.21"],"它们都有如下的属性值":["74.21"],"隐式网格":["74.22"],"隐式和显示网格":["74.22"],"显式网格包含了在":["74.22"],"start":["74.24","110.22"],"end":["74.24"],"属性以及grid":["74.24"],"指定网格边框定位的网格线":["74.24"],"可以指定网格项目所在的四个边框":["74.24"],"分别定位在哪根网格线":["74.24"],"从而指定项目的位置":["74.24"],"左边框所在的垂直网格线":["74.24"],"area属性":["74.25"],"place":["74.26"],"单个单元格的位置":["74.26"],"给定数组arr":["75.2"],"执行以下操作后最后打印结果":["75.2"],"resolve":["75.3","75.12"],"eg":["75.5"],"url":["75.5","92.0","114.0"],"http":["75.5","75.7","97.0","98.0"],"www":["75.5","114.0"],"baidu":["75.5","92.0"],"com":["75.5","92.0","97.4","98.0","114.0","137.2"],"k":["75.5","78.12","119.1","119.2","119.6"],"kk":["75.5"],"http中的":["75.6"],"请求是用于确定服务器支持哪些http方法和信息":["75.6"],"它是一种预检请求":["75.6"],"检查服务器支持的方法":["75.7"],"请求可以告诉客户端服务器支持哪些":["75.7"],"返回布尔值":["75.8","110.13"],"箭头函数的this指向":["75.9"],"指向的是由其所属函数或全局作用域决定的":["75.9"],"config":["75.9"],"race":["75.13"],"方法是es12中新增的方法":["75.14"],"方法有一个缺陷":["75.15"],"当有其中一个":["75.15"],"interface":["75.16","78.9","105.3","119.5","119.17","122.4","123.1"],"treedata":["75.16"],"username":["75.16"],"userid":["75.16"],"children":["75.16"],"orgtreedata":["75.16"],"04":["76.0"],"前端笔试题":["76.0"],"实现一个返回":["76.0"],"的异步函数":["76.0"],"能够在":["76.0"],"毫秒后向调用方返回字符串":["76.0"],"ok":["76.0"],"实现一个函数":["76.0"],"能够将诸如":["76.0"],"的数组当作":["76.0"],"动态还是静态的":["77.2","77.4"],"存储状态管理的问题":["77.3"],"异步队列":["77.5","77.22"],"s的原理":["77.7"],"底层用什么实现的":["77.8","77.19"],"应该有哪些指标":["77.11"],"实现顶部导航栏固定有哪些方法":["77.13"],"项目的难点":["77.14"],"使用的原因":["77.15"],"是静态语言还是动态语言":["77.16"],"怎么判断用不用缓存":["77.18"],"协议":["77.20"],"单线程还是多线程":["77.21"],"time":["77.23"],"微任务队列":["77.24"],"memo和usememo的区别":["78.2"],"都是用于优化react应用性能的工具":["78.2"],"但是他们的应用场景和使用方式有所不同":["78.2"],"usecallback的区别":["78.3"],"usecallback":["78.3"],"是一个用于优化性能的react":["78.3"],"它的主要作用是避免在每次渲染的时候都重新创建函数":["78.3"],"通过记住上一次创建的函数":["78.3"],"只有在依赖项在发生变化时才重新创建新的函数":["78.3"],"从而提高性能":["78.3"],"一个函数":["78.3"],"这个函数就是我们需要记住的函数":["78.3"],"一个依赖项数组":["78.3"],"当数组中的依赖项发生变化时":["78.3"],"就会重新创建新的函数":["78.3"],"组件我如果不想让他重复渲染":["78.5"],"但是它内部又有许多usestate变量":["78.5"],"我应该如何操作":["78.5"],"可以使用":["78.5","78.10","103.12","122.2","134.2"],"来实现":["78.5"],"是一个高阶组件":["78.5"],"它会对传入的组件进行":["78.5"],"浅比较":["78.5"],"是否相同":["78.5"],"如果":["78.5"],"没有变化":["78.5"],"react将跳过组件的渲染过程":["78.5"],"从而达到优化的效果":["78.5"],"根节点不同":["78.6"],"vue2中必须要有根标签":["78.6"],"vue3中可以没有根标签":["78.6"],"会默认将多个根标签包裹在一个":["78.6"],"fragement":["78.6"],"文档碎片中":["78.6"],"有利于减少内存":["78.6"],"组合式api和选项式api":["78.6"],"vue2中":["78.6"],"采用的是选项式api":["78.6"],"将数据和函数集中起来处理":["78.6"],"会将功能点切割":["78.6"],"当代码逻辑复杂时":["78.6"],"不利于代码阅读":["78.6"],"vue3中":["78.6"],"采用的是组合式api":["78.6"],"将同一个功能的代码集中起来处理":["78.6"],"使得代码更加有序":["78.6"],"有利于代码的书写和维护":["78.6"],"生命周期的变化":["78.6"],"创建前":["78.6"],"更快的渲染性能":["78.7"],"vue2中的数据响应式会根据数据类型做不同的处理":["78.8"],"如果是对象":["78.8"],"则通过":["78.8"],"descriptor":["78.8"],"拦截对象属性访问":["78.8"],"当数据被访问或者被改变时":["78.8"],"感知并作出反应":["78.8"],"如果是数组":["78.8"],"则通过覆盖数组原型方法":["78.8"],"扩展它的7个变更方法":["78.8"],"type和interface的区别":["78.9"],"type":["78.9","103.10","103.11","119.7","119.10","119.11","119.12","119.14","123.3","123.6","123.9","123.12"],"是类型别名":["78.9"],"顾名思义":["78.9","123.8"],"类型别名只是给类型起一个新名字":["78.9"],"它并不是一个类型":["78.9"],"只是一个别名而已":["78.9"],"有了":["78.9"],"书写typescript类型会更方便":["78.9"],"接口":["78.9"],"是ts设计出来定义对象类型的":["78.9"],"可以对对象的形状进行描述":["78.9"],"两者都可以定义一个对象或函数":["78.9"],"都允许继承":["78.9"],"extends":["78.9","123.12"],"中间自适应的布局我应该如何实现":["78.10"],"布局来实现":["78.10"],"通过给父级容器设置":["78.10"],"并且让他排列方式为垂直排列":["78.10"],"watch和watcheffect的区别":["78.11"],"都是监听器":["78.11"],"编写一个函数来查找字符串数组中的最长公共前缀":["78.12"],"如果不存在公共前缀":["78.12"],"返回空字符串":["78.12"],"输入":["78.12"],"flower":["78.12"],"flight":["78.12"],"fl":["78.12"],"dog":["78.12"],"racecar":["78.12"],"car":["78.12"],"水平扫描法":["78.12"],"fun":["78.12"],"取第一个字符串作为初始前缀":["78.12"],"prefix":["78.12"],"从第二个字符串开始遍历":["78.12"],"不断缩短前缀":["78.12"],"直到当前字符串包含这个前缀":["78.12"],"while":["78.12","98.0"],"拉斯维加斯场馆3d数字动画":["79.0"],"spinner":["81.1"],"rect1":["81.1"],"rect2":["81.1"],"rect3":["81.1"],"turnovercss":["81.2"],"turn":["81.2"],"over":["81.2"],"width":["81.2","81.4"],"60px":["81.2","81.15"],"scalecss":["81.3"],"scale":["81.3","81.6"],"double":["81.3","103.17"],"bounce1":["81.3","81.6"],"cuberotation":["81.4"],"cube":["81.4"],"roate":["81.4"],"cube1":["81.4"],"cube2":["81.4"],"dotroate":["81.5"],"dot":["81.5"],"rotate":["81.5","81.7"],"dot1":["81.5"],"dot2":["81.5"],"scaleloading":["81.6"],"loading":["81.6","81.9","81.10","81.11","81.12","81.13","81.14","81.15"],"bounce2":["81.6"],"bounce3":["81.6"],"gradientrotate":["81.7"],"gradient":["81.7"],"circleloading":["81.8"],"circle":["81.8","81.9","81.10","81.11","81.12","81.13","81.15"],"container1":["81.8"],"circle1":["81.8"],"circle2":["81.8"],"circle3":["81.8"],"circle4":["81.8"],"container2":["81.8"],"diverge":["81.9"],"center":["81.9","81.10","81.11","81.12","81.13","81.14","81.15"],"animation":["81.9","81.10","81.11","81.12","81.13","81.15"],"animationlist":["81.9","81.10","81.11","81.12","81.13","81.14","81.15"],"big":["81.9"],"rotationcontraction":["81.10"],"calss":["81.10"],"旋转收缩":["81.11"],"contraction":["81.11"],"动态位置":["81.12"],"moving":["81.12"],"ricerotate":["81.13"],"musicdance":["81.14"],"trianglebloom":["81.15"],"bottom":["81.15"],"left":["81.15","121.1","121.2","121.4","123.9"],"80px":["81.15"],"translatex":["81.15"],"translatey":["81.15"],"30px":["81.15"],"rotatedeg1":["81.15"],"0deg":["81.15"],"rotatedeg2":["81.15"],"180deg":["81.15"],"40px":["81.15"],"优先级":["82.0"],"浏览器通过优先级来判断哪些属性值与一个元素最为相关":["82.0"],"从而在该元素上应用这些属性值":["82.0"],"优先级是基于不同种类选择器组成的匹配规则":["82.0"],"权重优先级作用":["82.0"],"在同一个元素使用不同的方式":["82.0"],"声明了相同的一条或多条":["82.0"],"规则":["82.0"],"浏览器会通过权重来判断哪一种方式的声明":["82.0"],"与这个元素最为相关":["82.0"],"从而在该元素上应用这个声明方式声明的所有":["82.0"],"优先级就是分配给指定的":["82.0"],"声明的一个权重":["82.0"],"它由":["82.0"],"实际效果":["83.0","84.0"],"backgrounddemo":["83.0"],"代码块":["83.0"],"dazzlingcss":["86.0"],"数据类型的扩展":["87.0"],"使用反引号":["87.2"],"包裹的字符串":["87.2"],"支持多行文本和嵌入表达式":["87.2"],"允许定义自定义的字符串处理函数":["87.3"],"以处理模版字符串":["87.3"],"includes":["87.4","110.19"],"startwith":["87.5"],"endwith":["87.5"],"propotype":["87.6"],"fromcodepoint":["87.7"],"raw":["87.8"],"用于获取一个模版字符串的原始字符串形式":["87.8"],"忽略其中的转义字符":["87.8"],"codepointat":["87.9"],"用于返回指定位置的字符的码点":["87.9"],"normalize":["87.10"],"扩展运算符类似":["87.12"],"rest":["87.12","88.15"],"参数的逆运算":["87.12","88.15"],"将一个数组转为用逗号分隔的参数序列":["87.12"],"该方法用于将两类对象转为真正的数组":["87.13"],"类似数组的对象":["87.13"],"like":["87.13"],"和可遍历":["87.13"],"of":["87.14","89.29"],"根据传入的参数创建一个新数组":["87.14"],"find":["87.15","110.5","127.4"],"findindex":["87.15"],"fill":["87.16"],"使用固定值填充一个数组中从起始索引":["87.16"],"默认为":["87.16"],"copywithin":["87.17"],"用于将数组中的一部分元素复制到指定位置":["87.17"],"keys":["87.18"],"values":["87.18"],"entries":["87.18"],"提供三个新的方法":["87.18"],"允许在大括号里面":["87.20"],"直接写入变量和函数":["87.20"],"作为对象的属性和方法":["87.20"],"定义对象的属性":["87.21","88.21"],"有两种方法":["87.21","88.21"],"方法一":["87.21","88.21","92.0"],"is":["87.22","89.5","123.6"],"value1":["87.22"],"value2":["87.22"],"用于比较两个值是否相同":["87.22"],"assign":["87.23"],"sources":["87.23"],"将一个或多个源对象的属性复制到目标对象中":["87.23"],"getprototypeof":["87.24"],"setprototypeof":["87.25"],"在es6之前":["87.27","88.23"],"regexp构造函数不允许使用第二个参数添加修饰符":["87.27"],"用于返回正则表达式的修饰符":["87.28"],"用于处理大于":["87.29"],"uffff":["87.29"],"也称为":["87.30"],"粘连":["87.30"],"用于指定只从目标字符串的当前位置开始匹配":["87.30"],"sticky":["87.31"],"字符串对象的":["87.32"],"之前":["87.34"],"不能直接为函数的参数指定默认值":["87.34"],"只能采用变通的方法":["87.34"],"func":["87.34","137.3"],"新增了一个指数运算符":["87.36"],"一":["88.0"],"关键字是用于声明一个常量":["88.3"],"其值在声明后不能再被改变":["88.3"],"声明的变量也是块级作用域的":["88.3"],"允许按照一定的模式":["88.5"],"从数组和对象中提取值":["88.5"],"对变量进行赋值":["88.5"],"这个过程被称为解构":["88.5"],"destructuring":["88.5","98.0"],"基本用法":["88.5","122.4"],"之前赋值的写法":["88.5"],"可以写成这种形式":["88.5"],"上面这种写法属于":["88.5"],"模式匹配":["88.5"],"对象的解构与数组有一个重要的不同":["88.6"],"数组的元素是按次序排列的":["88.6"],"变量的取值由它们的位置决定":["88.6"],"而对象的属性没有次序":["88.6"],"变量必须与属性同名":["88.6"],"才能取到正确的值":["88.6"],"bar":["88.6","98.0","105.5"],"foo":["88.6","88.21","89.2","98.0","105.5","105.7"],"这是foo":["88.6"],"这是bar":["88.6"],"如果解构失败":["88.6"],"变量的值等于":["88.6"],"bar2":["88.6"],"如果变量名与属性名不一致":["88.6"],"则必须写成下面这样":["88.6"],"字符串也可以解构赋值":["88.7"],"这是因为在解构字符串的时候":["88.7"],"字符串被转化成了一个类数组对象":["88.7"],"解构赋值时候":["88.8"],"如果等号右边是数值和布尔值":["88.8"],"add":["88.9","89.9","89.18","89.28","137.2","137.3"],"y":["88.9","119.5"],"上述示例中":["88.9","122.3"],"我们可以在函数参数中设置默认值":["88.10"],"这意味着如果调用函数的时候没有为参数提供有效值":["88.10"],"它们将会使用默认值":["88.10"],"这对简化函数调用和处理缺少参数时的情况有用":["88.10"],"greet":["88.10"],"箭头函数具有简洁的语法":["88.11"],"清晰的上下文":["88.11"],"继承外部作用域的arguments等特点":["88.11"],"适合简化代码":["88.11"],"箭头函数没有自己的":["88.12"],"箭头函数是匿名函数":["88.13"],"不能作为构造函数":["88.13"],"模版字符串是es6中引入的一种新的字符串语法":["88.14"],"它允许字符串中插入变量或者表达式":["88.14"],"而不需要使用字符串拼接符号":["88.14"],"模版字符串使用反引号":["88.14"],"扩展操作符用于展开可迭代对象":["88.15"],"字符串等":["88.15"],"好比":["88.15"],"将其元素逐个展开":["88.15"],"以便于在函数调用":["88.15"],"数组字面量":["88.15"],"对象字面量中使用":["88.15"],"使用扩展操作符时":["88.15"],"arr1":["88.18"],"es6引入了一种更简洁的方式来定义对象字面量":["88.19"],"es6中":["88.20"],"可以使用更简洁的语法来定义对象字面量":["88.20"],"还可以直接在对象字面量中定义方法":["88.20"],"javascript中":["88.21"],"方法二":["88.21"],"bc":["88.21"],"es6引入了类":["88.22"],"的概念":["88.22"],"使得面向对象的编程变得更加直观和易于理解":["88.22"],"类是一种蓝图或模板":["88.22"],"模块化是一种组织和管理javascript代码的方法":["88.23"],"它将代码拆分为独立的模块":["88.23"],"每个模块都有自己的作用域和功能":["88.23"],"这种方法有助于提高代码的可维护性":["88.23"],"可重用性和可扩展性":["88.23"],"二":["89.0"],"用于修改某些操作的默认行为":["89.1"],"等同于在语言层面做出修改":["89.1"],"所以属于一种":["89.1"],"元编程":["89.1"],"programming":["89.1"],"即对编程语言进行编程":["89.1"],"proxy可以理解成":["89.1"],"在目标对象之前架设一层拦截":["89.1"],"外界对该对象进行访问":["89.1"],"都必须先通过这层拦截":["89.1"],"因此提供了一种机制":["89.1"],"可以对外界的访问进行过滤和改写":["89.1"],"proxy这个词的原意是代理":["89.1"],"用在这里表示由它":["89.1"],"来代理某些操作":["89.1"],"可以翻译为":["89.1"],"代理器":["89.1"],"get":["89.1","89.2","89.13"],"propkey":["89.1","89.2","89.4"],"receiver":["89.1","89.2"],"getting":["89.1"],"reflect":["89.1","89.8","89.9"],"set":["89.1","89.2","89.9","89.13","89.28","89.29","102.7","103.12","110.21"],"handler":["89.2","89.6"],"支持的拦截操作":["89.2"],"操作":["89.2","89.6"],"返回值":["89.2"],"拦截对象属性的读取":["89.2"],"实例的方法":["89.3"],"方法用于拦截某个属性的读取操作":["89.4"],"可以接收三个函数":["89.4"],"依次为目标对象":["89.4","89.5"],"属性名和proxy实例本身":["89.4"],"严格地说":["89.4"],"是操作行为所针对的对象":["89.4"],"其中最后一个参数可选":["89.4","89.5"],"person":["89.4","89.5"],"方法用来拦截某个属性的赋值操作":["89.5"],"可以接受四个参数":["89.5"],"属性名":["89.5"],"属性值和":["89.5"],"实例本身":["89.5"],"嘉定":["89.5"],"对象有一个":["89.5"],"age":["89.5","97.5","103.10","114.0"],"该属性应该是一个不大于":["89.5"],"的整数":["89.5"],"那么可以使用":["89.5"],"保证":["89.5"],"的属性值符合要求":["89.5"],"validator":["89.5"],"isinteger":["89.5"],"throw":["89.5"],"typeerror":["89.5"],"the":["89.5"],"not":["89.5"],"an":["89.5"],"integer":["89.5"],"方法拦截函数的调用":["89.6"],"方法可以接受三个参数":["89.6"],"分别是目标对象":["89.6"],"目标对象的上下文对象":["89.6"],"目标对象的参数数组":["89.6"],"是es6":["89.7"],"中操作对象而提供的新api":["89.7"],"是为了解决在es6之前使用对象的操作存在一些不一致和不直观的地方":["89.7"],"有时会抛出错误的问题":["89.7"],"基本特点":["89.7"],"对象的一些明显属于语言内部的方法":["89.7"],"放到":["89.7"],"对象上":["89.7"],"现阶段":["89.7"],"某些方法同时在":["89.7"],"对象上部署":["89.7"],"未来的新方法将只部署在":["89.7"],"也就是说":["89.7","89.25"],"对象上可以拿到语言内部的方法":["89.7"],"修改某些":["89.7"],"方法的返回结果":["89.7"],"让其不会抛出错误":["89.7"],"thisarg":["89.8"],"实现一个观察者模式":["89.9"],"创建一个观察者对象":["89.9"],"observer":["89.9"],"listeners":["89.9"],"添加观察者":["89.9"],"subscribe":["89.9"],"listener":["89.9"],"移除观察者":["89.9"],"unsubscribe":["89.9"],"之前对象属性名都是字符串":["89.10"],"这容易造成属性名的冲突":["89.10"],"引入了一种新的原始数据类型":["89.10"],"表示独一无二的值":["89.10"],"它属于":["89.10"],"weakmap":["89.11","89.14"],"map是一种键值对的集合":["89.12"],"返回键值对":["89.13"],"添加键值对":["89.13"],"返回实例":["89.13","89.18"],"存储":["89.15"],"添加值":["89.18"],"delete":["89.18","127.4"],"储存dom节点":["89.20"],"iterator":["89.22","89.23","89.26","89.28","98.0"],"为各种数据结构提供一个统一的":["89.24"],"创建一个指针对象":["89.25"],"指向当前数据结构的起始位置":["89.25"],"遍历器对象本质上":["89.25"],"就是一个":["89.25"],"指针对象":["89.25"],"第一次调用指针对象的":["89.25"],"可以将指针指向数据结构的第一个成员":["89.25"],"第二次调用指针对象的":["89.25"],"指针就指向数据结构的第二个成员":["89.25"],"不断调用指针对象的":["89.25"],"直到它只想数据结构的结束位置":["89.25"],"下一步操作":["89.27"],"解构赋值":["89.28","98.0"],"对数组和":["89.28"],"结构进行解构赋值时":["89.28"],"会默认使用":["89.28"],"symbol":["89.28"],"循环":["89.29"],"循环用于遍历可迭代对象":["89.29"],"例如数组":["89.29"],"字符串":["89.29"],"map":["89.29","101.1","101.2","103.13","110.2","110.21","131.1","131.3","131.4"],"它会迭代对象的每个元素并执行指定的代码块":["89.29"],"循环遍历数组":["89.29"],"generator":["89.30","98.0"],"gererator":["89.30"],"关键字与函数名之间有一个星号":["89.31"],"函数体内部使用":["89.31"],"yield":["89.31"],"表达式":["89.31"],"定义不同的内部状态":["89.31"],"a标签直接下载":["90.0"],"alink":["90.0"],"document":["90.0","97.0","97.1","97.2"],"createelement":["90.0"],"download":["90.0"],"split":["90.0"],"offsetwidth":["91.0"],"代表了元素的宽度":["91.0"],"包括边框和填充":["91.0"],"但不是边距":["91.0"],"offsetheight":["91.0"],"代表了元素的高度":["91.0"],"offsettop":["91.0"],"代表了返回元素的上外缘距离最近采用定位父元素内壁的距离":["91.0"],"如果父元素中没有采用定位的":["91.0"],"则是获取上外边缘距离文档内壁的距离":["91.0"],"offsetleft":["91.0"],"此属性和offsettop的原理是一样的":["91.0"],"只不过方位不同":["91.0"],"scrolltop":["91.0"],"设置或获取位于对象最顶端和窗口中可见内容的最顶端之间的距离":["91.0"],"zhidao":["92.0"],"question":["92.0"],"1768422895052400180":["92.0"],"fr":["92.0"],"iks":["92.0"],"word":["92.0"],"slice":["92.0","110.17"],"ie":["92.0"],"gbk":["92.0"],"这里我们将发出方成为客户端":["93.1"],"接收方成为服务端":["93.1"],"tcp建立连接主要分为三部分":["93.1"],"可简单描述为":["93.1"],"客户端向服务端发起tcp请求":["93.1"],"服务端响应客户端":["93.1"],"同意建立tcp连接":["93.1"],"客户端向服务端最后确认tcp连接建立":["93.1"],"术语":["93.1"],"在数据传输完毕之后会进行tcp四次握手即是tcp连接关闭":["93.2"],"tcp需要进行四次挥手的原因在于tcp连接是双全工":["93.2"],"即双方通信":["93.2"],"每个方向都需要进行单独关闭":["93.2"],"四次挥手详细过程":["93.2"],"最开始的一次挥手":["93.2"],"客户端发起":["93.2"],"fin":["93.2"],"包":["93.2"],"客户端进入":["93.2"],"wait":["93.2"],"internet通信":["93.3"],"ip":["94.0"],"四":["94.0"],"五层":["94.0"],"osi七层模型区别":["94.0"],"网络层次可划分为":["94.0"],"四层因特网协议栈":["94.0"],"csrf攻击":["95.0"],"site":["95.1","95.5","97.4"],"中内嵌的文本中":["95.2"],"恶意内容以":["95.2"],"script":["95.2"],"攻击分类":["95.3"],"根据攻击的来源":["95.3"],"xss攻击可以分为存储行":["95.3"],"httponly":["95.4"],"在cookie中设置httponly属性之后":["95.4"],"js脚本将无法获取到cookie信息":["95.4"],"输入过滤":["95.4"],"一般是用于对于输入格式的检查":["95.4"],"邮箱":["95.4"],"电话号码":["95.4"],"request":["95.5"],"验证码":["95.6"],"强制用户必须与应用进行交互":["95.6"],"csrf":["95.7"],"xss攻击和csrf攻击":["95.8"],"的区分":["96.0"],"在原生js中会有三个很常见的函数":["96.0"],"它们的作用就是改变当前函数的":["96.0"],"指针":["96.0"],"但是细微来说它们还是有不同的":["96.0"],"改变函数的指向的同时":["96.0"],"立即进行调用":["96.0"],"则是在函数进行调用之前":["96.0"],"就强行给变了":["96.0"],"的指向":["96.0"],"进行前":["96.0"],"它的效果是返回一个函数":["96.0"],"只是给变了":["96.0"],"是直接存储在浏览器的一小串数据":["97.0"],"它们是":["97.0"],"cookie中读取":["97.1"],"你的浏览器是否存储了本网站的任何cookie":["97.1"],"让我们来看看":["97.1"],"在javascript":["97.1"],"我们使用谷歌分析来统计":["97.1"],"所以应该存一些cookie":["97.1"],"cookie":["97.1","97.2","97.5"],"的值是由":["97.1"],"我们可以写入":["97.2"],"但这不是一个数据属性":["97.2"],"它是一个":["97.2"],"访问器":["97.2"],"对其的赋值操作会被特殊处理":["97.2"],"对于":["97.2","123.7"],"的写入操作只会更新其中提到的cookie":["97.2"],"而不会涉及其它cookie":["97.2"],"mypath":["97.3"],"url路径前缀必须是绝对路径":["97.3"],"domain控制了可访问cookie的域":["97.4"],"但是在实际中":["97.4"],"有一些限制":["97.4"],"我们无法设置任何域":["97.4"],"无法从另一个二级域访问cookie":["97.4"],"other":["97.4"],"永远不会收到在":["97.4"],"max":["97.5"],"默认情况下":["97.5"],"如果一个cookie没有设置这两个参数中的任何一个":["97.5"],"那么在关闭浏览器后":["97.5"],"它就会消失":["97.5"],"此类cookie被称为":["97.5"],"session":["97.5"],"为了让cookie在关闭浏览器后仍然存在":["97.5"],"cookiey应该只能被通过https传输":["97.6"],"的一些配置命令":["98.0"],"env":["98.0"],"browser":["98.0"],"node":["98.0","102.2","116.0"],"ecmafeatures":["98.0"],"lambda表达式":["98.0"],"arrowfunctions":["98.0"],"classes":["98.0"],"ruanyifeng":["98.0"],"docs":["98.0"],"函数参数的默认值":["98.0"],"defaultparams":["98.0"],"块级作用域":["98.0"],"允许使用let":["98.0"],"blockbindings":["98.0"],"允许使用模块":["98.0"],"模块内默认严格模式":["98.0"],"modules":["98.0"],"允许字面量定义对象时":["98.0"],"用表达式做属性名":["98.0"],"属性名表达式":["98.0"],"objectliteralcomputedproperties":["98.0"],"允许对象字面量方法名简写":["98.0"],"method":["98.0"],"hello":["98.0","108.0","137.3"],"等同于":["98.0"],"objectliteralshorthandmethods":["98.0"],"对象字面量属性名简写":["98.0"],"baz":["98.0"],"objectliteralshorthandproperties":["98.0"],"rest参数":["98.0"],"restparams":["98.0"],"扩展运算符":["98.0"],"spread":["98.0"],"of循环":["98.0"],"forof":["98.0"],"generators":["98.0"],"模板字符串":["98.0"],"templatestrings":["98.0"],"superinfunctions":["98.0"],"对象的扩展运算符":["98.0"],"experimentalobjectrestspread":["98.0"],"rules":["98.0"],"定义对象的set存取器属性时":["98.0"],"强制定义get":["98.0"],"accessor":["98.0"],"pairs":["98.0"],"指定数组的元素之间要以空格隔开":["98.0"],"后面":["98.0"],"never参数":["98.0"],"之前和":["98.0"],"之后不能带空格":["98.0"],"always参数":["98.0"],"之后必须带空格":["98.0"],"bracket":["98.0"],"spacing":["98.0"],"在块级作用域外访问块内定义的变量是否报错提示":["98.0"],"block":["98.0"],"scoped":["98.0"],"后面的":["98.0"],"必须与if在同一行":["98.0"],"javascript的":["100.0"],"esm":["100.0"],"amd":["100.0"],"umd":["100.0"],"cjs":["100.0"],"esm代表es模块":["100.0"],"是javascript提出的实现一个标准模块的系统方案":["100.0"],"类似":["100.0"],"map与array":["101.0"],"方法创建一个新数组":["101.1"],"这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成":["101.1"],"语法":["101.1"],"mymap":["101.2"],"moment":["102.0","102.6","102.7","102.11","102.13","102.14","102.15"],"引入moment":["102.1"],"js方式引入":["102.2"],"设定moment区域为中国":["102.4"],"获取时间":["102.6"],"获取当前时间":["102.6"],"获取今天0时0分0秒":["102.6"],"startof":["102.6"],"day":["102.6"],"获取本周第一天":["102.6"],"周日":["102.6"],"0时0分0秒":["102.6"],"week":["102.6"],"获取本周周一0时0分0秒":["102.6"],"设置时间":["102.7"],"设置年份":["102.7"],"year":["102.7"],"设置月份":["102.7"],"month":["102.7"],"january":["102.7"],"december":["102.7"],"格式化时间":["102.8"],"格式代码":["102.8"],"返回值例子":["102.8"],"数字表示的月份":["102.8"],"没有前导零":["102.8"],"1到12":["102.8"],"mm":["102.8","102.15"],"有前导零":["102.8"],"01到12":["102.8"],"mmm":["102.8"],"三个字母缩写表示的月份":["102.8"],"jan到dec":["102.8"],"mmmm":["102.8"],"月份":["102.8"],"完整的文本格式":["102.8"],"january到december":["102.8"],"q":["102.8"],"比较时间":["102.9"],"获取两个日期之间的时间":["102.9"],"日期格式化输出实例":["102.11"],"format":["102.11","102.14","102.15"],"相对时间":["102.12"],"输出实例":["102.12"],"日历时间输出实例":["102.13"],"subtract":["102.13"],"多语言支持输出实例":["102.14"],"其它输出实例":["102.15"],"yyyy":["102.15"],"dd":["102.15"],"格式化显示当前时间":["102.15"],"reduce":["103.0","103.7","103.13","103.15","103.16","110.8"],"reduce方法主要接收两个参数":["103.2"],"回调函数是数组中每个元素执行的函数":["103.3"],"其返回值将作为下一次调用回调函数时的":["103.3"],"accumulator":["103.3","103.4"],"参数":["103.3","119.6","119.14","119.16"],"对于最后一次调用":["103.3"],"第一次调用回调函数初始化":["103.4"],"的值":["103.4"],"方法不仅可以求纯数字数组的和":["103.7"],"针对对象数组里的值也可以求和":["103.7"],"names":["103.9"],"陈大":["103.9"],"李二":["103.9"],"朱四":["103.9"],"objarr":["103.10"],"alice":["103.10"],"连接包含在对象数组中的数组":["103.11"],"books":["103.11"],"备注":["103.12"],"来实现同样的效果":["103.12"],"来替代":["103.13"],"filer":["103.13"],"链接一系列":["103.14"],"处理程序":["103.14"],"param":["103.14","127.6"],"一个":["103.14"],"处理程序列表":["103.14"],"每个处理程序接收前一个处理程序解决的结果并返回另一个":["103.14"],"开始调用":["103.14"],"会跳过稀疏数组中缺失的元素":["103.15"],"但不会跳过":["103.15"],"方法读取":["103.16"],"组合使用的构建块":["103.17"],"全局的":["104.1"],"方法设置一个定时器":["104.1"],"一旦定时器到期":["104.1"],"方法重复调用一个函数或执行一个代码片段":["104.2"],"在每次调用之间具有固定的时间间隔":["104.2"],"尽管":["104.3"],"setintervalfunctional":["104.5"],"window":["104.6","114.0"],"告诉浏览器":["104.6"],"你希望执行一个动画":["104.6"],"并且要求浏览器在下次重绘之前调用指定的回调函数更新动画":["104.6"],"该方法需要传入一个回调函数作为参数":["104.6"],"该回调函数会在浏览器下一次重绘之前执行":["104.6"],"requestanimationframe":["104.7"],"在函数体中":["105.1"],"非显式或隐式地简单调用函数时":["105.1"],"在严格模式下":["105.1"],"函数内的":["105.1"],"正常模式下":["105.2"],"this指向的是":["105.2"],"全局window对象":["105.2"],"func1":["105.2"],"student":["105.3"],"lucas":["105.3","105.5"],"改变this指向":["105.4"],"它们都是用来改变相关函数的":["105.4"],"但这个":["105.4"],"instance":["105.5"],"箭头函数的":["105.6"],"指向的是由其所属函数或者全局作用域决定的":["105.6"],"我们常常把通过":["105.7"],"进行绑定的情况称为显示绑定":["105.7"],"根据调用关系确定":["105.7"],"指向的情况称为隐式绑定":["105.7"],"显示绑定的优先级会比隐式绑定的优先级高":["105.7"],"obj1":["105.7","111.4","111.5"],"obj2":["105.7"],"是一种有着":["106.0"],"动态类型":["106.0"],"动态语言":["106.0"],"typeof返回值":["106.1"],"对象包装器":["106.1"],"不适用":["106.1"],"在计算机科学中":["106.3","130.1"],"是指内存中的可以被标识符引用的一块区域":["106.3"],"对象是唯一可变的值":["106.3"],"事实上":["106.3"],"也是具有额外可调用能力的对象":["106.3"],"typeof":["106.4"],"操作符":["106.4","123.7"],"运算符返回一个字符串":["106.4"],"表示操作数的类型":["106.4"],"所有原始类型都可以使用":["106.4"],"运算符进行测试":["106.4"],"javascript中对象分为":["107.1"],"函数对象":["107.1"],"普通对象":["107.1"],"每个对象都有":["107.1"],"proto":["107.1"],"是函数独有的属性":["107.2"],"从图中可以看到它从一个对象指向另一个对象":["107.2"],"属性是对象独有的":["107.3"],"包括函数":["107.3"],"从图中我们可以看到":["107.3"],"属性是从一个对象指向另一个对象":["107.3"],"即从一个对象指向该对象的原型对象":["107.3"],"也可以理解为父对象":["107.3"],"显然它的含义就是告诉我们一个对象原型对象是谁":["107.3"],"中我们可以知道":["107.3"],"上添加的属性方法叫做原型属性和原型方法":["107.3"],"是对象才有的属性":["107.4"],"从图中看到它是从一个对象指向一个函数的":["107.4"],"指向的函数就是该对象的构造函数":["107.4"],"每个对象都有构造函数":["107.4"],"就好比上面的":["107.4"],"p1":["107.4"],"就是一个对象":["107.4"],"的构造函数是谁呢":["107.4"],"javascript原型":["107.5"],"关于变量的提升":["108.0"],"先看下面一个例子":["108.0"],"此时打印出来的是5":["108.0"],"你以为打印的是undefined":["108.0"],"错":["108.0"],"打印的是":["108.0"],"再来看一个例子":["108.0"],"现在你以为它会报错":["108.0"],"不存在的":["108.0"],"reflow":["109.1","109.4"],"repaint":["109.2","109.4"],"当render":["109.2"],"树中的一些元素需要更新属性":["109.2"],"而这些属性只是影响元素的外观":["109.2"],"风格":["109.2"],"而不会影响布局的":["109.2"],"比如background":["109.2"],"的节点叫做":["109.3"],"渲染器":["109.3"],"repaint重绘":["109.4"],"回流":["109.4"],"必定引起":["109.4"],"重绘":["109.4"],"尽量避免改变布局属性":["109.5"],"减少选择器的复杂性":["109.6"],"我们也知道回流的花销也不小":["109.7"],"该方法返回数组中第一次出现给定元素的下标":["110.1"],"如果不存在则返回":["110.1"],"该方法是将数组中的每个元素调用一个提供的函数":["110.2"],"结果作为一个新的数组返回":["110.2"],"foreach":["110.3"],"该方法是将数组中的每个元素执行传进提供的函数":["110.3"],"该方法是将所有元素进行判断":["110.4","110.5","110.6"],"every":["110.6"],"如果所有的元素都符合判断条件":["110.6"],"some":["110.7"],"该方法将所有元素进行判断":["110.7"],"如果存在至少一个元素符合判断条件":["110.7"],"pop":["110.9"],"该方法是在数组后面删除最后一个元素":["110.9"],"该方法是在数组最后一个元素后面添加一个或多个元素":["110.10"],"shift":["110.11"],"该方法是会删除掉数组的第一项":["110.11"],"unshift":["110.12"],"该方法是将一个或者多个元素添加到数组的开头":["110.12"],"返回新数组的长度":["110.12"],"isarray":["110.13"],"该方法是判断目标元素是否为数组":["110.13"],"concat":["110.14"],"该方法可以讲多个数组拼接成一个数组":["110.14"],"join":["110.15","110.16"],"该方法是将数组中的元素拼接成字符串":["110.15"],"拼接格式为join函数传入的参数":["110.15"],"tostring":["110.16"],"该方法也是将数组转化为字符串":["110.16"],"方法不同的是":["110.16"],"拼接格式与函数参数无关":["110.16"],"都是以逗号":["110.16"],"拼接":["110.16"],"该方法传入一个数字":["110.17"],"表示从传入的数字为要处理的元素的下标":["110.17"],"并把小于这个下标对应的元素的元素都删除掉":["110.17"],"splice":["110.18"],"该方法通过":["110.18"],"替换":["110.18"],"已存在的元素和":["110.18"],"或添加新元素":["110.18"],"并且就地改变一个数组的内容":["110.18"],"该方法用来判断一个数组是否包含一个指定的值":["110.19"],"flat":["110.20"],"方法创建一个新的数组":["110.20"],"并根据指定深度递归地将所有子数组元素拼接到新的数组中":["110.20"],"可以传一个可选参数":["110.20"],"该方法从":["110.21"],"可迭代对象":["110.21"],"类数组对象":["110.21"],"创建一个新的浅拷贝的数组实例":["110.21"],"或者对象是不可迭代的":["110.21"],"表示带有":["110.21"],"range":["110.22"],"序列生成器函数":["110.22"],"通常称为":["110.22"],"clojure":["110.22"],"php":["110.22"],"flatmap":["110.23"],"该方法对数组中的每个元素应用给定的回调函数":["110.23"],"然后将结果展开一级":["110.23"],"返回一个新数组":["110.23"],"它等价于在调用":["110.23"],"javascript是有两大数据类型":["111.1"],"shallowclone":["111.3"],"hasownproperty":["111.3"],"深拷贝开辟一个新的栈":["111.4"],"两个对象属性完全相同":["111.4"],"但是对应两个不同的地址":["111.4"],"修改一个对象的属性":["111.4"],"不会改变另一个对象的属性":["111.4"],"常见的深拷贝方式":["111.4"],"lodash":["111.4"],"clonedeep":["111.4"],"f":["111.4"],"浅拷贝和深拷贝都创建出一个新的对象":["111.5"],"但在复制对象属性的时候":["111.5"],"行为就不一样":["111.5"],"浅拷贝只复制属性指向某个对象的指针":["111.5"],"而不复制对象本身":["111.5"],"新旧对象还是共享同一块内存":["111.5"],"修改对象属性会影响原对象":["111.5"],"浅拷贝":["111.5"],"前提为拷贝类型为引用类型的情况下":["111.6"],"面试官":["111.7"],"当用户打开网站并进行交互时":["112.0"],"网站所需的所有资源":["112.0"],"离线操作":["112.1"],"缓存流程":["112.2"],"缓存命中机制流程":["112.2"],"发送请求":["112.2"],"根据请求头的":["112.2"],"强制缓存就是向浏览器缓存查找该请求结果":["112.3"],"并根据该结果的缓存规则来决定是否使用该缓存结果的过程":["112.3"],"当浏览器向服务器发送请求时":["112.4"],"服务器会将缓存规则放入http响应报文的http头中和请求结果一起返回给浏览器":["112.4"],"控制强制缓存的字段分别是":["112.4"],"expires":["112.4","112.7"],"cache":["112.4"],"control":["112.4"],"的优先级":["112.4"],"比":["112.4"],"优先级高":["112.4"],"是http":["112.4"],"0控制网页缓存的字段":["112.4"],"其值为服务器返回该请求结果缓存的到期时间":["112.4"],"即再次发起该请求时":["112.4"],"协商缓存是强缓存失效后":["112.5"],"协商缓存的标识也是在响应报文的http头中和请求结果一起返回给浏览器的":["112.6"],"控制协商缓存的分别有":["112.6"],"last":["112.6"],"modified":["112.6"],"since":["112.6"],"etag":["112.6"],"none":["112.6","131.8"],"match":["112.6"],"强制缓存优先于协商缓存进行":["112.7"],"若强制缓存":["112.7"],"彻底理解浏览器的缓存机制":["112.8"],"继承":["113.0"],"继承可以使得子类有父类别的各种属性和方法":["113.1"],"而不需要再次编写相同的代码":["113.1"],"在子类别继承父类别的同时":["113.1"],"可以重新定义某些属性":["113.1"],"并重写某些方法":["113.1"],"即覆盖父类别的原有属性和方法":["113.1"],"使其获得与父类别不同的功能":["113.1"],"虽然":["113.1"],"不是真正的面相对象语言":["113.1"],"但天生的灵活性":["113.1"],"使应用场景更丰富":["113.1"],"关于继承":["113.1"],"原型链继承":["113.2"],"原型链继承是比较常见的继承方式之一":["113.3"],"其中涉及构造函数":["113.3"],"原型和实例":["113.3"],"三者之间存在着一定的关系":["113.3"],"即每一个构造函数都有一个原型对象":["113.3"],"原型对象又包含一个指向构造函数的指针":["113.3"],"而实例则包含一个原型对象的指针":["113.3"],"借助":["113.4"],"前面两种继承方式":["113.5"],"各有优缺点":["113.5"],"组合继承则是将前面两种继承方式结合继承起来":["113.5"],"这里主要借助":["113.6"],"create":["113.6","113.8"],"方法实现普通对象的继承":["113.6"],"friends":["113.6"],"寄生式继承在上面的继承基础上进行了优化":["113.7"],"利用这个浅拷贝的能力再进行增强":["113.7"],"添加一些方法":["113.7"],"借助解决普通对象的继承问题的":["113.8"],"在前面几种继承方式的优缺点基础上进行改造":["113.8"],"这也是所有继承方式里面相对最优的继承方式":["113.8"],"clone":["113.8"],"这里改用":["113.8"],"就可以减少组合继承中多进行一次构造的过程":["113.8"],"类的继承":["113.9"],"javascript如何实现继承":["113.10"],"假设当前页完整地址是":["114.0"],"example":["114.0"],"path":["114.0"],"获取当前窗口的url":["114.0"],"location":["114.0"],"href":["114.0"],"获取当前窗口的主机名":["114.0"],"端口":["114.0"],"防抖与节流本质上是优化高频率代码的一种手段":["115.0"],"如浏览器的":["115.0"],"throttle":["115.1"],"声明一个变量当标志位":["115.2"],"记录当前代码是否在执行":["115.2"],"如果正在执行":["115.2"],"取消这次方法的执行":["115.2"],"直接":["115.2"],"retun":["115.2"],"如果有空闲":["115.2"],"正常触发方法执行":["115.2"],"时间戳写法":["115.2"],"事件会立即执行":["115.2"],"停止触发后没有办法再次执行":["115.2"],"throttledate":["115.2"],"debounce":["115.3"],"需要一个延时定时器来辅助实现":["115.4"],"延迟执行需要执行的代码":["115.4"],"如果方法多次触发":["115.4"],"把上次记录的延迟执行代码用":["115.4"],"cleartimeout":["115.4"],"清除掉":["115.4"],"重新开始计时":["115.4"],"如果计时完毕":["115.4"],"没有方法来访问触发":["115.4"],"则执行代码":["115.4"],"都可以通过":["115.5"],"防抖":["115.6"],"搜索框搜索输入":["115.6"],"防抖与节流":["115.7"],"是一个基于":["117.0"],"chrome":["117.0"],"v8":["117.0"],"引擎":["117.0"],"运行环境":["117.0"],"非阻塞i":["117.1"],"在单线程当中":["117.1"],"当一段代码运行需要很长时间的时候":["117.1"],"一个没有终止的递归或者一个没有结束条件的循环":["117.1"],"后面的代码处于等待状态":["117.1"],"在浏览器端的表现也就是常常说的浏览器假死":["117.1"],"而在":["117.1"],"基础文档与类型体操":["118.0"],"常用类型工具":["119.0"],"用来从对象类型":["119.1"],"删除指定属性":["119.1"],"返回一个新的对象类型":["119.2"],"第一个参数":["119.2"],"是一个对象类型":["119.2"],"第二个参数":["119.2"],"返回一个新类型":["119.3","119.4","119.5"],"将参数类型":["119.4","119.5"],"的所有属性变为必选属性":["119.4"],"它与":["119.4"],"的所有属性变为只读属性":["119.5"],"返回一个对象类型":["119.6"],"作为键名":["119.6"],"u":["119.7","119.8","122.4"],"用来从联合类型":["119.7","119.8","119.9"],"里面":["119.7"],"删除某些类型":["119.7"],"组成一个新的类型返回":["119.7"],"提取指定类型":["119.8"],"组成一个新类型返回":["119.8"],"中删除":["119.9"],"类型和":["119.9"],"提取函数类型":["119.10"],"的返回值类型":["119.10","119.15"],"作为一个新类型返回":["119.10"],"t1":["119.10","119.11","119.12"],"t2":["119.10","119.11"],"从函数类型里面提取参数类型":["119.11"],"组成一个元组返回":["119.11"],"s":["119.11"],"提取构造方法":["119.12"],"的参数类型":["119.12"],"组成一个元祖类型返回":["119.12"],"提取函数类型中的":["119.13"],"提取构造函数的返回值的类型":["119.14"],"即实例类型":["119.14"],"是一个构造函数":["119.14"],"等同于构造函数的":["119.14"],"returntype":["119.14"],"用来取出":["119.15"],"适合用在描述":["119.15"],"方法和":["119.15"],"await":["119.15"],"从函数类型中移除":["119.16"],"不返回类型":["119.17"],"只用来跟其它类型组成交叉类型":["119.17"],"用来提示typescript其它类型的":["119.17"],"的类型":["119.17","122.3"],"helperthisvalue":["119.17"],"logerror":["119.17"],"typescript入门教程":["120.0"],"enums":["121.0"],"enum":["121.1","121.2","121.4","121.5"],"direction":["121.1","121.2"],"up":["121.1","121.2","121.4","121.5"],"down":["121.1","121.2","121.4"],"right":["121.1","121.2","121.4"],"在这个例子中":["121.1"],"我们定义了一个名为":["121.1"],"的枚举":["121.1"],"它有四个成员":["121.1"],"枚举是可以手动赋值的":["121.2"],"并且未手动赋值的枚举值会随着上一项的赋值递增":["121.2"],"conssole":["121.2"],"枚举的项有两种类型":["121.3"],"常数项":["121.3"],"计算所得项":["121.3"],"上述示例都是为常数项的枚举值":["121.3"],"我们也可以向枚举中添加计算的方式来设置":["121.3"],"常数枚举是使用":["121.4"],"定义的枚举类型":["121.4","121.5"],"directions":["121.4","121.5"],"外部枚举是使用":["121.5"],"declare":["121.5"],"泛型":["122.0"],"数组泛型":["122.2"],"generic":["122.2"],"我们在指定一个数组的类型时":["122.2"],"函数泛型":["122.3"],"函数泛型允许我们编写可以适用多种类型的函数":["122.3"],"提高代码的灵活性和可复用性":["122.3"],"简单的例子":["122.3"],"我们可以实现一个函数":["122.3"],"createarray":["122.3"],"它可以创建一个指定长度的数组":["122.3"],"并且将每一项填充一个默认值":["122.3"],"results":["122.3"],"由于不确定填充值":["122.3"],"使用了":["122.3"],"类型来指定类型":["122.3"],"并且返回值也是":["122.3"],"类型的数组":["122.3"],"接口泛型":["122.4"],"接口泛型允许我们创建可适用于不同类型的接口定义":["122.4"],"iresponse":["122.4"],"newname":["122.4"],"类泛型":["122.5"],"与接口类型相似":["122.5"],"泛型也可以用于类的类型定义中":["122.5"],"typescript高级类型":["123.0"],"intersection":["123.1"],"types":["123.1","123.2"],"这让我们可以把现有的类型叠加到一起成为一种类型":["123.1"],"它包含了所需的所有类型的特性":["123.1"],"wave":["123.1"],"不适用于基本类型":["123.1"],"warning":["123.1"],"关于交叉类型产生":["123.1"],"交叉类型在使用的时候有时候会产生一个新的类型":["123.1"],"一般产生这种情况是两个":["123.1"],"使用交叉类型进行处理":["123.1"],"它们当中都有一个":["123.1"],"的同名属性":["123.1"],"但两个类型不同":["123.1"],"interface1":["123.1"],"interface2":["123.1"],"属性是":["123.1"],"但没有一个属性的类型即是":["123.1"],"类型又是":["123.1"],"union":["123.2"],"但是使用上完全不同":["123.2"],"联合类型会产生一个包含所有类型的选择集的类型":["123.2"],"表示一个值的类型是定义的联合类型中的其中一种":["123.2"],"当一个变量希望传入某种类型时":["123.2"],"可以考虑使用联合类型":["123.2"],"当一个值是联合类型对象时":["123.2"],"我们只能访问这个联合类型中的所有类型中的共同成员":["123.2"],"定义常量":["123.2"],"类型守卫":["123.4","123.5"],"操作符检查变量类型":["123.4"],"操作符检查对象是否属于某个类":["123.5"],"通过定义一个返回":["123.6"],"类型谓词":["123.6"],"来自定义一个类型守卫":["123.6"],"的形式是":["123.6"],"paramtername":["123.6"],"操作符可以作为类型细化表达式来使用":["123.7"],"就是给一个类型起一个新名字":["123.8"],"但是不会新创建一个类型":["123.8"],"同接口一样":["123.9"],"类型别名可以是泛型":["123.9"],"我们可以添加参数类型并且在别名声明的右侧传入":["123.9"],"在类型别名属性中引用自身":["123.9"],"tree":["123.9"],"类型别名虽然可以和接口一样声明":["123.10"],"但是它们并不同":["123.10"],"接口创建了一个新的名字":["123.10"],"可以在其它任何地方使用":["123.10"],"但类型别名并不创建新名字":["123.10"],"错误信息就不会使用别名":["123.10"],"tuple":["123.11"],"用于表示固定长度和固定类型排列的数组":["123.11"],"在元组中":["123.11"],"每个位置上的元素都有一个确定的类型":["123.11"],"关键字":["123.12","131.4"],"表示在":["123.12"],"条件语句中待推断的类型变量":["123.12"],"它是从泛型里面进行推断":["123.12"],"paramtype":["123.12"],"深入理解typescript":["123.13"],"人脸识别":["125.0"],"wx":["125.0"],"startfacialrecognitionverify":["125.0"],"由于人脸核验功能涉及到用户的敏感":["125.0"],"隐私信息":["125.0"],"因此调用此接口的业务方":["125.0"],"需要满足一定的条件":["125.0"],"申请小程序的人脸识别api":["125.0"],"开通小程序后台的接口权限入口后":["125.0"],"开发者可以登录mp":["125.0"],"weixin":["125.0"],"qq":["125.0"],"com小程序账号":["125.0"],"在设置":["125.0"],"接口能力中":["125.0"],"开通接口能力":["125.0"],"微信开发者工具开发文档":["125.0"],"活体检测":["125.0"],"是否支持人脸识别":["125.0"],"checkissupportfacialrecognition":["125.0"],"计算机科学中":["127.1"],"链表":["127.1","127.2","127.4","127.5"],"添加":["127.2"],"元素的时候不需要移动其它元素":["127.2"],"的时间复杂度就为":["127.2"],"表示链表中的一个元素":["127.3"],"提供了一系列方法来操作链表":["127.4"],"开头插入节点":["127.4"],"preappend":["127.4"],"末尾插入节点":["127.4"],"append":["127.4"],"在指定位置插入节点":["127.4"],"insert":["127.4"],"删除节点":["127.4"],"查找节点":["127.4"],"以下是实现代码":["127.4"],"linkedlist":["127.4"],"head":["127.4","137.3"],"tail":["127.4"],"在链表尾部添加新节点":["127.4"],"分为三种":["127.5"],"单向链表":["127.5"],"双向链表":["127.5"],"comparator":["127.6"],"比较器":["127.6"],"default":["127.6"],"comparefunction":["127.6"],"可以是自定义的比较函数":["127.6"],"该函数可以比较自定义的对象":["127.6"],"compare":["127.6"],"defaultcomparefunction":["127.6"],"默认比较函数":["127.6"],"假设":["127.6"],"是字符串或者数字":["127.6"],"returns":["127.6"],"检查两个变量是否相等":["127.6"],"equal":["127.6"],"检查变量":["127.6"],"是否小于":["127.6"],"lessthan":["127.6"],"编程时光":["127.7"],"build":["128.0"],"主要升级点":["129.0"],"持久缓存":["129.0"],"persistent":["129.0"],"caching":["129.0"],"引入了":["129.0"],"更好的持久缓存机制":["129.0"],"利用了更稳定的hashedmoduleldsplugin和":["129.0"],"abstract":["130.0","130.1"],"抽象语法树":["130.1","130.2"],"ast":["130.2"],"在代码语法的检查":["130.2"],"代码风格的检查":["130.2"],"代码的格式化":["130.2"],"代码的高亮":["130.2"],"代码错误提示":["130.2"],"代码自动补全等等场景均有广泛的应用":["130.2"],"打包编译":["130.2"],"rollup":["130.2"],"babel":["130.2"],"代码风格检查":["130.2"],"jslint":["130.2"],"jshint":["130.2"],"prettier":["130.2"],"错误提示与高亮":["130.2"],"ide":["130.2"],"的错误提示":["130.2"],"格式化":["130.2"],"高亮":["130.2"],"自动补全等":["130.2"],"代码混淆压缩":["130.2"],"uglifyjs2":["130.2"],"一个完整的编译过程可以分为三个步骤":["130.3"],"parsing":["130.3"],"首先来看下浏览器的编译原理如下":["130.4"],"可以看出来浏览器对js的编译和解释都需要源代码通过":["130.4"],"词法分析":["130.4"],"语法分析":["130.4"],"源映射":["131.0"],"map功能":["131.2"],"对于sourcemap而言":["131.4"],"我们最常见的":["131.4"],"莫过于在":["131.4"],"的配置项devtools中进行使用":["131.4"],"差不多有二十来种":["131.4"],"但归根结底":["131.4"],"eval":["131.4","131.5","131.8","131.9"],"处理结果":["131.5"],"处理后输出结果":["131.5"],"关键字示例":["131.7"],"sum页面":["131.7"],"sum":["131.7"],"devtool":["131.8"],"构建速度":["131.8"],"重新构建速度":["131.8"],"生产环境":["131.8"],"品质":["131.8"],"quality":["131.8"],"yes":["131.8"],"打包后的代码":["131.8"],"no":["131.8"],"生成后的代码":["131.8"],"开发环境":["131.9"],"我们在开发环境对sourcemap的要求是":["131.9"],"快":["131.9"],"unocss":["133.1"],"官方定义":["133.1"],"cherry":["134.0","134.1"],"pick":["134.1"],"翻译为筛选":["134.1"],"是git版本控制系统中很重要的一个命令":["134.1"],"它允许你将任意分支上的某个或者某些特定提交":["134.1"],"commit":["134.1","134.3","137.2","137.3","138.2"],"hash":["134.1","134.3"],"标识":["134.1"],"跨分支移植补丁":["134.2"],"假设在开发分支上修复了一个bug":["134.2"],"但尚未准备好合并整个分支":["134.2"],"这时":["134.2"],"假设是master分支某个提交应用到develop分支上":["134.3"],"确保已经切换到了想要应用补丁的目标分支":["134.3"],"git":["134.3","136.1","136.3","136.4","137.2","137.3","138.2","139.2","139.3","139.4","139.5","139.6","139.7","139.8","139.10","142.0"],"checkout":["134.3","137.3"],"develop":["134.3"],"switched":["134.3","137.3"],"branch":["134.3","137.3"],"获取想要一只的提交哈希":["134.3"],"这可以通过查看历史提交记录找到":["134.3"],"通过在命令行中使用":["134.3"],"历史提交信息":["134.3"],"或者简要查看历史提交信息":["134.3"],"oneline":["134.3","137.3"],"找出包含所需补丁的提交":["134.3"],"graph":["134.3","137.3"],"查询提交信息":["134.3"],"查询的结果示例":["134.3"],"在自己电脑创建本地仓库":["135.1"],"第一步":["135.1"],"打开git":["135.1"],"找一个存放所有git项目的目录":["135.1"],"假设git的目录叫gitrepo":["135.1"],"第二步":["135.1"],"为你要拉取的github项目创建项目文件夹":["135.1"],"在gitrepo目录下输入命令":["135.1"],"shell":["135.1","137.2","137.3","140.1","140.2"],"mkdir":["135.1"],"firstpro":["135.1"],"然后输入命令":["135.1"],"cd":["135.1"],"git初始化设置":["135.1"],"仓库的初始化以及绑定ssh秘钥":["135.1"],"pull":["136.0","136.4"],"简单概括":["136.1"],"先用一张图来理一下":["136.1"],"分支的概念":["136.2"],"在介绍两种方法之前":["136.2"],"我们需要先了解一下分支的概念":["136.2"],"分支是用来标记特定代码的提交":["136.2"],"每一个分支通过sha1sum值来标识":["136.2"],"所以对分支的操作是轻量级的":["136.2"],"你改变的仅仅是sha1sum值":["136.2"],"如下图所示":["136.2"],"当前有2个分支":["136.2"],"e属于master分支":["136.2"],"而a":["136.2"],"d":["136.2"],"f属于dev分支":["136.2"],"rebase":["137.0","138.0"],"rebase能够将分叉的分支重新合并":["137.1"],"本地与远端同一分支提交历史不一致":["137.2"],"方式一":["137.2"],"多个人在同一个分支上协作时":["137.2"],"出现冲突是很正常的":["137.2"],"比如现在有一个项目由我和a一同开发":["137.2"],"我在修复了一个bug以后准备提交":["137.2"],"howiedeimac":["137.2","137.3"],"ganlin":["137.2"],"howie":["137.2","137.3"],"models":["137.2"],"paper":["137.2"],"go":["137.2","137.3"],"fix":["137.2"],"bug":["137.2"],"master":["137.2","137.3"],"8b76654":["137.2"],"file":["137.2"],"changed":["137.2"],"insertions":["137.2"],"deletions":["137.2"],"现在准备推送到远端":["137.2"],"gitee":["137.2"],"greenhn":["137.2"],"rejected":["137.2"],"不同分支之间的合并":["137.3"],"由于老板突发奇想":["137.3"],"要求开发一个新的功能":["137.3"],"先创建一个分支用于开发新功能":["137.3"],"feature":["137.3"],"接下来修改newfunc":["137.3"],"增加新的功能":["137.3"],"并且保存提交":["137.3"],"vim":["137.3"],"newfunc":["137.3"],"现在查看一下提交":["137.3"],"4f58ab8":["137.3"],"94c134b":["137.3"],"现在新功能开发完毕":["137.3"],"需要将它合并的主分支中":["137.3"],"先尝试通过merge合并":["137.3"],"首先切换到master分支":["137.3"],"假设我们做了一下三个commit":["138.2"],"想把前两个提交也就是":["138.2"],"7131a52":["138.2"],"0d11e74":["138.2"],"a2406db":["138.2"],"合并成一个提交":["138.2"],"log信息":["138.2"],"tip":["138.2"],"如果使用":["138.2"],"stash":["139.0","139.1","139.4","139.8","139.10"],"丢弃stash":["139.9"],"clear":["139.10"],"删除分支同步到git仓库":["140.0"],"git工作流程":["141.1"],"imagecompression":["144.0"]},{"0":["3.0","5.0","11.0","25.0","26.4","45.1","47.1","50.3","58.2","63.38","66.5","74.7","78.3","81.4","81.6","81.9","81.13","87.16","89.25","101.2","103.6","103.8","125.0","130.2"],"1":["3.0","5.0","6.0","9.0","10.0","12.10","25.0","42.1","44.9","45.1","54.8","57.1","63.33","63.37","63.38","64.31","67.13","69.3","75.2","75.9","75.16","78.10","78.11","81.2","81.4","81.12","88.16","88.18","89.1","89.29","90.0","92.0","95.3","97.0","97.6","102.15","103.6","103.8","110.16","110.20","110.21","110.22","110.23","111.5","113.3","113.5","113.8","127.2"],"2":["5.0","6.0","8.0","12.4","17.0","54.8","57.1","63.37","63.44","63.51","64.21","64.26","73.11","73.14","73.15","75.4","75.16","78.11","81.5","87.36","88.12","88.18","89.1","89.29","93.2","103.6","103.8","105.7","107.1","110.14","110.16","110.21","111.4","111.5","113.3","113.5","113.8","125.0","131.8"],"3":["5.0","8.0","10.0","12.4","17.0","54.8","58.2","63.37","63.42","64.12","64.25","64.26","73.20","74.7","74.12","74.24","75.3","75.4","87.14","88.18","89.29","102.7","103.17","110.14","110.16","110.21","111.4","111.5","113.3","113.5","113.8","131.8","134.3"],"4":["2.0","7.0","17.0","63.18","75.3","75.4","87.36","89.29","102.7","103.17","110.14","110.16","110.21","111.5","121.2"],"5":["5.0","10.0","63.18","75.3","75.4","102.6","110.14","110.21"],"6":["5.0","10.0","75.3","75.4","102.6","102.13","110.14"],"7":["7.0","10.0","102.6","110.14","137.3"],"9":["3.0","6.0","98.0"],"10":["6.0","76.0"],"11":["78.0","122.4"],"12":["6.0","57.2","58.1","59.1","59.2","59.3","59.4"],"13":["6.0"],"15":["102.7"],"18":["67.46","73.21","111.3"],"19":["97.5"],"20":["103.10"],"22":["122.4"],"24":["102.14"],"50":["81.10"],"56":["25.0"],"100":["81.10","89.5"],"111":["130.2"],"234":["25.0"],"250":["26.4"],"300":["89.5"],"450":["26.4"],"460":["26.4"],"500":["115.2"],"567":["72.26"],"890":["72.26"],"1234":["110.21"],"2016":["12.11"],"2019":["102.14"],"2038":["97.5"],"6265":["97.0"],"231208":["57.0"],"231215":["58.0"],"231222":["59.0"],"20111031":["102.12"],"使其相加和为m":["0.0"],"并给出算法的时间":["0.0"],"空间复杂度":["0.0"],"如":["0.0","63.42","71.6","73.14","75.7"],"javascript":["0.0","4.0","5.0","8.0","10.0","11.0","18.0","20.1","21.0","21.2","21.5","23.0","24.0","25.1","25.2","25.3","26.2","27.0","27.2","27.3","27.4","32.2","32.3","32.5","33.0","33.2","34.4","36.0","53.8","53.16","55.4","57.1","63.16","63.24","63.32","66.14","67.19","67.54","87.2","87.4","87.5","87.7","87.8","87.9","87.13","87.15","87.17","87.20","87.23","87.28","87.29","88.3","88.7","88.8","88.11","88.22","89.7","89.25","89.29","89.31","95.2","96.0","97.2","97.4","107.3","110.2","110.4","110.9","110.10","110.11","110.12","110.13","110.15","110.17","110.20","110.21","115.4","121.2","130.2","136.2"],"满足要求的三元组集合为":["2.0"],"夹逼原则":["2.0"],"也称为双指针夹逼法":["2.0"],"是一种常用的算法思想":["2.0"],"主要用于解决某些数组或有序列表中的查找":["2.0"],"求解等问题":["2.0"],"该原则基于两个指针在数组或列表中相向而行":["2.0"],"并通过调整指针的位置来逼近目标值或满足特定条件":["2.0"],"在夹逼原则中":["2.0"],"通常需要先对数组或列表进行排序":["2.0"],"以便使用双指针从两端开始向中间移动":["2.0"],"具体步骤如下":["2.0"],"对数组或列表进行排序":["2.0"],"确保元素的顺序满足问题的要求":["2.0"],"初始化两个指针":["2.0"],"因为":["3.0","69.17"],"所以返回":["3.0"],"遍历两次求和":["3.0"],"过滤出符合条件的下标拼接成数组":["3.0"],"typescript":["3.0","42.10","44.1","49.0","75.5","78.9","81.9","81.11","81.12","81.14","103.12","103.15","119.1","119.2","119.3","119.4","119.6","119.8","119.9","119.13","119.15","121.0","121.3","122.1","122.5","123.1","123.2","123.6"],"const":["3.0","4.0","5.0","8.0","47.1","53.10","66.4","69.60","73.7","73.9","75.1","75.8","78.3","78.5","78.9","81.9","81.11","81.12","81.14","87.2","87.5","87.8","87.9","87.12","87.17","87.20","87.23","87.28","87.30","88.1","88.7","88.11","89.25","92.0","100.0","103.7","103.11","105.6","110.2","110.4","110.9","110.10","110.11","110.12","110.13","110.15","110.16","110.21","115.4","123.1","123.2","123.4","127.6","130.2"],"getaddindex":["3.0"],"number":["3.0","44.10","47.1","67.4","78.3","78.9","103.6","103.7","103.9","103.11","104.5","119.1","119.2","119.4","119.6","119.9","119.10","119.11","119.12","119.13","119.16","122.2","122.4","123.2","123.4","123.11"],"k":["4.0"],"你需要做以下事情确保你的题解可以被通过":["4.0"],"更改数组":["4.0"],"使":["4.0"],"的前":["4.0"],"个元素包含唯一元素":["4.0"],"并按照它们最初在":["4.0"],"中出现的顺序排列":["4.0"],"的其余元素与":["4.0"],"的大小不重要":["4.0"],"返回":["4.0","10.0","89.27","106.4"],"示例1":["4.0","8.0","10.0"],"来保存":["5.0"],"中的元素":["5.0"],"示例":["5.0","89.6","119.14","123.1","130.2"],"输入":["5.0","57.1"],"输出":["5.0","8.0","10.0","11.0","57.1","105.5"],"输出数组":["6.0"],"result":["6.0","74.7","101.2","137.3"],"数组中不包含2":["7.0"],"插入进去排序后下标为1":["7.0"],"示例3":["7.0"],"修改输入数组":["8.0"],"元素的顺序可以改变":["8.0"],"你不需要考虑数组中超出新长度后面的元素":["8.0"],"并且nums数组变更为":["8.0"],"函数最初返回":["9.0"],"每次调用它时会返回前一个值加":["9.0"],"的值":["9.0"],"var":["10.0","20.1","21.2","30.0","33.0","36.0","63.33","96.0","105.7","121.2"],"解释":["10.0"],"中心下标是3":["10.0"],"左侧数之和":["10.0"],"sum":["10.0","88.17"],"let":["11.0","63.16","72.26","74.7","88.8","88.21","89.25","89.29","101.2","102.9","104.5","115.2","115.4","119.17","121.4","121.5","123.11"],"str1":["11.0"],"leetcode":["11.0"],"x":["12.0","12.1","12.7","63.37","87.12","87.34","88.3","88.5","89.28","103.7","119.1","119.2","119.4","119.11","123.7","123.11"],"本书是我在学习和应用angularjs":["12.1"],"gitbook地址":["12.2"],"angularjs初始化":["12.3","13.0","17.0"],"ng":["12.3","13.0","17.0","22.2","27.1","32.0","35.0"],"app":["12.3","13.0","16.4","17.0","21.0","21.2","22.0","22.2","23.0","25.3","26.2","27.0","32.5","32.7","33.0","33.1","34.4","35.0","36.0","55.3","66.4","66.5","78.3"],"控制器":["12.3","13.0","17.0"],"controller":["12.3","13.0","17.0","21.4","25.3","26.2","35.0"],"数据绑定":["12.3","17.0"],"您需要知道和理解html和css布局的方法":["12.4"],"您需要知道javascript的基本语法":["12.4"],"推荐":["12.4"],"您知道一些node":["12.4"],"设计了几款应用":["12.5"],"参与了一小部分的开发工作":["12.5"],"数据通过api":["12.6"],"https":["12.6","14.4","97.6"],"获取":["12.6"],"对于选择angularjs":["12.7"],"掌握了html":["12.8"],"css的一些应用技巧":["12.8"],"javascript的语法和基本特性方面也通过node":["12.8"],"js在工作中的应用熟悉了":["12.8"],"但是":["12.8","12.10","32.1","44.0","89.14"],"在网站前端技术准备过程中":["12.8"],"我发现我对dom的操作一窍不通":["12.8"],"即使是购买了若干本入门的书籍":["12.8"],"通过阅读书籍":["12.8"],"我知道了如何通过document":["12.8"],"getelementbyid":["12.8"],"xxx":["12.8","78.9"],"或者jquery的":["12.8"],"会有很多新的功能需求":["12.9"],"功能扩大非常多":["12.9"],"因此":["12.9","15.6"],"因为它引入了很多新的特性":["12.10"],"比如应用了最新的es标准":["12.10"],"大量优化了angular工作的效率等等":["12.10"],"下面3个原因导致了我放弃了angular":["12.10"],"2作为新版本网站的技术选择":["12.10"],"harry":["12.11","103.11"],"andtoo":["12.11"],"net":["12.11","130.2"],"本作品采用知识共享":["12.11"],"webstorm":["14.0"],"前端开发":["14.0"],"chrome":["14.0","69.40"],"google":["14.0"],"chrome浏览器":["14.0"],"目前已经支持支付宝购买":["14.1"],"价格的话":["14.1"],"如果你是一名专职的前端工作人员":["14.1"],"可以自行购买或者要求公司购买":["14.1"],"个人购买的费用是第一年":["14.1"],"另外":["14.2","47.2"],"chrome上有支持webstorm的插件":["14.2"],"jetbrains":["14.2"],"ide":["14.2"],"js在本书中主要的使用用途是运行bower工具":["14.3"],"用以安装angularjs极其相关的库文件":["14.3"],"registry":["14.4"],"taobao":["14.4"],"org":["14.4","98.0"],"我们将不再需要从网站上下载安装":["14.5"],"但是我们这里将创建一个新的空项目":["15.0"],"empty":["15.0"],"project":["15.0"],"并在":["15.1"],"目录中建立":["15.1"],"目录是用来存放供外部用户访问的内容的根目录":["15.2"],"非":["15.2"],"我推荐使用命令行的方式来进行创建":["15.3"],"调用系统的命令行功能":["15.4"],"statistics":["15.5"],"to":["15.5","67.33"],"improve":["15.5"],"the":["15.5","137.2","137.3"],"tool":["15.5"],"over":["15.5","82.0"],"time":["15.5"],"yes":["15.5"],"项目名称":["15.5"],"name":["15.5","27.2","27.3","30.1","32.6","64.20","64.49","69.11","78.9","87.2","89.7","96.0","113.3","113.4","113.7","113.8","119.17","123.9"],"learning":["15.5"],"angularjs":["15.5"],"项目说明":["15.5"],"description":["15.5"],"主文件":["15.5"],"main":["15.5"],"file":["15.5"],"项目的类型":["15.5"],"what":["15.5"],"types":["15.5"],"of":["15.5","137.3"],"modules":["15.5","67.57"],"目录":["15.6"],"并且项目的根目录与网站根目录不同":["15.6"],"我们需要新建一个额外的":["15.6"],"我们对":["15.7"],"我们已经创建好了项目":["16.0"],"cached":["16.1"],"git":["16.1","134.1","134.2","135.1","136.2","138.1","140.1","140.2"],"github":["16.1"],"com":["16.1","63.36"],"右键public目录":["16.2"],"new":["16.2","103.12","127.4"],"html":["16.3","19.1","19.3","22.0","26.3","27.1","32.0","64.40","64.49","78.10","95.4","112.0"],"注":["16.3","107.0"],"这里引入的angular":["16.3"],"元素中加入一个ng":["16.4"],"然后加入一行代码":["16.4"],"hello":["16.4","18.0","22.1","23.0","88.6","88.10","89.31","119.17"],"然后选择":["16.5"],"run":["16.5"],"然后你就可以在新打开的浏览器中看到运行的效果":["16.5"],"基本表达式":["17.0"],"h1":["18.0","34.5"],"world":["18.0","87.34","88.6"],"和模板":["19.0"],"template":["19.0","30.1","30.3","34.5","50.4","51.5","67.40","67.42","69.5","74.22","74.24","83.0"],"需要将部分html打包成独立的文件":["19.1"],"这时候":["19.1"],"我们在引入这个独立html文件时":["19.1"],"可以使用":["19.1"],"功能":["19.1","64.9","64.15","64.17","64.19","64.36","64.42","67.52","89.16","89.21"],"使用方法如下":["19.1"],"直接传入一个网页的地址":["19.1"],"include":["19.2","49.0"],"并且可以根据需求分别调用其中的某一个片段":["19.3"],"的用法如下":["19.3"],"本节我们将学习基本的":["20.0"],"文件":["20.1"],"并填入如下代码":["20.1"],"angular":["20.1","20.3","30.0","32.7","33.0","34.2","36.0"],"module":["20.1","30.0","32.7","33.0","36.0","131.4","131.5","131.8","131.9"],"我们就需要注意angularjs对于":["20.2"],"作用域":["20.2"],"的定义":["20.2"],"我们先通过如下的例子来看看作用域的具体表现":["20.2"],"doctype":["20.2","22.0","32.0","33.1"],"lang":["20.2","22.0","22.2","32.0","33.1"],"如果我们将上面代码的":["20.3"],"和应用":["21.0"],"类似":["21.0","88.3"],"下面我们来尝试创建一个控制器吧":["21.0"],"还是在app":["21.0"],"js中":["21.0"],"我们创建一个控制器":["21.0"],"代码如下":["21.0"],"js":["21.0","23.0","50.0","55.3","57.3","62.0","67.12","69.13","72.26","81.9","81.11","81.12","81.14","102.0","102.1","131.5"],"详解":["21.1"],"原有的ng":["21.2"],"app声明部分":["21.2"],"是我们在":["21.3"],"function":["21.3","22.1","25.2","30.0","32.5","32.6","32.7","36.0","50.3","88.20","89.6","90.0","92.0","96.0","97.1","100.0","103.14","104.1","104.2","107.1","113.4","113.6","115.2","115.4","119.13","119.16","119.17","122.3","125.0"],"中传入的":["21.3"],"参数":["21.3","49.0","51.1","67.54","88.15","98.0","101.1"],"scope":["21.3","21.5","22.1","24.0","27.0","27.2","27.3","27.4","32.6","32.7","34.0"],"与一般的函数声明时的参数不同":["21.3"],"此处的参数是":["21.3"],"不可随意命名":["21.3"],"中的数据":["21.4"],"最简单的做法":["21.5"],"zh":["22.0","22.2","32.0","33.1"],"data":["22.1","26.5","30.1","89.9","125.0"],"message":["22.1","23.0"],"在":["22.1","24.1","50.0","63.3","66.13","67.37","73.25","88.14","109.2"],"scope上绑定一个函数":["22.1"],"中添加":["23.0"],"flag":["23.0"],"变量":["23.0"],"设置默认值为":["23.0"],"true":["23.0","36.0","51.7","87.21","88.3","89.5","107.3","110.6","110.7","110.19"],"hide":["23.1"],"的区别":["23.1","95.7"],"虽然效果看起来类似":["23.1"],"但":["23.1"],"直接作为判断依据":["23.2"],"但是以上三个标签都支持传入表达式":["23.2"],"比如以下的表达式都可以作为冒号中的表达方式":["23.2"],"我们准备如下的数据":["24.0"],"这是一个包括三个":["24.0"],"object":["24.0","103.14","106.4","107.1","111.3","119.12"],"的":["24.0","32.1","54.8","97.2","103.16","110.23"],"array":["24.0","31.4","63.33","89.25","89.26","110.22","122.3"],"repeat":["24.1","74.16","74.24"],"中知道是哪一行被点击了呢":["24.1"],"angularjs提供了":["24.1"],"这个字段让我们实现这个功能":["24.1"],"下面":["24.1"],"我们来看看使用":["24.1"],"的例子":["24.1"],"结果":["25.0"],"00":["25.0","72.1","72.13"],"currency":["25.0"],"人民币":["25.0"],"转化为货币后输出":["25.0"],"保留0位小数":["25.0"],"四舍五入":["25.0"],"结果为":["25.0"],"list":["25.1","31.4","44.10","64.32","139.4"],"filter":["25.2","75.2"],"reverse":["25.2","74.7","78.8","127.6"],"几百行以内":["25.3"],"可以考虑使用本功能来筛选结果":["25.3"],"示例如下":["25.3"],"使用上一节的例子":["25.3"],"firstctrl":["25.3","26.1","26.2","32.3","32.4"],"只搜索":["25.4"],"字段包含":["25.4"],"的项目":["25.4"],"last":["25.4","88.6","98.0"],"class":["26.0","66.5","67.37","67.38","67.40","67.41","78.10","86.1","113.1","122.5"],"粗体":["26.1"],"bold":["26.1"],"font":["26.1"],"weight":["26.1"],"红色":["26.1"],"red":["26.1","69.39","121.3"],"color":["26.1","26.5","69.39","81.2","81.4","81.7","81.10","109.2","113.1","121.3"],"错误":["26.1"],"has":["26.1","89.2","89.13","89.18"],"error":["26.1","119.14","137.2"],"background":["26.1","81.2","81.4","81.7","81.10"],"yellow":["26.1"],"橙色":["26.1"],"orange":["26.1"],"修改":["26.1"],"比如如下示例":["26.2"],"p":["26.3","30.1","34.5","51.1","69.11","123.12","139.6"],"cubic":["26.4"],"bezier":["26.4"],"colorinput":["26.5"],"示例文本":["26.5"],"colorinput为":["26.5"],"scope中的对象":["26.5"],"传入文本即可":["26.5"],"styletext":["26.5"],"提供了很多功能用来梳理或筛选下拉列表的选项":["27.0"],"我们将分别学习它们":["27.0"],"首先":["27.0","27.2","69.13"],"让我们学习下如何使用":["27.0"],"这里":["27.0"],"我们期望实现的是":["27.0"],"使用下拉列表":["27.0"],"让页面上的一个方块的颜色对应变化":["27.0"],"我们首先配置一个颜色的列表":["27.0"],"并且在":["27.0"],"中存储一个用于保存选中状态的变量":["27.0"],"将它的默认值设置为颜色列表的第一个":["27.0"],"select":["27.1"],"语法":["27.2","104.1","104.2","104.6"],"下面我们看看例子":["27.2"],"我们在列表中增加类型字段":["27.2"],"colors":["27.2","27.3"],"黑色":["27.2"],"disabled":["27.3"],"属性":["27.3","64.9","64.10","73.14","103.16","106.3","107.1"],"这是为了表明如果没有这项数据":["27.3"],"默认的":["27.3"],"的操作":["27.3","89.2"],"可以选择":["27.3"],"一般是为了简化配置":["27.4"],"比如我们采取如下的配置":["27.4"],"countries":["27.4"],"cn":["27.4"],"中国china":["27.4"],"us":["27.4"],"我们学习了angularjs的基本用法":["28.0"],"掌握了这些用法":["28.0"],"深入":["29.0"],"一些的部分":["29.0"],"本章将介绍angularjs的directive":["29.0"],"有若干angularjs的中文译文将directive翻译为":["29.0"],"指令":["29.0"],"directive作为angularjs的基本特性":["29.1"],"我们已经在前面大量的学习和使用了它":["29.1"],"逐渐深入的学习directive的特性和高级使用方法":["29.2"],"由于directive的特性主要针对展示界面的操作":["29.2"],"directive":["30.0","32.5","32.6","32.7","33.0","36.0"],"people":["30.0","31.0","31.2","31.4","32.5","32.6"],"return":["30.0","32.6","32.7","36.0","44.9","63.37","66.4","69.60","87.12","89.4","89.5","89.6","103.10","103.14","111.3","113.5","113.6","115.2","115.4","119.16","131.7"],"restrict":["30.0","30.1","30.3","32.6","32.7","34.5","36.0"],"e":["30.1","36.0","89.7","98.0","136.2"],"姓名":["30.1"],"相对比较容易理解":["30.2"],"在运行网页时":["30.2"],"与":["30.3","67.7","87.14","88.2","91.0","136.0"],"和":["30.3","46.1","49.0","52.2","53.9","63.24","63.47","67.12","73.14","74.22","75.14","87.13","87.18","88.9","89.22","89.25","96.1","103.13","104.4","109.3","112.2","112.7","121.1","122.4","136.1"],"同级别":["30.3"],"下面这个表格":["30.4"],"总结了restrict可能有的值":["30.4"],"具体的每种应用方案":["30.4"],"我们将在下一节详解":["30.4"],"的directive":["31.0"],"驼峰式":["31.1"],"命名":["31.2"],"使用":["31.2","52.5","63.3","67.27","67.30","69.3","69.11","73.14","78.9","89.10"],"是":["31.3","44.4","51.3","58.2","64.41","119.2"],"但实际上":["31.5"],"angularjs支持的连接符有":["31.5"],"符号":["31.5"],"存在的原因是需要符合html5标准":["31.6"],"如果你使用html5验证器来验证我们之前的代码":["31.6"],"你可能会看到如下结果":["31.6"],"如果我们按照现在的代码结构":["32.0"],"详见第一节":["32.0"],"期望放置不同的人的信息":["32.0"],"只能采取重复多个控制器的方式":["32.0"],"可能的代码如下":["32.0"],"而directive在默认情况下":["32.1"],"是没有自动绑定一个":["32.1"],"也就是说":["32.1","88.12","108.0"],"在默认情况下":["32.1","97.4"],"directive无法在javascript中接收传入的数据":["32.1"],"因为缺少一个存储信息的载体":["32.1"],"形成我们期望的效果":["32.1"],"我们对scope的定义使用了如下结构":["32.2"],"我们在":["32.3"],"中增加几个人的数据":["32.3"],"并将它们通过directive显示出来":["32.3"],"结合起来":["32.4"],"实现列表显示数据的效果":["32.4"],"我们先将":["32.4"],"的数据变化为一个":["32.4"],"input":["32.5"],"即可":["32.5"],"a":["32.6","32.7","34.0","34.5","51.1","57.1","64.30","64.34","75.2","75.9","87.21","88.7","88.17","119.1","119.2","119.4","119.6","119.7","119.8","119.10","119.11","119.14","119.15","131.7"],"formdirective":["32.7","33.0"],"这里使用":["32.7"],"符号来接受传入的函数":["32.7"],"btnclick":["32.7"],"通过引入外部文件的形式来调用布局":["33.0"],"例如":["33.0","33.2","43.2","54.8","63.37","69.54","73.24","97.4","122.2"],"head":["33.1"],"meta":["33.1"],"charset":["33.1"],"utf":["33.1"],"也支持通过函数来获取最终的url地址":["33.2"],"b":["34.0","57.1","74.11","75.9","88.7","88.17","119.7","119.8","119.10","119.11","119.14","131.7"],"c":["34.0","45.1","87.8","119.7","119.8"],"element":["34.0","89.29"],"attrs":["34.0"],"console":["34.0","73.24","75.9","87.3","87.14","87.30","87.34","88.10","96.0","103.15","107.4","110.16","111.4","123.5","130.2"],"log":["34.0","73.24","75.9","87.3","87.14","87.34","88.10","96.0","107.4","110.16","111.4","123.5","130.2"],"json":["34.0","63.45","111.4","130.2"],"jquery":["34.2"],"lite":["34.2"],"jqlite":["34.2"],"angularjs通过jqlite的调用方法":["34.2"],"bower":["34.3"],"安装jquery":["34.3"],"bash":["34.3"],"因为jqlite不支持通过标签方式获取子元素":["34.4"],"如果您有兴趣学习jqlite的使用方法":["34.4"],"并且拥有一定的英文阅读能力":["34.4"],"可以在这里查看官方文档":["34.4"],"标题":["34.5"],"这里是段落文字":["34.5"],"等":["35.0"],"也同样都是directive":["35.0"],"而我们可以在这些元素中":["35.0"],"直接填入html代码":["35.0"],"的调用":["36.0"],"require":["36.0"],"获取的对象作为第四个参数传入":["36.0"],"link":["36.0","64.30"],"函数":["36.0","74.16","76.0","88.9","88.15","107.4"],"transclude":["36.0"],"注意这里为tabcontainer增加了一个controller":["36.0"],"并引入了":["36.0"],"并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难":["37.0"],"相关知识点":["38.0"],"所有模板":["40.1"],"图片资源都存储在服务器端":["40.1"],"服务端压力大":["40.2"],"正常是通过客户端去渲染":["40.2"],"vue是双向绑定":["42.1"],"react是单向数据流":["42.1"],"封闭原则":["42.2"],"封闭是针对渲染工作流来说":["42.2"],"指的是组件内部的状态都由自身维护":["42.2"],"只处理内部渲染逻辑":["42.2"],"组件更新阶段":["42.3"],"组件卸载阶段":["42.3"],"挂载":["42.3"],"constructor":["42.3","88.22","98.0","113.1"],"可以设置到根节点组件外层":["42.5"],"这样可以全局生效":["42.5"],"react的严格模式检查仅在开发模式下运行":["42.5"],"它们并不会影响生产构建":["42.5"],"ref":["42.6","52.5","67.51","137.2"],"api":["42.6"],"主要有以下几种实现方式":["42.7"],"redux":["42.7","66.3"],"将页面数据储存在redux中":["42.7"],"是react的语法糖":["42.8"],"它允许在html中写js并且不能被浏览器识别":["42.8"],"react中不强制使用jsx":["42.9"],"当不想在构建环境中配置有关jsx编译时候":["42.9"],"错误边界在生产环境中非常有用":["42.10"],"可以防止程序因错误而崩溃":["42.10"],"同事还可以帮助开发者定位到错误":["42.10"],"import":["42.10","67.18","67.19","67.55","73.9","73.10","78.3","78.5"],"usestate":["42.10","66.6","73.9","78.3","78.5"],"useeffect":["42.10","69.35"],"因为jsx语法无法被浏览器所识别":["42.11"],"要想解决这个问题就需要套一层div标签":["42.12"],"但是这样会多增加一个节点":["42.12"],"受控组件就是组组件的改变受控于数据的变化":["42.13"],"数据变了页面也就变了":["42.13"],"执行时机是在react的渲染和提交阶段之后":["43.0"],"这意味着当任何相关dom更改被应用并且组件已经被重新渲染后":["43.0"],"副作用与dom无关":["43.1"],"例如数据获取":["43.1"],"读取元素的大小或位置":["43.2"],"uselayouteffect":["43.3"],"因为它是同步的":["43.3"],"没有它我们也可以正常开发":["44.0"],"是一个处理函数":["44.3"],"用于更新状态":["44.3"],"是一个可选的参数":["44.5"],"他是init":["44.7"],"from":["44.8","47.1","67.18","67.33","73.9","78.3","78.5","110.22"],"react":["44.8","46.3","66.4","73.9","73.10","78.3"],"根据旧的状态处理":["44.8"],"oldstate":["44.8"],"reducer":["44.9"],"state":["44.9","67.57","69.24","69.25"],"action":["44.9","44.10"],"switch":["44.9"],"type":["44.9","44.10","64.10","75.5","103.7","119.1","119.2","119.5","119.6","119.8","119.9","119.15","123.1","123.2","130.2"],"case":["44.9","98.0"],"increment":["44.9","47.1"],"商品唯一标识符":["44.10"],"表示商品是否处于编辑状态":["44.10"],"默认为false":["44.10"],"类型定义":["44.10"],"typeof":["44.10","50.3","63.37"],"interface":["44.10","49.0","119.1","119.2","119.3","119.4","123.6","123.9","123.10"],"add":["44.10","87.12"],"sub":["44.10"],"delete":["44.10","89.9","89.13"],"edit":["44.10"],"update":["44.10","111.5"],"newname":["44.10"],"string":["44.10","66.4","75.5","78.9","81.9","81.10","81.11","81.12","81.13","81.14","103.12","119.9","119.12","119.15","119.17","123.2","123.4","123.11"],"是商品数组的类型":["44.10"],"直接从initdata推断":["44.10"],"接口定义了不同的操作类型":["44.10"],"增加某个商品的数量":["44.10"],"减少某个商品的数量":["44.10"],"删除某个商品":["44.10"],"切换某个商品的编辑状态":["44.10"],"更新某个商品的名称":["44.10"],"需要操作的商品id":["44.10"],"用于update":["44.10"],"name操作时":["44.10"],"新的商品名称":["44.10"],"reducer函数":["44.10"],"usereducer":["44.11"],"childrencomponent":["45.1"],"props":["45.1","69.1","74.10","78.2"],"any":["45.1","123.12"],"count":["45.1","47.1","78.3","78.5","89.1"],"setcount":["45.1","47.1","78.3","78.5"],"childrenref":["45.1"],"handleclick":["45.1"],"handledelete":["45.1"],"真实的dom之间加了一个缓存":["46.0"],"createelement":["46.1"],"数据的变化会实时地更新到用户界面中":["46.2"],"我是我的胃来食":["46.3"],"ul":["46.3"],"li":["46.3"],"性能提升":["46.5"],"牢记浏览器在处理dom时很慢":["46.5"],"处理js时很快":["46.5"],"react基于虚拟dom实现了一套自己的事件机制":["46.6"],"hoc":["47.0","78.2"],"是一个接收组件作为参数并返回一个新组件的函数":["47.0"],"换句话说":["47.0"],"它是一种组件的":["47.0"],"转换器":["47.0"],"counter":["47.1"],"useref用于操作dom元素":["47.2"],"usestate返回的是当前状态":["47.2"],"和一个更新状态的函数":["47.2"],"而":["47.2","67.20","89.7","127.2"],"useref":["47.2","66.1","73.10","78.4"],"包含的组件":["49.0"],"会多出两个生命周期钩子":["49.0"],"activated":["49.0"],"deactivated":["49.0"],"当":["49.0"],"包含的组件再次渲染的时候触发":["49.0"],"包含的组件销毁的时候触发":["49.0"],"参数类型":["49.0"],"keepaliveprops":["49.0"],"如果指定":["49.0"],"则只有与":["49.0"],"名称":["49.0"],"匹配的组件才会被缓存":["49.0"],"vue":["50.0","50.4","51.5","67.18","67.28","67.29","67.40","67.43","67.47","69.3","69.5","83.0"],"的异步更新队列以及浏览器的事件循环机制":["50.0"],"vue2":["50.0","50.6","67.52","67.56"],"process":["50.1"],"资源分配最小单位":["50.1"],"进程是应用的执行实例":["50.1"],"是操作系统进行资源分配和调度的一个独立单位":["50.1"],"如果把计算机cpu必做一个工厂的话":["50.1"],"那么进程就相当于工厂中的车间":["50.1"],"代表cpu所能处理的单个任务":["50.1"],"线程":["50.1"],"thread":["50.1"],"线程是进程内部的一个执行单元":["50.1"],"是被系统独立调度和分派的基本单位":["50.1"],"系统创建好进程后":["50.1"],"在watcher放到队列中后":["50.2"],"然后调用":["50.2"],"nexttick":["50.2"],"响应式派发更新的源码在这一块是这样的":["50.2"],"地址":["50.2"],"src":["50.2","63.35","63.36","131.5","134.3"],"core":["50.2"],"flushcallbacks":["50.3"],"重置异步开关":["50.3"],"防止nexttick里有nexttick出现的问题":["50.3"],"所以执行之前就先备份并清空回调队列":["50.3"],"copies":["50.3"],"slice":["50.3","63.33","63.38","78.12"],"length":["50.3","50.5","87.16","103.16","110.21","110.22"],"执行任务队列":["50.3"],"for":["50.3","92.0","101.2"],"i":["50.3","64.34","73.16","89.6","101.2","110.22","138.2"],"copiesi":["50.3"],"timefunc":["50.3"],"用来保存调用异步任务方法":["50.3"],"判断当前环境是否支持原生":["50.3"],"if":["50.3","50.5","54.7","74.7","88.3","89.7","115.2","125.0","127.4"],"undefined":["50.3","69.19","69.20","74.1","89.4","103.15","105.1","105.2","106.1","108.0","110.5"],"isnative":["50.3"],"保存一个异步任务":["50.3"],"的时候":["50.5","109.2"],"会执行该函数":["50.5"],"把我们的参数":["50.5"],"赋值给p":["50.5"],"在队列的任务完成后":["50.5"],"fn就执行了":["50.5"],"由于加了几个维护队列的方法":["50.5"],"所以执行顺序是这样的":["50.5"],"queuejob":["50.5"],"queueflush":["50.5"],"flushjobs":["50.5"],"nexttick参数的":["50.5"],"这个方法负责维护主任务队列":["50.5"],"接受一个函数做为参数":["50.5"],"为":["50.5","64.20"],"待入队":["50.5"],"任务":["50.5"],"会将参数":["50.5"],"push":["50.5","87.12"],"到":["50.5"],"queue":["50.5"],"队列中":["50.5"],"有唯一性判断":["50.5"],"会在当前宏任务之行结束后":["50.5"],"清空队列":["50.5"],"schedulerjob":["50.5"],"job":["50.5"],"主任务队列为空":["50.5"],"或者":["50.5","51.4","73.20","74.3"],"有正在执行的任务并且没有在主任务队列中":["50.5"],"不能和当前正在执行任务以及后面带执行任务相同":["50.5"],"includes":["50.5"],"isflushing":["50.5"],"allowrecurse":["50.5"],"slot":["51.1","67.45","67.47"],"一个指令的任务是在其表达式的值变化时对dom进行响应式更新":["51.1"],"seen":["51.1"],"nou":["51.1"],"you":["51.1","137.2"],"see":["51.1"],"me":["51.1"],"arguments":["51.1","63.33","89.6","110.21"],"某些指令有时候需要一个":["51.1"],"在指令名后通过一个冒号隔开作为标识":["51.1"],"例如用":["51.1"],"指令来响应式地更新一个html的attribute":["51.1"],"href":["51.1","90.0"],"url":["51.1","90.0"],"真实":["51.3"],"的条件渲染":["51.3"],"因为它确保了在切换时":["51.3"],"条件区块内的事件监听和子组件都会被销毁与重建":["51.3"],"也可以为索引指定别名":["51.4"],"如果是对象":["51.4"],"则是键值":["51.4"],"index":["51.4","74.7","127.4","131.5"],"value":["51.4","66.4","66.5","69.60","89.1","89.2","89.25","89.27","123.4"],"key":["51.4","67.10","81.14","98.0"],"在处理绑定时":["51.5"],"vue会默认利用":["51.5"],"in":["51.5","89.2","89.4","137.3"],"操作服来检查该元素上是否定义了和绑定了key同名的dom":["51.5"],"如果存在同名的":["51.5"],"则vue会将它作为dom":["51.5"],"property的赋值":["51.5"],"而不是作为attribute设置":["51.5"],"当用于组件props绑定时":["51.5"],"所绑定的props必须在子组件中已被正确声明":["51.5"],"当不带参数使用时":["51.5"],"可以用于绑定一个包含了多个":["51.5"],"attribute名称":["51.5"],"绑定值":["51.5"],"对的对象":["51.5"],"绑定":["51.5"],"img":["51.5"],"lazy":["51.6"],"监听":["51.6","53.8"],"change":["51.6"],"最多触发一次处理函数":["51.7"],"left":["51.7","63.38","81.4","81.10","81.12","81.13","109.5","121.5"],"只在鼠标左键事件触发处理函数":["51.7"],"right":["51.7","81.10","121.5","123.9"],"只在鼠标右键事件触发处理函数":["51.7"],"middle":["51.7","64.25"],"只在鼠标中键事件触发处理函数":["51.7"],"passive":["51.7"],"通过":["51.7","64.25","67.37","67.54","73.8","113.9"],"附加一个dom事件":["51.7"],"事件类型由参数来指定":["51.7"],"表达式可以是一个方法名":["51.7"],"一个内联升明":["51.7"],"如果有修饰符可以省略":["51.7"],"当用于普通元素":["51.7"],"只监听原生dom事件":["51.7"],"当用于自定义元素组件":["51.7"],"则监听子组件出发的自定义事件":["51.7"],"当监听原生dom事件时":["51.7"],"beforecreate":["52.0","52.4"],"created":["52.0","78.6"],"beforemount":["52.0","52.1","52.2","52.4","78.6"],"mounted":["52.0","52.3","52.4","78.6"],"beforeupdate":["52.0","78.6"],"updated":["52.0","78.6"],"beforedestroy":["52.0","78.6"],"组件实例被创建之初":["52.1"],"createed":["52.1"],"组件实例已被完全创建":["52.1"],"中的方法":["52.2"],"访问和修改data数据触发响应式渲染":["52.2"],"dom":["52.2","52.3","64.44","67.31","69.26","89.15"],"可通过":["52.2"],"computed":["52.2","52.5","98.0"],"完成数据计算":["52.2"],"此时":["52.2","73.24","96.0","108.0","135.1"],"vm":["52.2"],"el":["52.2"],"并没有被创建":["52.2"],"这时候页面":["52.3"],"节点并未生成":["52.3"],"之外":["52.4"],"函数被替换成了":["52.4"],"onbeforemount":["52.4","78.6"],"onmounted":["52.4","52.5","78.6"],"处理计算属性":["52.5"],"声明事件处理函数等":["52.5"],"这些函数包括":["52.5"],"reactive":["52.5"],"用于创建响应式对象":["52.5"],"用于创建一个单一的响应式值":["52.5"],"用于创建计算属性":["52.5"],"watch":["52.5","53.13","53.15"],"用于监听响应式数据的变化":["52.5"],"onupdate":["52.5"],"onunmounted":["52.5","78.6"],"用于监听生命周期钩子":["52.5"],"torefs":["52.5"],"用于将响应式对象转换为普通对象":["52.5"],"inject":["52.5"],"provide":["52.5"],"用于跨层级组件传递数据":["52.5"],"getcurrentinstance":["52.5"],"用于访问当前组件实例":["52.5"],"函数的优点是可以讲相似的逻辑组织在一起":["52.5"],"便于代码的维护和重用":["52.5"],"此外":["52.5"],"watcheffect的区别":["53.0"],"并在数据源变化时调用所给的回调函数":["53.1"],"侦听器的源":["53.2"],"一个函数":["53.3","67.50"],"新值":["53.4"],"旧值":["53.4"],"以及一个用于注册副作用清理的回调函数":["53.4"],"如果源是对象":["53.5"],"强制深度遍历":["53.5"],"以便在深层级变更时触发回调":["53.5"],"flush":["53.5","53.9","53.13"],"调整回调函数的刷新时机":["53.5"],"ontrack":["53.5","53.9"],"ontrigger":["53.5"],"调试侦听器的依赖":["53.5"],"同时响应式的追踪其依赖":["53.6"],"第一个参数是数据发生变化时执行的回调函数":["53.7"],"watcheffect":["53.8","53.13"],"stop":["53.10","67.4","110.22"],"都能响应式地执行有副作用的回调":["53.12"],"它们之间的最要区别是追踪响应式依赖的方式":["53.12"],"指明":["53.13"],"或":["53.15","78.5","97.5"],"你可以使用条件式地侦听逻辑":["53.16"],"model":["54.1","54.2","54.3"],"绑定到":["54.1"],"view":["54.2"],"应用的数据以及业务逻辑":["54.3"],"数据变化后更新视图":["54.4"],"视图变化后更新数据":["54.4"],"首先执行初始化":["54.5"],"对data执行响应化处理":["54.5"],"这个过程发生在监听器":["54.5"],"observer":["54.5"],"中":["54.5","63.3","69.23","73.21","73.25","95.2","98.0","108.0","117.1","122.1"],"options":["54.6","67.49"],"this":["54.6","54.7","63.47","69.19","98.0","105.1","113.3","113.4","113.6","113.8","125.0","137.2"],"document":["54.7","55.4","87.12"],"queryselector":["54.7"],"获取dom":["54.7"],"definereactive":["54.8"],"时为每一个":["54.8"],"创建一个":["54.8"],"实例":["54.8","78.8"],"初始化视图时读取某个":["54.8"],"name1":["54.8","111.3"],"watcher1":["54.8"],"由于触发":["54.8"],"getter":["54.8"],"方法":["54.8","63.44","72.26","75.7","87.15","110.23"],"便将":["54.8"],"添加到":["54.8"],"先了解一下spa":["55.1"],"翻译过来就是单页面应用":["55.2"],"是一种网络应用程序或者网站的模型":["55.2"],"它通过动态重写当前页面来与用户交互":["55.2"],"这种方法避免了页面之前切换打断用户体验":["55.2"],"也就是页面在屏幕上首次发生视觉变化的时间":["55.3"],"注意":["55.3","109.4","139.10"],"fp不包含默认背景绘制":["55.3"],"但包含非默认的背景绘制":["55.3"],"div":["55.3","66.4","67.37","67.38","67.40","67.46","69.39","78.10","83.0","86.1","87.12"],"id":["55.3","69.5","81.14","123.1","123.2","131.5"],"页面在导航后首次呈现出不同于导航前内容的时间点":["55.3"],"有一个东西回来渲染在页面上了":["55.3"],"之后是静态资源":["55.3"],"css":["55.3","61.7","63.42","74.14","74.18","74.19","74.24","81.1","81.3","81.6","81.8","81.10","81.11"],"再到cdn":["55.4"],"直接请求html":["55.4"],"相当于把fmp提前到了fp":["55.4"],"其实更像另外一种骨架屏":["55.4"],"少了ajax请求":["55.4"],"但是由于我们这么做智能添加死数据":["55.4"],"而不能把":["55.4"],"ajax":["55.4"],"请求的数据渲染到页面上":["55.4"],"如何解决呢":["55.4"],"我们可以在app":["55.4"],"vue中":["55.4","67.36"],"直接在script中给对应标签添加数据即可":["55.4"],"工程师应该怎样学习":["56.0"],"编译时加载":["57.3"],"运行时加载":["57.3"],"输出不同":["57.3"],"输出的是值的引用":["57.3"],"引擎对脚本静态分析的时候":["57.3"],"遇到模块加载命令":["57.3"],"就会生成一个只读引用":["57.3"],"等到脚本真正执行时":["57.3"],"再根据这个只读引用":["57.3"],"类型由于跳过了类型检查":["58.2"],"它可以随意赋值":["58.2"],"所以可能会带来变量的污染":["58.2"],"引入的类型":["58.2"],"它代表了一个未知的类型":["58.2"],"类型要求进行类型检查和类型断言":["58.2"],"以便在使用前确定其实际类型":["58.2"],"类型不能够直接使用":["58.2"],"的概念":["58.3","136.1"],"即该类型为空":["58.3"],"不包含任何值":["58.3"],"使用场景":["58.3"],"主要是在一些类型运算中":["58.3"],"保证类型的完整性":["58.3"],"例如在一个联合类型中":["58.3"],"通过类型守卫进行类型范围缩小后":["58.3"],"剩余的情况就是":["58.3"],"个文件":["61.2"],"的异同":["61.11"],"类比介绍":["61.13"],"弱类型语言":["63.1"],"比较灵活":["63.1"],"与操作系统无关":["63.1"],"前端数据类型":["63.2"],"一个完整的ajax请求包括以下步骤":["63.3"],"创建":["63.3"],"xmlhttprequest":["63.3"],"对象":["63.3","66.14","67.35","67.54","67.55","88.12"],"对象来发起":["63.3"],"请求":["63.3","63.50","63.51"],"可以通过":["63.3","67.54"],"是临时响应":["63.4"],"用于通知客户端":["63.4"],"部分的请求服务器已经接受":["63.4"],"但是客户端继续发送请求剩余部分":["63.4"],"如果请求已经完成":["63.4"],"就忽略这个响应":["63.4"],"定义在一个函数内部的函数":["63.6"],"其中一个内部函数在包含它们的外部函数之外被调用时":["63.6"],"关键字":["63.7","63.47","78.9","88.20"],"则默认的会添加到全局对象的属性上去":["63.7"],"这样的临时变量加入全局对象有很多坏处":["63.7"],"比如":["63.7","63.48","67.43","73.16"],"可以作为参数传递":["63.8"],"闭包可以作为参数传递给其它函数":["63.8"],"也可以被其它函数返回":["63.8"],"优点":["63.8"],"变量长期驻扎在内存中":["63.8"],"避免全局变量的污染":["63.8"],"存在私有成员":["63.8"],"缺点":["63.8","78.8"],"只制定一个时间处理程序":["63.9"],"访问dom次数越多":["63.10"],"引起浏览器回流和重绘的次数也就越多":["63.10"],"就会延长整个页面的交互时间":["63.10"],"如果委托给父级ul标签":["63.10"],"我们与dom的交互只需要交互一次":["63.10"],"这样就大大减少dom的交互次数":["63.10"],"对象提供了一个属性叫":["63.11"],"target":["63.11","89.6","89.7"],"会把接收到事件传递给自己的父级":["63.12"],"这种传递分为三个阶段":["63.12"],"每个cookie的大小限制为4kb":["63.13"],"因为每个http请求都会携带cookie":["63.13"],"如果过多的cookie数据":["63.13"],"会影响请求性能":["63.13"],"本地存储的容量相对较大":["63.13"],"通常可达到5mb":["63.13"],"这使得本地存储更适合大量数据的本地保存":["63.13"],"常用的数组的方法":["63.15"],"jsonstr":["63.16"],"将功能封装到对象之中":["63.17"],"让对象去实现具体的细节":["63.17"],"这种思想是将数据作为第一位":["63.17"],"这是对数据一种优化":["63.17"],"调用时":["63.18"],"构造函数内部会创建一个新对象":["63.18"],"就是实例":["63.18"],"普通函数不会创建新对象":["63.18"],"构造函数内部的this指向实例":["63.18"],"普通函数内部的this指向调用函数的对象":["63.18"],"如果没有调用":["63.18"],"默认为window":["63.18"],"构造函数默认的返回值就是创建的对象":["63.18"],"es6新特性二":["63.20"],"换为":["63.21"],"async":["63.21"],"将":["63.21","97.1"],"yield":["63.21"],"实际上http协议从未规定":["63.22"],"post":["63.22","75.7"],"的请求长度是多少":["63.22"],"对":["63.22"],"请求在缓存方面的区别":["63.23"],"事件捕获阶段":["63.25"],"处于目标阶段":["63.25"],"事件冒泡阶段":["63.25"],"apply":["63.26","96.1","139.7"],"clientheight":["63.27"],"当鼠标点击按下的时候":["63.28"],"需要一个tag来标记此时已经按下了":["63.28"],"可以执行":["63.28"],"数组或者对象时":["63.30"],"解释器都必须分配内存来存储那个实体":["63.30"],"只要像这样动态分配了内存":["63.30"],"最终都要释放这些内存以便它们能够被再用":["63.30"],"否则":["63.30"],"垃圾回收器在运行时会给存储在内存中的变量都加上标记":["63.31"],"所有都加":["63.31"],"然后去掉环境变量中的变量":["63.31"],"以及被环境变量中的变量所引用的变量":["63.31"],"条件行去除标记":["63.31"],"删除所有被标记的变量":["63.31"],"删除的变量无法在":["63.31"],"环境变量中被访问":["63.31"],"所以会被删除":["63.31"],"最后垃圾回收器完成了内存的清除工作":["63.31"],"并回收它们所占用的内存":["63.31"],"计数引用":["63.31"],"来实现已有属性的监听":["63.32"],"user":["63.32","97.2"],"obj":["63.33","88.6","89.7","96.0","105.5"],"arg":["63.33","119.11","123.12"],"context":["63.33","115.4"],"image":["63.35"],"http":["63.35","63.36","63.51"],"www":["63.36"],"phpernote":["63.36"],"这种方法可以实现一般对象和数组对象的克隆":["63.37"],"arr":["63.37","87.12","89.29","103.10","103.12","110.2","110.4","110.12","110.16","110.21"],"newarr":["63.37"],"y":["63.37","87.12","87.30","87.34","88.5","89.28","119.1","119.2","119.4","119.10","119.12"],"取字符串的第一个字符作为左侧字符":["63.38"],"rest":["63.38","89.28"],"此时就会发生跨域访问问题":["63.40"],"在请求过程中我们想要发送":["63.40"],"接收数据一般都是":["63.40"],"netscape":["63.41"],"提出的一个著名的安全策略":["63.41"],"可以用在一些对颜色要求不高的地方":["63.42"],"优化css":["63.42"],"压缩合并":["63.42"],"在javascript中":["63.43","104.0"],"this通常指向的是我们正在执行的函数本身":["63.43"],"lastindexof":["63.44"],"es6的":["63.44"],"并且内容拷贝":["63.45"],"parse":["63.45"],"遍历对象自身和继承可枚举的属性":["63.46"],"原型方法":["63.47"],"异步":["63.48"],"非阻塞":["63.48"],"信息是明文传输":["63.50"],"基于":["63.50"],"文件压缩":["63.51"],"提前讲所需资源下载":["63.52"],"csrf":["63.54"],"浏览器":["64.0"],"jpeg":["64.1"],"是一种有损压缩格式":["64.2"],"适合存储照片和复杂的图像":["64.2"],"是一种无损压缩格式":["64.3"],"适合存储图标":["64.3"],"是一种支持动画和简单图形的格式":["64.4"],"同时也支持透明度":["64.4"],"内边距":["64.5","73.2"],"padding":["64.5","69.49","73.2"],"边框":["64.5","73.2"],"border":["64.5","73.2"],"box":["64.7","67.37","67.38","67.41"],"sizing":["64.7"],"属性名称":["64.9","64.16"],"表单类型":["64.11"],"结构清晰":["64.12"],"利于维护":["64.12"],"种类":["64.12"],"标签名":["64.12"],"标签作用":["64.12"],"添加圆角":["64.14"],"shadow":["64.14"],"边框添加阴影":["64.14"],"水平位移":["64.14"],"垂直位移":["64.14"],"size":["64.15"],"break":["64.17"],"2d3d":["64.18"],"可以将元素旋转":["64.18"],"缩放":["64.18"],"移动":["64.18"],"但不利于响应式布局":["64.21"],"父级定义":["64.21"],"overflow":["64.21"],"hidden":["64.21"],"zoom":["64.21"],"两个属性":["64.21"],"其中":["64.21","89.25","123.7","138.2"],"不脱离文档流":["64.22"],"相对于自身定位":["64.22"],"absolute":["64.22","73.14","81.4","81.10"],"子元素设置margin":["64.24"],"auto":["64.24","64.26","81.1","81.2","81.5","81.6","81.7","81.8","134.3","137.3"],"align":["64.25","64.32","81.1","81.5","81.6"],"已知父元素高度":["64.25"],"子元素相对定位":["64.25"],"transform":["64.25"],"top减去各自宽高的一半":["64.26"],"子元素上下左右全为0":["64.26"],"然后设置子元素margin":["64.26"],"左右两栏均左浮动":["64.27"],"左右两栏采用负的margin值":["64.27"],"中间栏被宽度为100":["64.27"],"的浮动元素包起来":["64.27"],"可以添加谷歌私有属性webkit":["64.28"],"text":["64.28","64.32","67.38","73.13","81.1","81.5","81.6"],"通配符选择器":["64.30"],"空格":["64.30"],"相邻兄弟选择器":["64.30"],"通用选择器":["64.30"],"visited":["64.30"],"元素选择器":["64.31"],"indent":["64.32"],"列表元素":["64.32"],"style":["64.32","69.39","81.14","98.0"],"在图片未可视区域加一个滚动条事件":["64.33"],"判断图片位置与浏览器顶端和页面的距离":["64.33"],"设置宽高无效":["64.34"],"span":["64.34"],"br":["64.34"],"外边距":["64.35"],"自身边框到另一个边框之间的距离":["64.35"],"来控制子盒子的位置和排列方式":["64.36"],"属性名":["64.36"],"像素":["64.38"],"是相对于显示器屏幕分辨率来说的":["64.38"],"相对长度单位":["64.38"],"相对于当前对象内文本的字体尺寸":["64.38"],"media":["64.39"],"html5":["64.41"],"中的文档声明":["64.41"],"dragstart":["64.42","71.3"],"事件主体是被拖放元素":["64.42"],"加载阶段":["64.43"],"发出请求到网页渲染完成的这段过程":["64.43"],"变成非关键资源":["64.44"],"如果js代码没有":["64.44"],"操作":["64.44"],"帧的速度决定了交互的流畅性":["64.45"],"大部分情况下":["64.45"],"生成一个新的帧":["64.45"],"完成域名解析":["64.48"],"没有的话接着使用":["64.48"],"tcp":["64.48"],"ip":["64.48"],"参数设置的":["64.48"],"dns":["64.48"],"服务器进行查询":["64.48"],"如果查询的域名包含在本地配置区域资源中":["64.48"],"则返回解析结果":["64.48"],"没有的话再接着检查本地":["64.48"],"服务器是否缓存有该网址的记录":["64.48"],"有的话返回解析结果":["64.48"],"如果还没有":["64.48"],"本地":["64.48"],"服务器会发送查询豹纹到根":["64.48"],"服务器":["64.48"],"在根":["64.48"],"服务器收到报文之后会返回顶级域":["64.48"],"服务器地址":["64.48"],"然后本地":["64.48"],"的方式":["64.49"],"如果css动画只改变":["64.50"],"transfoem":["64.50"],"opacity":["64.50"],"这时整个css动画得以在":["64.50"],"多个相邻":["64.51"],"兄弟或者父子关系":["64.51"],"例如获取数据或订阅事件":["66.1","69.29","78.4"],"usecontext":["66.1","78.4"],"用于访问功能组件中react":["66.1","78.4"],"上下文的值":["66.1","69.30","78.4"],"文档对象模型":["66.2"],"的轻量级虚拟表示":["66.2"],"它是一种用于优化web应用程序性能的编程技术":["66.2"],"webcomponent":["66.3"],"规范":["66.3"],"都是数据驱动视图":["66.3"],"都有状态管理":["66.3"],"有":["66.3"],"vuex":["66.3"],"都有支持":["66.3"],"native的方案":["66.3"],"fc":["66.4","73.7","78.3"],"setvalue":["66.4","69.60"],"setstate":["66.5","69.17","73.21"],"访问组件生命周期方法和状态管理":["66.5"],"jsx":["66.5","69.21","74.10"],"extends":["66.5"],"component":["66.5"],"这是创建组件时调用的第一个方法":["66.6"],"它用于初始化状态和绑定事件处理程序":["66.6"],"在功能组件中":["66.6"],"可以将钩子":["66.6"],"用于类似的目的":["66.6"],"返回一个状态值和一个用于更新它的函数":["66.7"],"订阅":["66.8"],"计时器":["66.8"],"日志记录和其它副作用不允许在称为react":["66.8"],"渲染阶段的功能组件的主体内出现":["66.8"],"这可能会导致用户界面出现令人困惑的错误和不一致":["66.8"],"为此":["66.9"],"传递给useeffect":["66.9"],"的函数可以返回一个清理函数":["66.9"],"清理功能能在从用户界面中删除组件之前运行":["66.9"],"是从父级传递给组件的数据":["66.10"],"props是固定的":["66.10"],"不能被更改":["66.10"],"它提供了一个集中式存储或容器":["66.11"],"用于存储和管理可由应用程序中的不同组件访问和更新的数据":["66.11"],"如果本地状态仅在一个组件中使用":["66.12"],"reducer是一个纯函数":["66.13"],"它将状态和动作作为参数":["66.13"],"内部":["66.13"],"action是一个简单的":["66.14"],"redux实现了":["66.15"],"是一种用于数据处理的编程模型":["66.16"],"asyncchronous":["66.17"],"javascrip":["66.17"],"and":["66.17","71.4","137.3"],"xml":["66.17"],"是一种使用":["66.17"],"hooks是":["66.18"],"react16":["66.18"],"8版本新增的特性它可以让函数组件既有类组件的状态和生命周期管理能力":["66.18"],"再使用":["66.18"],"最常见的一种方式是通过":["66.19"],"将数据从父组件传递到子组件":["66.19"],"在前端开发中":["66.20"],"diff算法通常用于虚拟dom的比较和更新":["66.20"],"以提高页面性能和响应速度":["66.20"],"在react和其它虚拟dom中":["66.20"],"diff算法的主要目标是在进行ui更新时":["66.20"],"会提高性能":["66.21"],"order":["66.22"],"自底向上增量开发的":["67.1"],"模型":["67.2"],"视图":["67.2"],"和视图模型":["67.2"],"这种设计模式有助于实现前端应用程序的解耦和可维护性":["67.2"],"基本概念":["67.2"],"模型是应用程序的数据部分":["67.2"],"包含了应用程序的数据和业务逻辑":["67.2"],"模型通常通过ajax请求与后端交互":["67.2"],"以获取或更新数据":["67.2"],"视图是用户界面的一部分":["67.2"],"负则呈现模型数据":["67.2"],"视图通常是用":["67.2"],"的更新都会向下流动到子组件中":["67.3"],"每次父组件发生更新":["67.3"],"将输出字符串转化为":["67.4"],"类型":["67.4","122.2"],"trim":["67.4"],"自动过滤用户输入的首尾空格":["67.4"],"事件修饰符":["67.4"],"将数据解析成纯文本":["67.6"],"指令操作网页元素的恶纯文本内容":["67.7"],"是否可以绑定多个方法":["67.9"],"的作用":["67.10"],"设置的":["67.10"],"当它依赖的这个值发生改变时":["67.11"],"就更新":["67.11"],"编程式":["67.12"],"用":["67.12"],"vue生命周期":["67.14"],"hash":["67.15","67.17","75.5","92.0","134.2"],"history":["67.15","67.16"],"abstract":["67.15"],"go":["67.16"],"back":["67.16"],"forward":["67.16"],"方法实际调用的是":["67.16"],"window":["67.16","69.54","76.0"],"createrouter":["67.18","67.19"],"router":["67.18"],"模式":["67.19"],"推荐使用这个模式":["67.19"],"设置的新url可以与当前url同源的url":["67.20"],"params":["67.21","92.0"],"用户id等":["67.22"],"它们直接包含在路由的路径中":["67.22"],"这些参数作为路径的一部分":["67.22"],"提供了对特定资源的访问":["67.22"],"搜索关键字":["67.23"],"分页信息等":["67.23"],"它们不包含在路由的路径中":["67.23"],"而是作为键值对附加到url后面":["67.23"],"当需要传递标识性信息":["67.24"],"如用户id":["67.24"],"帖子id等":["67.24"],"插值是最基本的数据绑定方式之一":["67.26"],"v":["67.27","67.28","67.29","67.44","89.2"],"bind":["67.28","67.29","105.4"],"可以根据条件动态绑定类名":["67.28"],"可以根据条件动态绑定样式":["67.29"],"binding":["67.30"],"on":["67.31","70.7","137.3"],"可以将":["67.31"],"事件绑定到":["67.31"],"路由守卫有哪些":["67.32"],"next":["67.33","123.9","127.4"],"在路由改变前触发":["67.33"],"常用于全局的身份验证检查等":["67.33"],"route":["67.34","67.35"],"但是该组件被复用时调用":["67.35"],"beforerouteleave":["67.35"],"导航离开该组件的对应路由时调用":["67.35"],"接收三个参数":["67.35"],"表示要进入的目标路由":["67.35"],"除了内置的一些列指令":["67.36"],"使用组件":["67.37"],"assembly":["67.38"],"用于传递事件给父组件":["67.40"],"第一个参数要为传递的参数名":["67.40"],"第二个参数为传递的值":["67.40"],"button":["67.41"],"click":["67.41","90.0"],"transferparents":["67.41"],"表示":["67.42"],"父组件可以在这个坑位中填充任何模版代码":["67.42"],"然后子组件中":["67.42"],"就会被替换成这些内容":["67.42"],"我们是可以为子组件的插槽指定默认内容的":["67.43"],"子组件":["67.43","69.3","69.5","73.11"],"没有提供":["67.44"],"的插槽":["67.44"],"就被隐式地命名为":["67.44"],"default":["67.44","98.0","100.0"],"在父组件中":["67.44"],"我们可以使用添加了":["67.44"],"变量名":["67.45","88.15"],"或者缩写为":["67.45"],"personname":["67.46"],"malou":["67.46"],"age":["67.46","69.11","103.11","111.3"],"父组件":["67.46","67.47"],"的值获取的":["67.47"],"watchcallback":["67.49"],"watchoptions":["67.49"],"stophandle":["67.49"],"侦听多个值":["67.49"],"sources":["67.49"],"这个源来自以下几种":["67.50"],"返回一个值":["67.50"],"一个ref":["67.50"],"一个响应式对象":["67.50"],"侦听一个ref":["67.51"],"侦听多个来源时":["67.51"],"回调函数接收两个数组":["67.51"],"分别对应来源数组中的新值和旧值":["67.51"],"vue3中用于监听数据变化的属性":["67.52"],"是计算属性":["67.52"],"怎么解决的":["67.53"],"它包含有关当前路由状态的信息":["67.54"],"例如路径":["67.54"],"查询等":["67.54"],"在vue3中":["67.54"],"对象可以访问当前路由的信息":["67.54"],"useroute":["67.54"],"函数来获取当前的":["67.54"],"用于加载组件":["67.55"],"在引入组件时候":["67.55"],"我们可以通过":["67.55"],"动态导入组件":["67.55"],"这将返回一个":["67.55"],"表示组件的异步加载":["67.55"],"引入了":["67.56"],"对象来代替":["67.56"],"中使用的":["67.56"],"相对于":["67.56"],"defineproperty具有更强大和灵活的功能":["67.56"],"它能够监控对象的所有属性":["67.56"],"vuex有五个属性":["67.57"],"getters":["67.57"],"mutations":["67.57"],"actions":["67.57"],"数据源存放地":["67.57"],"03":["69.0","70.0","71.0"],"emit":["69.1"],"child":["69.3","69.5"],"上段代码中":["69.3"],"defineprops":["69.3"],"函数来定义props的类型和默认值":["69.3"],"父组件通过在子组件上监听对应的时间":["69.5"],"并指定触发事件时的回调函数":["69.5"],"ref函数除了可以用于定义一个响应式的变量或引用之外":["69.7"],"还可以获取dom组件实例":["69.7"],"第二个参数是要提供的数据本身":["69.9"],"这个数据可以是响应式的对象":["69.9"],"响应式的ref":["69.9"],"reactive对象":["69.9"],"函数等":["69.9"],"父组件中使用provide提供数据后":["69.9"],"所有的子组件都可以通过inject来访问这些数据":["69.9"],"inject时在子组件中使用的方法":["69.9"],"用于接受父组件提供的数据":["69.9"],"更新父组件中的name和age":["69.11"],"父组件parent":["69.11"],"parent":["69.11","73.7","73.9","107.4","113.3"],"父组件name":["69.11"],"父组件age":["69.11"],"安装":["69.13","102.2"],"shell":["69.13","102.2","136.2","136.3","136.4","138.2"],"npm":["69.13","73.20","102.2"],"install":["69.13"],"or":["69.13","98.0"],"yarn":["69.13","73.20"],"pnpm":["69.13"],"是一个为":["69.15"],"vue3":["69.15"],"方法会导致不可预测的结果":["69.17"],"元素的":["69.18"],"值可能会导致性能问题和不稳定的":["69.18"],"ui":["69.18"],"关键字在事件处理程序中指向":["69.19"],"如果在条件渲染中返回":["69.20"],"应该将这些函数提升到组件外部或使用":["69.21"],"usecallback":["69.21"],"hook":["69.21","69.56"],"暂时留个坑":["69.22"],"组件生命周期包括三个阶段":["69.23"],"挂载阶段":["69.23"],"用于初始化状态":["69.24"],"或绑定事件处理方法":["69.24"],"static":["69.24"],"见上文":["69.25"],"shouldcomponentupdate":["69.25"],"nextprops":["69.25"],"nextstate":["69.25"],"中移除之前调用":["69.26"],"通常用于清理定时器":["69.26"],"取消订阅等收尾工作":["69.26"],"和功能":["69.27"],"避免在每次渲染时都创建新的回调函数实例":["69.32"],"当回调函数作为prop传递给子组件时":["69.32"],"类似于":["69.33"],"类似于redux的工作方式":["69.34"],"动态计算可视区域的起始索引":["69.36"],"然后只渲染这部分列表项":["69.36"],"避免了一次加载大量数据从而实现平滑的滚动和效果":["69.36"],"主要用于分析网络应用和网页":["69.37"],"accessibility":["69.38"],"监测页面的可访问性与优化建议":["69.38"],"最佳实践":["69.38"],"best":["69.38"],"practice":["69.38"],"页面是否符合最佳实践":["69.38"],"主要分为三个档次":["69.39"],"分别用红黄绿三种颜色代表":["69.39"],"不同页面之间进行数据或消息传递的过程":["69.41"],"可以通过url参数在不同页面之间传递数据":["69.42"],"html5的local":["69.43"],"类似于local":["69.44"],"在不同页面之间传递数据":["69.45"],"虽然websocket通常用于实时通信":["69.47"],"但也可以用于不同页面之间的通信":["69.47"],"当一个网页向不同域名":["69.48"],"sharing":["69.50"],"是一种由":["69.50"],"从而绕过浏览器的跨域限制":["69.51"],"的服务器端代理":["69.52"],"jwt":["69.53"],"可以在请求头中使用":["69.53"],"xss":["69.54"],"如果在":["69.54"],"中加载的页面可以受到恶意代码的控制":["69.54"],"那么恶意代码可能会利用此":["69.54"],"来获取父页面的敏感信息或执行恶意操作":["69.54"],"通信机制限制":["69.54"],"进行跨页面通信通常会依赖于一些基于浏览器的通信机制":["69.54"],"postmessage":["69.54"],"这些机制可能会有一些限制":["69.54"],"如不能直接传递复杂的对象":["69.54"],"需要在两个页面中都添加相应的监听器等":["69.54"],"中的开发方式":["69.55"],"这种开发方式与将不同功能或模块拆分到单独的仓库中":["69.55"],"multi":["69.55","98.0"],"相对应":["69.55"],"是一个自定义":["69.56"],"用于在渲染过程中对值进行记忆":["69.56"],"memoization":["69.56"],"来声明状态变量":["69.60"],"初始化状态变量时":["69.60"],"从本地存储中获取对应键的值":["69.60"],"storedvalue":["69.60"],"localstorage":["69.60"],"getitem":["69.60"],"如果本地存储中有对应键的值":["69.60"],"则返回该值":["69.60"],"否则返回初始值":["69.60"],"为什么分开写了":["70.5"],"commonjs区别":["70.12"],"当拖动操作开始时触发":["71.3"],"drop":["71.4"],"cursor":["71.5"],"通过事件监听器监听拖拽相关事件":["71.6"],"区别":["71.9"],"在逻辑组织和逻辑复用方面":["71.9"],"面试":["72.0"],"强缓存是":["72.3"],"我们应该去执行什么操作让它获取到最新更新呢":["72.12"],"哪些没有改变":["72.19"],"tolocalestring":["72.26"],"线上":["73.0"],"await用法区别":["73.3"],"中用来处理异步操作的对象":["73.4"],"它代表一个异步操作最终的完成或失败":["73.4"],"可以获取异步操作的结果或错误":["73.4"],"tsx":["73.9","73.10","78.3","78.5"],"forwardref":["73.10"],"param2":["73.11"],"child2":["73.11"],"父组件通过设置onchange事件传递给子组件":["73.12"],"3px":["73.13"],"5px":["73.13","74.16"],"000":["73.13"],"文本阴影":["73.13"],"添加文本的阴影效果":["73.13"],"2px":["73.13"],"4px":["73.13"],"position":["73.14","81.3","81.4","81.5","81.8","81.10"],"relative":["73.14","81.3","81.4","81.5","81.10"],"来布局":["73.14"],"flexbox":["73.14"],"布局":["73.14"],"center":["73.15","74.21","81.1","81.5","81.6"],"垂直居中":["73.15"],"使用表格布局":["73.15"],"table":["73.15"],"content":["73.15","137.3"],"cell":["73.15"],"vertical":["73.15"],"中处理异步操作的两种不同类型":["73.16"],"通常代表一些较大的任务":["73.16"],"settimeout":["73.16","76.0","104.7","115.5"],"setinterval":["73.16","104.3"],"当一个函数中的内部函数被拿到函数外部调用":["73.17"],"全局变量不易维护":["73.18"],"安装最新版依赖即可":["73.20"],"改变根节点的挂在方式":["73.20"],"默认情况下":["73.21","97.4"],"方法会以异步方式进行更新":["73.21"],"这意味着它会将多个状态更新批量处理":["73.21"],"这个函数可以告诉":["73.22"],"在下次重新渲染组件时":["73.22"],"应该延迟更新状态":["73.22"],"这样":["73.22"],"一些较慢的操作":["73.22"],"例如异步请求等":["73.22"],"以提高应用程序的质量":["73.23"],"启用严格模式后":["73.23"],"会执行额外的检查和警告":["73.23"],"以帮助开发者发现一些常见问题":["73.23"],"并尽早地解决它们":["73.23"],"在大型项目中或已经存在大量的":["73.24"],"调用等代码片段":["73.24"],"更新组件树时会阻塞用户界面的响应":["73.25"],"可能导致卡顿和延迟":["73.25"],"而并发模式通过将任务分解为多个小步骤":["73.25"],"让":["73.25"],"在执行渲染和布局时可以中断和恢复任务":["73.25"],"从而提供更平滑和响应式的用户体验":["73.25"],"并发模式中":["73.25"],"引入了两个主要概念":["73.25"],"04":["74.0","75.0"],"表示一个变量已经被声明了":["74.2"],"但尚未被赋值":["74.2"],"无":["74.3"],"空":["74.3"],"不存在":["74.3"],"这样可以把现有的类型叠加到一起成为一种类型":["74.5"],"但使用上完全不同":["74.6"],"split":["74.7","92.0"],"将整数部分拆分":["74.7"],"intnumber":["74.7"],"小数部分":["74.7"],"fraction":["74.7"],"返回的变量":["74.7"],"foreach":["74.7","89.9"],"item":["74.7","78.12","103.7"],"非第一位并且是下标是3的倍数":["74.7"],"添加":["74.7"],"else":["74.7","89.4","98.0","127.4"],"正常添加字符":["74.7"],"所有的节点都被push进去":["74.8"],"comparison":["74.10"],"以确定是否重新渲染组件":["74.10"],"当函数组件的":["74.10"],"发生变化时":["74.10","109.4"],"会重新调用组件函数来计算新的":["74.10"],"结构":["74.10"],"但在某些情况下":["74.10"],"创建一个对象":["74.11"],"并将其赋给变量":["74.11"],"将变量":["74.11"],"的引用赋给变量":["74.11"],"即":["74.11"],"当循环结束后":["74.12"],"的值已经变成了":["74.12"],"而在每个":["74.12"],"回调函数中":["74.12"],"都是在循环结束后才触发执行的":["74.12"],"所以它们都会打印出最终的":["74.12"],"旨在完全改变我们设计基于网格的用户界面的方式":["74.13"],"four":["74.14"],"five":["74.14"],"six":["74.14"],"grid":["74.15"],"gap":["74.16"],"声明了两行":["74.16"],"行高分别为50px":["74.16"],"50px":["74.16","81.1","81.2","81.10","81.15"],"固定的列宽与行高":["74.16"],"可以简化重复的值":["74.16"],"该函数接受两个参数":["74.16"],"第一个参数是重复的次数":["74.16"],"第二个参数是所要重复的值":["74.16"],"比如上面行高都是一样的":["74.16"],"我们可以这么去实现":["74.16"],"实际效果是一模一样的":["74.16"],"设置行间距":["74.17"],"设置列间距":["74.17"],"一般这个属性跟网格元素的":["74.18"],"area":["74.18"],"一起使用":["74.18"],"属性指定项目放在哪一个区域":["74.18"],"wrapper":["74.18","74.19","74.24"],"display":["74.18","74.19","74.24"],"one":["74.19"],"two":["74.19"],"three":["74.19"],"这个顺序由":["74.19"],"属性决定":["74.19"],"默认值是":["74.19"],"row":["74.19"],"属性设置单元格的垂直位置":["74.20"],"上中下":["74.20"],"它们都有如下属性":["74.20"],"sql":["74.20"],"container":["74.20","74.21","78.10"],"start":["74.20","74.21","102.9","130.2"],"end":["74.20","74.21"],"stretch":["74.21"],"space":["74.21"],"around":["74.21"],"between":["74.21"],"evenly":["74.21"],"属性中定义的行和列":["74.22"],"如果在网格定义之外又放了一些东西":["74.22"],"或者因为内容的数量而需要的更多网格轨道的时候":["74.22"],"网格将会在隐式网格中创建行和列":["74.22"],"假如有多余的网格":["74.22"],"右边框所在的垂直网格线":["74.24"],"上边框所在的水平网格线":["74.24"],"下边框所在的水平网格线":["74.24"],"columns":["74.24"],"属性设置单元格内容的水平位置":["74.26"],"左中右":["74.26"],"跟":["74.26"],"items":["74.26","87.12"],"属性的用法完全一致":["74.26"],"但只作用于单个项目":["74.26"],"nums":["75.1"],"map":["75.2","78.12","87.13","110.23","131.8"],"n":["75.2","123.7","131.5"],"reduce":["75.2","103.1","103.9","103.10","103.14"],"then":["75.3","137.3"],"parseurl":["75.5"],"record":["75.5"],"通常用于跨域请求和cors":["75.6"],"跨资源共享":["75.6"],"机制":["75.6"],"一般是通过复杂跨域请求时才会发送":["75.6"],"get":["75.7"],"put":["75.7"],"isnumber":["75.8"],"t":["75.8","122.3","122.5"],"的作用是将多个":["75.11"],"包裹在一起形成一个新的":["75.11"],"res":["75.12","125.0"],"方法返回一个以给定值解析后的":["75.12"],"如果有一个":["75.13"],"race":["75.14"],"方法是类似的":["75.14"],"不同的是":["75.14"],"变成":["75.15"],"reject":["75.15"],"状态时":["75.15"],"新":["75.15"],"郭子鑫":["75.16"],"进行分组的减法运算":["76.0"],"并返回结果":["76.0"],"不能使用":["76.0"],"eval":["76.0"],"建议使用递归":["76.0"],"要在":["76.0"],"秒后调用":["76.0"],"checkstate":["76.0"],"下列哪些写法是正确的":["76.0"],"05":["77.0","102.14"],"单线程还是多线程":["77.2"],"建立链接是哪些":["77.8","77.19"],"优缺点":["77.15"],"为什么是单线程":["77.21"],"事件阻塞":["77.22"],"out":["77.23"],"是一个高阶组件":["78.2"],"主要用于优化react函数组件的性能":["78.2"],"当有一个组件":["78.2"],"其输出仅依赖于":["78.2"],"而且在":["78.2"],"不变时不需要重新渲染":["78.2"],"就可以使用":["78.2"],"适用于":["78.5"],"无状态组件":["78.5"],"内部状态与父组件无关":["78.5"],"的组件":["78.5"],"组件通过memo来包裹":["78.5"],"mycomponent":["78.5"],"创建后":["78.6"],"挂载前":["78.6"],"挂载后":["78.6"],"更新前":["78.6"],"onbeforeupdate":["78.6"],"更新后":["78.6"],"onupdated":["78.6"],"销毁前":["78.6"],"销毁后":["78.6"],"destroyed":["78.6"],"异常捕获":["78.6"],"errorcaptured":["78.6"],"onerrorcaptured":["78.6"],"更小的体积":["78.7"],"pop":["78.8","139.8"],"shift":["78.8"],"unshift":["78.8"],"splice":["78.8"],"sort":["78.8"],"使这些方法可以额外的做更新通知":["78.8"],"从而做出响应":["78.8"],"初始化时的递归或者遍历会造成性能损失":["78.8"],"通知更新过程需要维护大量":["78.8"],"dep":["78.8"],"实例和":["78.8"],"watcher":["78.8"],"额外占用的内存比较多":["78.8"],"新增或删除对象属性无法拦截":["78.8"],"继承":["78.9"],"person":["78.9","105.3","113.6","123.9"],"student":["78.9"],"grade":["78.9"],"direction":["78.10"],"column":["78.10"],"中间容器设置":["78.10"],"可以实现此布局":["78.10"],"是一个副作用函数":["78.11"],"他们之间的区别有":["78.11"],"既要指明监听数据的源":["78.11"],"也要指明监听的回调":["78.11"],"indexof":["78.12","92.0"],"去掉前缀后的最后一个字符":["78.12"],"二分法":["78.12"],"检查所有字符串时候都带有指定前缀":["78.12"],"checkhasprefix":["78.12"],"boolean":["78.12","89.2","106.1","123.2"],"every":["78.12"],"startswith":["78.12"],"二分法查找":["78.12"],"fun2":["78.12"],"寻找最短字符串的长度":["78.12"],"minlen":["78.12"],"math":["78.12"],"min":["78.12"],"low":["78.12"],"实际效果":["79.0"],"shdow":["80.0"],"rect4":["81.1"],"rect5":["81.1"],"margin":["81.1","81.2","81.3","81.5","81.6","81.7","81.8"],"width":["81.1","81.3","81.5","81.6","81.7","81.8","81.10","109.5"],"height":["81.1","81.2","81.3","81.4","81.5","81.7","81.8","81.10","81.11","109.5"],"60px":["81.1","81.3","81.12"],"465efb":["81.2","81.4","81.10"],"webkit":["81.2","81.4","81.5"],"animation":["81.2","81.4","81.5","81.14"],"rotateplane":["81.2"],"2s":["81.2","81.9","81.12","81.13"],"infinite":["81.2","81.5"],"ease":["81.2"],"bounce2":["81.3"],"100px":["81.3","81.5","81.6","81.7","81.8"],"32px":["81.4"],"30px":["81.4"],"top":["81.4","81.10","81.13"],"cubemove":["81.4"],"90px":["81.5","81.10"],"0s":["81.5","81.12","81.13"],"150px":["81.6"],"40px":["81.7","81.12"],"container3":["81.8"],"20px":["81.8","81.11","81.12","81.15"],"delay":["81.9","81.12","81.13","104.2","104.5","115.2"],"translatex":["81.9","81.11"],"65px":["81.9","81.13"],"translatey":["81.9","81.11"],"3s":["81.9","81.13"],"0px":["81.9","81.13","81.15"],"4s":["81.9","81.12"],"5s":["81.9"],"translatefx":["81.10"],"translatesx":["81.10"],"180px":["81.10"],"float":["81.10"],"300px":["81.10","81.11"],"8s":["81.12"],"6s":["81.12"],"19px":["81.13"],"1s":["81.13"],"111px":["81.13"],"130px":["81.13"],"circle":["81.14"],"70px":["81.15"],"匹配的选择器中的":["82.0"],"每一种选择器类型的":["82.0"],"数值":["82.0"],"决定":["82.0"],"而当优先级与多个":["82.0"],"声明中任意一个声明的优先级相等的时候":["82.0"],"中最后的那个声明将会被应用到元素上":["82.0"],"当同一个元素有多个声明的时候":["82.0"],"优先级才会有意义":["82.0"],"因为每一个直接作用于元素的":["82.0"],"规则总是会接管":["82.0"],"覆盖":["82.0"],"take":["82.0"],"该元素从祖先元素继承而来的规则":["82.0"],"选择器类型":["82.0"],"选择器类型有很多种":["82.0"],"blockbounce":["84.0"],"customtag":["87.3"],"strings":["87.3"],"values":["87.3"],"判断字符串是否包含指定字符":["87.4"],"返回布尔值":["87.4","87.5","89.13","89.18"],"判断字符串是否以指定的字符开始":["87.5"],"结束":["87.5"],"将字符串指定次数":["87.6"],"返回新的字符串":["87.6"],"根据给定的码点创建一个字符串":["87.7"],"它可以将一个或者多个码点转换为相应的字符":["87.7"],"path":["87.8"],"str":["87.9","110.21"],"用于将字符串的":["87.10"],"unicode":["87.10","87.31"],"queryselectorall":["87.12"],"代表标签下的所有元素":["87.12"],"该运算符主要用于函数调用":["87.12"],"可以扩展函数参数":["87.12"],"numbers":["87.12","93.1"],"iterable":["87.13"],"的对象":["87.13"],"包括":["87.13","112.0"],"es6":["87.13"],"新增的数据结构":["87.13"],"set":["87.13","89.11"],"details":["87.14","88.15"],"返回数组中满足条件的第一个元素":["87.15"],"返回数组中满足条件的第一个元素的索引":["87.15"],"到终止索引":["87.16"],"覆盖原有的元素":["87.17"],"用于遍历数组":["87.18"],"它们都返回一个遍历器对象":["87.18"],"可以用for":["87.18"],"of循环进行遍历":["87.18"],"唯一的区别是":["87.18"],"是对键名的遍历":["87.18"],"这样的书写更加简洁":["87.20"],"foo":["87.20","87.21","88.5","100.0","105.6"],"bar":["87.20","88.5","100.0"],"方法二":["87.21"],"bc":["87.21"],"操作符的行为类似":["87.22"],"但有两个区别":["87.22"],"一是object":["87.22"],"nan":["87.22"],"它返回目标对象":["87.23"],"如果多个源对象具有相同的属性":["87.23"],"则后面的对象的属性将覆盖前面的对象的属性":["87.23"],"用于获取对象的原型":["87.24"],"它返回指定对象的原型":["87.24"],"prototype":["87.25","107.1","113.5"],"用于设置对象的原型":["87.25"],"它将指定对象的原型设置为另一个对象或null":["87.25"],"在es6中":["87.27"],"如果regexp构造函数第一个参数是一个正则对象":["87.27"],"的unicode字符":["87.29"],"regex":["87.30"],"abc":["87.30"],"match":["87.32"],"es是ecmascript的缩写":["88.0"],"也就是javascript的标准化规范":["88.0"],"关键字用于声明一个块级作用域的变量":["88.2"],"但值不可变":["88.3"],"只要等号两边的数据格式相同":["88.5"],"左边的变量就会被赋予对应的值":["88.5"],"bar2":["88.5"],"third":["88.5"],"baz":["88.6"],"first":["88.6","89.28","123.1","137.2"],"f":["88.6","136.2"],"l":["88.6","102.14"],"与数组一样":["88.6"],"解构也可以用于嵌套结构的对象":["88.6"],"则先会转换为对象":["88.8"],"的参数表面上是一个数组":["88.9"],"但在传入参数的那一刻":["88.9"],"数组参数就被解构成变量":["88.9"],"对于函数内部的代码来说":["88.9"],"它们能感受到参数就是":["88.9"],"类似数组的map方法的参数也可以被解构":["88.9"],"hhh":["88.10"],"参数变量是默认声明的":["88.10"],"避免this指向问题和明确的参数处理":["88.11"],"但不适合构造函数和需要自己this值的场景":["88.11"],"箭头函数示例":["88.11"],"不可以当作构造函数":["88.12"],"不能使用new":["88.13"],"箭头函数不能绑定":["88.13"],"包围":["88.14","98.0"],"并使用":["88.14"],"语法来插入变量或者表达式":["88.14"],"语法中":["88.14"],"需要在展开的可迭代对象前面加上三个点":["88.15"],"es6中引入":["88.15"],"形式为":["88.15"],"用于获取函数的多余参数":["88.15"],"这样就不需要使用":["88.15"],"arr1":["88.16"],"即es6对象字面量语法":["88.19"],"而不需要使用":["88.20"],"允许字面量定义对象时":["88.21"],"用方法二":["88.21"],"表达式":["88.21","123.7"],"作为对抗的属性名":["88.21"],"即吧表达式放在方括号内":["88.21"],"propkey":["88.21"],"用于创建具有相同属性和方法的对象":["88.22"],"book":["88.22"],"javascript并没有原生的模块化支持":["88.23"],"开发人员通常使用一些第三方库或模式来实现模块化":["88.23"],"例如commonjs和amd":["88.23"],"然而":["88.23"],"es6引入了原生的模块化系统":["88.23"],"通过import和export关键字来实现":["88.23"],"常用":["89.0","89.3"],"setting":["89.1"],"上面代码对一个空对象假设了一层拦截":["89.1"],"重定义了属性的读取":["89.1"],"和设置":["89.1"],"行为":["89.1"],"运行结果为":["89.1"],"上面代码说明":["89.1"],"proxy实际上重载":["89.1"],"overload":["89.1"],"了点运算符":["89.1"],"即用自己的定义覆盖了语言的原始定义":["89.1"],"拦截对象属性的设置":["89.2"],"拦截":["89.2"],"throw":["89.4"],"referenceerror":["89.4"],"prop":["89.4","103.10"],"does":["89.4"],"not":["89.4","137.2"],"exist":["89.4"],"上面代码标识":["89.4"],"如果访问目标对象不存在的属性":["89.4"],"会抛出一个错误":["89.4","89.7"],"如果没有这个拦截函数":["89.4"],"访问不存在的属性":["89.4"],"只会返回":["89.4"],"方法可以被继承":["89.4"],"rangeerror":["89.5"],"seems":["89.5"],"invalid":["89.5"],"对满足条件的":["89.5"],"属性以及其它属性":["89.5"],"直接保存":["89.5"],"young":["89.5"],"报错":["89.5"],"ctx":["89.6"],"args":["89.6","89.8","115.2"],"reflect":["89.6"],"变得合理":["89.7"],"desc":["89.7"],"在无法定义属性时":["89.7"],"则会返回":["89.7"],"false":["89.7","98.0","110.6","110.7","110.19","111.4"],"老写法":["89.7"],"try":["89.7"],"property":["89.7","98.0"],"attributes":["89.7"],"success":["89.7","125.0"],"catch":["89.7"],"failure":["89.7"],"新写法":["89.7"],"调用一个函数":["89.8"],"并传入指定的参数":["89.8"],"construct":["89.8"],"通知观察者":["89.9"],"notify":["89.9"],"创建一个被观察的对象":["89.9"],"observable":["89.9"],"语言的原生数据类型之一":["89.10"],"是一种独一无二且不可修改的数据类型":["89.10"],"可以用作对象属性的唯一标识符":["89.10"],"它被设计用于创建对象属性的私有成员或者用作常量":["89.10"],"函数可以创建一个":["89.10"],"每次调用":["89.10"],"hash结构":["89.12"],"删除键值对":["89.13"],"检查键值对":["89.13"],"clear":["89.13","89.18"],"清除所有成员":["89.13","89.18"],"也是一种键值对的集合":["89.14"],"是一种不重复值的集合":["89.17"],"删除值":["89.18"],"检查值":["89.18"],"keys":["89.18"],"是一种弱引用集合":["89.19"],"它只能存储对象类型的值":["89.19"],"dom节点被移除时自动释放此成员键":["89.20"],"简便的访问接口":["89.24"],"使得数据结构成员能够按照某种次序排列":["89.24"],"每一次调用":["89.25"],"都会返回数据结构的当前成员的信息":["89.25"],"具体来说":["89.25"],"就是返回一个包含":["89.25"],"done":["89.25"],"两个属性的对象":["89.25"],"属性是当前成员的值":["89.25"],"属性是一个布尔值":["89.25"],"表示是否遍历结束":["89.25"],"makeiterator":["89.25"],"nextindex":["89.25"],"接口的数据结构":["89.26"],"forst":["89.28"],"扩展运算符":["89.28"],"也会调用默认的":["89.28"],"函数在语法上":["89.30"],"可以把它理解成一个状态及":["89.30"],"handlegenerator":["89.31"],"文件跨域后下载":["90.0"],"a标签直接打开文件":["90.0"],"获取页面文件名":["90.0"],"param":["90.0"],"文件url":["90.0"],"downloadurlfile":["90.0"],"scrollleft":["91.0"],"设置或获取位于对象左边界和窗口中目前可见内容的最左端之间的距离":["91.0"],"scrollwidth":["91.0"],"返回元素的宽度":["91.0"],"包括元素宽度":["91.0"],"内边距和溢出尺寸":["91.0"],"不包括边框和外边距":["91.0"],"无溢出的情况":["91.0"],"clientwidth":["91.0"],"相同":["91.0"],"scrollheigh":["91.0"],"返回元素的高度":["91.0"],"包括元素高度":["91.0"],"与clientheight相同":["91.0"],"提取url中的解析字符串":["92.0"],"urlparamhash":["92.0"],"h":["92.0","102.11"],"含义":["93.1","131.4"],"syn":["93.1"],"同步序列编号":["93.1"],"synchronize":["93.1"],"sequence":["93.1"],"表示向接收方建立tcp连接的请求":["93.1"],"仅在三次握手期间有效":["93.1"],"seq":["93.1"],"状态":["93.2"],"tcp规定":["93.2"],"即使":["93.2"],"包不携带数据":["93.2"],"也要消耗一个序列号":["93.2"],"第二次挥手":["93.2"],"服务端接收到了":["93.2"],"发出确认包":["93.2"],"ack":["93.2"],"并带上自己的序列号":["93.2"],"七层因特网协议栈":["94.0"],"起初网络分层是标准的七层":["94.0"],"也就是我们说的":["94.0"],"osi七层模型":["94.0"],"参考模型是国际标准化组织":["94.0"],"iso":["94.0"],"制定的":["94.0"],"scripting":["95.1"],"跨站脚本攻击":["95.1"],"标签形成注入":["95.2"],"在内联的":["95.2"],"拼接的数据突破了原本的限制":["95.2"],"反射型和dom型三种":["95.3"],"存储型":["95.3"],"即攻击被存储到服务到":["95.3"],"用户名":["95.4"],"密码等等":["95.4"],"按照规定的格式输入":["95.4"],"后端也需要做相同的过滤检查":["95.4"],"因为攻击者完全可以绕过正常输入流程":["95.4"],"直接利用借口向服务器发送设置":["95.4"],"转义html":["95.4"],"如果拼接":["95.4"],"forgery":["95.5"],"跨站请求伪造":["95.5"],"也被称为one":["95.5"],"才能最终完成请求":["95.6"],"此种方式能很好的遏制csrf":["95.6"],"但用户体验较差":["95.6"],"通常来讲csrf是由xss实现的":["95.7"],"举个栗子":["96.0"],"张三":["96.0"],"fn":["96.0","115.2"],"这里能打印是因为这里的指向是指向这个obj对象的":["96.0"],"再看一个例子":["96.0"],"协议的一部分":["97.0"],"由":["97.0"],"rfc":["97.0"],"规范定义":["97.0"],"组成":["97.1"],"以":["97.1"],"分隔":["97.1"],"每一个都是独立的cookie":["97.1"],"为了找到一个特定的cookie":["97.1"],"我们可以以":["97.1"],"分开":["97.1"],"然后找到对应名字":["97.1"],"我们可以使用正则表达式或者函数数组来实现":["97.1"],"正则表达式":["97.1"],"parsecookies":["97.1"],"此调用设置了一个名为":["97.2"],"并且值为":["97.2"],"john":["97.2"],"的cookie":["97.2"],"只会更新名称为":["97.2"],"alert":["97.2"],"它使得该路径下的页面可以访问该cookie":["97.3"],"默认为当前路径":["97.3"],"如果一个cookie带有":["97.3"],"设置的cookie":["97.4"],"这是一项安全限制":["97.4"],"为了允许我们将敏感数据存储在应该仅在一个站点上可用的cookie中":["97.4"],"cookie只有在设置的域下才能被访问到":["97.4"],"请注意":["97.4"],"cookie也不会共享给子域":["97.4"],"forum":["97.4"],"我们可以设置":["97.5"],"选项中的一个":["97.5"],"tue":["97.5"],"jan":["97.5"],"java风格":["98.0"],"brace":["98.0"],"1tbs":["98.0"],"allowsingleline":["98.0"],"双峰驼命名格式":["98.0"],"camelcase":["98.0"],"数组和对象键值对最后一个逗号":["98.0"],"不能带末尾的逗号":["98.0"],"必须带末尾的逗号":["98.0"],"always":["98.0"],"multiline":["98.0"],"多行模式必须带逗号":["98.0"],"单行模式不能带逗号":["98.0"],"comma":["98.0"],"dangle":["98.0"],"控制逗号前后的空格":["98.0"],"before":["98.0"],"after":["98.0"],"控制逗号在行尾出现还是在行首出现":["98.0"],"圈复杂度":["98.0"],"complexity":["98.0"],"以方括号取对象属性时":["98.0"],"后面和":["98.0"],"前面是否需要空格":["98.0"],"可选参数":["98.0"],"强制方法必须返回值":["98.0"],"typescript强类型":["98.0"],"不配置":["98.0"],"consistent":["98.0"],"用于指统一在回调函数中指向this的变量名":["98.0"],"箭头函数中的this已经可以指向外层调用者":["98.0"],"应该没卵用了":["98.0"],"g":["98.0","125.0"],"that":["98.0","137.2"],"指定只能":["98.0"],"that不能指向其它任何值":["98.0"],"this也不能赋值给that以外的其它值":["98.0"],"强制在子类构造函数中用super":["98.0"],"调用父类构造函数":["98.0"],"typescrip的编译器也会提示":["98.0"],"super":["98.0"],"do后面的代码块是否需要":["98.0"],"只有块中有多行语句时才需要":["98.0"],"line":["98.0"],"但是块中的执行语句只有一行时":["98.0"],"块中的语句只能跟和if语句在同一行":["98.0"],"dosomething":["98.0"],"nest":["98.0"],"如果块中的执行语句只有一行":["98.0"],"执行语句可以零另起一行也可以跟在if语句后面":["98.0"],"保持前后语句的":["98.0"],"一致":["98.0"],"all":["98.0"],"全都需要":["98.0"],"curly":["98.0"],"switch语句强制default分支":["98.0"],"也可添加":["98.0"],"no":["98.0"],"注释取消此次警告":["98.0"],"强制object":["98.0"],"的位置":["98.0"],"号应与属性在同一行":["98.0"],"号应与对象名在同一行":["98.0"],"dot":["98.0"],"location":["98.0"],"强制使用":["98.0"],"号取属性":["98.0"],"allowkeywords":["98.0"],"使用保留字做属性名时":["98.0"],"只能使用":["98.0"],"方式取属性":["98.0"],"allowpattern":["98.0"],"mylib":["100.0"],"export":["100.0"],"your":["100.0","137.3"],"funciton":["100.0"],"function1":["100.0"],"function2":["100.0"],"在很多现代浏览器可以使用":["100.0"],"它兼具两方面的优点":["100.0"],"foreach的区别":["101.0"],"callbackfn":["101.1"],"thisarg":["101.1"],"为数组中的每个元素执行的函数":["101.1"],"是一个轻量级的javascript时间库":["102.0"],"浏览器方式引入":["102.3"],"方式":["102.4"],"moment":["102.4","102.9","102.12"],"isoweek":["102.6"],"获取当前月第一天0时0分0秒":["102.6"],"month":["102.6","102.15"],"获取今天23时59分59秒":["102.6"],"endof":["102.6"],"获取本周最后一天":["102.6"],"周六":["102.6"],"23时59分59秒":["102.6"],"设置某个月中的某一天":["102.7"],"date":["102.7","102.9","115.2","137.3"],"设置某个星期中的某一天":["102.7"],"weekday":["102.7"],"设置日期为本周第一天":["102.7"],"周日":["102.7"],"isoweekday":["102.7"],"设置日期为本周周一":["102.7"],"季度":["102.8"],"1到4":["102.8"],"d":["102.8"],"月份中的第几天":["102.8"],"1到31":["102.8"],"dd":["102.8"],"01到31":["102.8"],"星期中的第几天":["102.8"],"数字表示":["102.8"],"0到6":["102.8"],"0表示周日":["102.8"],"6表示周六":["102.8"],"ddd":["102.8"],"三个字母表示星期中的第几天":["102.8"],"sun到sat":["102.8"],"dddd":["102.8"],"星期几":["102.8"],"完整的星期文本":["102.8"],"subtract":["102.9","102.15"],"weeks":["102.9"],"转化为javascript原生date对象":["102.10"],"mmmm":["102.11"],"do":["102.11","137.2"],"yyyy":["102.11"],"mm":["102.11"],"ss":["102.11"],"yyyymmdd":["102.12"],"fromnow":["102.12"],"days":["102.13"],"calendar":["102.13"],"2019年5月14日":["102.13"],"上一个月的1号":["102.15"],"01":["102.15"],"还是上一个月1号":["102.15"],"方法的使用场景":["103.0"],"方法泛用性很强":["103.1"],"这个方法功能主要是对数组中每个元素执":["103.1"],"一个是执行操作的回调函数":["103.2"],"返回值将作为reducd方法的返回值":["103.3"],"这个回调函数支持传入四个参数":["103.3"],"上一次调用":["103.3"],"回调函数的结果":["103.3"],"如果指定了":["103.4"],"则回调函数从数组中第一个元素":["103.4"],"countnames":["103.9"],"acc":["103.9","103.14"],"cur":["103.9"],"counts":["103.9"],"max":["103.10"],"jane":["103.10"],"groupby":["103.10"],"friends":["103.11","113.7"],"anna":["103.11"],"bible":["103.11"],"myarray":["103.12"],"并且性能更好":["103.12"],"会遍历数组两次":["103.13"],"但是可以使用":["103.13"],"只遍历一次并实现相同的效果":["103.13"],"从而更高效":["103.13"],"链的初始值":["103.14"],"由一系列":["103.14"],"链接而成的":["103.14"],"runpromiseinsequence":["103.14"],"值":["103.15"],"然后访问每个整数索引":["103.16"],"triple":["103.17"],"quadruple":["103.17"],"就会执行一个函数或指定的代码片段":["104.1"],"是javascript中常用的定时器函数":["104.3"],"但它们在执行上存在一些精度方面的问题":["104.3"],"intervalid":["104.5"],"callback":["104.6"],"作用":["104.6"],"在浏览器下一次重绘之前执行指定的回调函数":["104.6"],"确保动画在适当的时机更新":["104.6"],"同时也能够有效地减少功耗和提高性能":["104.6"],"通常比":["104.7"],"会":["105.1"],"被绑定到":["105.1"],"上":["105.1","123.10"],"在非严格模式下则会被绑定到全局对象":["105.1"],"严格模式下":["105.2"],"this指向是":["105.2"],"func2":["105.2"],"use":["105.2","137.3"],"strict":["105.2"],"返回true":["105.3"],"当为更复杂的嵌套关系":["105.3"],"这里嵌套了两层对象":["105.3"],"此时this的指向应该是最后一个调用它的对象":["105.3"],"brother":["105.3"],"mike":["105.3"],"是直接进行相关函数调用的":["105.4"],"不会执行相关函数":["105.4"],"而是返回一个函数":["105.4"],"这个新的函数已经自动绑定了新的":["105.4"],"info":["105.5"],"操作符的作用":["105.5"],"操作符用于创建一个给定构造函数的实例对象":["105.5"],"主要的工作":["105.5"],"创建一个新的对象":["105.5"],"将对象与构造函数通过原型链连接起来":["105.5"],"将构造函数中的":["105.5"],"出现在":["105.6"],"settimeout的":["105.6"],"匿名函数中":["105.6"],"因此this指向window对象":["105.6"],"输出为2":["105.7"],"输出为1":["105.7"],"说明":["105.7","139.10"],"方法的优先级会更高":["105.7"],"中的变量与任何特定值类型没有任何关联":["106.0"],"任何变量都可以被赋予":["106.0"],"和重新赋予":["106.0"],"各种类型的值":["106.0"],"也是一个弱类型语言":["106.0"],"对象可以被看作是一组属性的集合":["106.3"],"用对象字面量语法来定义一个对象时":["106.3"],"会自动初始化一组有限的属性":["106.3"],"然后":["106.3"],"这些属性还可以被添加和移除":["106.3"],"对象属性等价于键值对":["106.3"],"属性键要么是字符串类型":["106.3"],"因此必须使用":["106.4"],"来测试":["106.4"],"instanceof":["106.4"],"但是只有函数才会有":["107.1"],"代表这个对象是这个函数的原型对象":["107.2"],"这个对象也是当前函数所创建的实例的原型对象":["107.2"],"设计之初就是为了实现继承":["107.2"],"让由特定函数创建的所有实例共享属性和方法":["107.2"],"该构造函数的实例都可以访问调用":["107.3"],"那么这个构造函数的原型对象上的属性和方法":["107.3"],"怎么和构造函数的实例联系在一起的呢":["107.3"],"就是通过":["107.3"],"每个对象都有":["107.3"],"该属性指向的就是该对象的原型对象":["107.3"],"p1":["107.3","113.6","113.7"],"ƒ":["107.4"],"通过输出可以看到":["107.4"],"很显然":["107.4"],"的构造函数是":["107.4"],"praent":["107.4"],"我们有说过函数也是对象":["107.4"],"原型链":["107.5"],"打印undefined":["108.0"],"就有一个疑问":["108.0"],"怎么会是这样":["108.0"],"不应该报错吗":["108.0"],"经查阅":["108.0"],"此时涉及到":["108.0"],"函数及变量的声明都将被提升到函数的最顶部":["108.0"],"变量可以在使用后声明":["108.0"],"也就是变量可以先使用再声明":["108.0"],"当你声明一个变量时":["108.0"],"变量先会提升到最顶端":["108.0"],"默认为":["108.0"],"第一个例子中":["108.0"],"我们先声明了":["108.0"],"此时提升到顶部的是":["108.0"],"则就叫称为重绘":["109.2"],"每个页面至少需要一次":["109.2"],"回流":["109.2"],"就是在页面第一次加载的时候":["109.2"],"浏览器会使渲染树中受到影响的部分失效":["109.2"],"并重新构造这部分渲染树":["109.2"],"渲染器在":["109.3"],"文档解析":["109.3"],"重绘可以单独触发":["109.4"],"背景色":["109.4"],"颜色":["109.4"],"字体改变":["109.4"],"字体大小":["109.4"],"避免逐个修改节点样式":["109.6"],"如果每句js操作都去回流重绘的话":["109.7"],"浏览器可能就会受不了":["109.7"],"可以传两个参数":["110.1"],"第一个参数为需要查找的元素":["110.1"],"第二个是可选参数":["110.1"],"表示开始搜索的索引":["110.1"],"从0开始":["110.1"],"会转换为整数":["110.1"],"并没有改变原来的数组":["110.2"],"没有返回值":["110.3"],"直接改变原数组":["110.3"],"注意和map方法区分":["110.3"],"将满足条件的元素生成一个新数组返回":["110.4"],"并且返回符合条件的第一个元素的值":["110.5"],"否则返回":["110.5","110.6","110.7","110.19"],"则返回":["110.6","110.7"],"reduceright":["110.8"],"该方法是所有元素调用返回函数":["110.8"],"返回值为最后结果":["110.8"],"传入的类型必须为函数类型":["110.8"],"并返回删除的元素":["110.9"],"该方法改变了数组的长度":["110.9"],"返回变化后数组长度":["110.10"],"并且更改原数组":["110.10"],"返回数组删除的元素":["110.11"],"并且改变原数组":["110.11"],"改变原来的数组":["110.12"],"这是属于数组原型的方法":["110.13"],"arr2":["110.14"],"不改变原数组":["110.15"],"并且没有参数时默认为逗号":["110.15"],"连接":["110.15"],"如果传入负数":["110.17"],"则以最后一项的下标为":["110.17"],"1开始计算":["110.17"],"并且删除元素":["110.17"],"不会改变原数组":["110.17"],"最多只支持三个参数":["110.18"],"只传入一个参数":["110.18"],"这个参数代表下标":["110.18"],"表示替换掉这个下标元素后面的元素为空":["110.18"],"其实也是删除功能":["110.18"],"传入两个参数":["110.18"],"第一个参数代表下标":["110.18"],"第二个元素代表要删除的数量":["110.18"],"传入三个参数":["110.18"],"如果有则返回":["110.19"],"指定要提取嵌套数组的结构深度":["110.20"],"不传值默认值为":["110.20"],"infinity":["110.20"],"传入这个参数表示提取嵌套数组的所有的结构深度":["110.20"],"属性和索引元素的对象":["110.21"],"函数的":["110.21"],"参数也是累数组对象":["110.21"],"step":["110.22"],"方法后再调用深度为":["110.23"],"flat":["110.23"],"基本数据类型":["111.1"],"指的是创建新的数据":["111.2"],"javascript中":["111.3"],"存在浅拷贝的现象有":["111.3"],"assign":["111.3"],"nature":["111.3"],"smart":["111.3"],"good":["111.3"],"names":["111.3"],"fx":["111.3"],"obj2":["111.4"],"stringify":["111.4"],"obj3":["111.5"],"shallowclone":["111.5"],"浅拷贝方法":["111.5"],"浅拷贝是拷贝一层":["111.6"],"深拷贝浅拷贝的区别":["111.7"],"缓存使pwa能够在设备没有网络连接时进行工作":["112.1"],"expires":["112.2"],"cache":["112.2","112.7"],"control":["112.2","112.7"],"强缓存":["112.2"],"判断是否命中":["112.2"],"强制缓存的情况主要有三种":["112.3"],"不存在该缓存结果和缓存标识":["112.3"],"如果客户端的事件小于":["112.4"],"时":["112.4"],"直接使用缓存结果":["112.4"],"expires是http":["112.4"],"0的字段":["112.4"],"但是现在浏览器默认使用的是http":["112.4"],"到了http":["112.4"],"已经被":["112.4"],"替代":["112.4"],"原因在于":["112.4"],"控制缓存的原理是使用客户端的时间与服务端返回的时间作对比":["112.4"],"浏览器携带混存表示向服务器发起请求":["112.5"],"的优先级比":["112.6"],"高":["112.6"],"浏览器缓存相关":["112.8"],"inheritance":["113.0"],"是面向对象软件技术中的一个概念":["113.0"],"我们举一个形象的例子":["113.1"],"定义一个类":["113.1"],"叫汽车":["113.1"],"汽车的属性包括颜色":["113.1"],"轮胎":["113.1"],"品牌":["113.1"],"速度":["113.1"],"排气量等等":["113.1"],"car":["113.1"],"构造函数继承":["113.2"],"parent1":["113.3","113.4"],"play":["113.3","113.5","113.8"],"getname":["113.5","113.6","113.7","113.8"],"p2":["113.6","113.7"],"p3":["113.6","113.7"],"consturctor":["113.8"],"hostname":["114.0"],"获取当前窗口的端口":["114.0"],"port":["114.0"],"resize":["115.0"],"scroll":["115.0"],"keypress":["115.0"],"定义":["115.1"],"oldttme":["115.2"],"now":["115.2"],"newtime":["115.2"],"防抖是指要在n秒后开始执行程序":["115.3"],"debounce":["115.4"],"func":["115.4"],"wait":["115.4"],"timeout":["115.4"],"实现":["115.5"],"目的都是":["115.5"],"只需要用户最后一次输入完":["115.6"],"再发送请求":["115.6"],"是一个让":["117.0"],"运行在服务端的开发平台":["117.0"],"发布于2009年5月":["117.0"],"由ryan":["117.0"],"dahl开发":["117.0"],"实质是对":["117.0"],"v8引擎":["117.0"],"node":["117.1","127.4"],"采用了非阻塞i":["117.1"],"o的机制":["117.1"],"就是说当一个请求所返回的数据需要很长时间":["117.1"],"那么会把这段请求代码放在回调函数中":["117.1"],"当主线程的任务执行完成时":["117.1"],"再去读取放在任务队列的请求的数据":["117.1"],"通过不同地轮询":["117.1"],"event":["117.1"],"loop":["117.1"],"组成一个新的对象返回":["119.1"],"t1":["119.1","119.5","119.7","119.8","119.9"],"里面被选定的键名":["119.2"],"将参数类型":["119.3"],"的所有属性变为可选属性":["119.3"],"partial":["119.4","123.1"],"作用刚好相反":["119.4"],"上面示例中":["119.5","119.6","119.14"],"是可选属性":["119.5"],"作为键值类型":["119.6"],"t2":["119.7","119.12"],"它与":["119.8"],"exclude":["119.8"],"正好相反":["119.8"],"组成一个新类型返回":["119.9"],"也就是返回":["119.9"],"的非空类型版本":["119.9"],"t3":["119.10","119.11"],"s":["119.10","125.0","138.2"],"void":["119.10","119.17","123.6"],"unknown":["119.11"],"t4":["119.11"],"参数的类型":["119.13"],"tohex":["119.13","119.16"],"类型参数是一个构造函数":["119.14"],"返回值是该构造函数的实例类型":["119.14"],"errorconstructor":["119.14"],"命令的参数类型":["119.15"],"它也可以返回多重":["119.15"],"tostring":["119.16"],"helperfunctions":["119.17"],"枚举是":["121.0"],"的初始值为":["121.1"],"其余成员的值会自动递增":["121.1"],"我们也可以不设置初始值":["121.1"],"则枚举的成员将以0开始依次递增":["121.1"],"枚举值被赋予从0开始递增的数字":["121.1"],"同时也可以通过枚举值来进行反向映射":["121.1"],"上述示例中":["121.2","122.4"],"我们可以发现":["121.2"],"如果枚举默认递增的值与手动赋值的值重复时":["121.2"],"typescript是注意不到这一点的":["121.2"],"编译结果是这样":["121.2"],"的枚举":["121.3"],"enum":["121.3"],"blue":["121.3"],"green":["121.3"],"常数枚举与普通枚举的区别是":["121.4"],"它会在编译阶段被删除":["121.4"],"并且不能包含计算成员":["121.4"],"down":["121.5"],"中括号":["122.2"],"表示法来定义":["122.2"],"来作为数字数组类型":["122.2"],"虽然编译不会报错":["122.3"],"但我们无法得到确定的返回值的类型":["122.3"],"这个时候":["122.3"],"泛型就派上用场了":["122.3"],"箭头函数":["122.3"],"我们定义了一个":["122.4"],"的接口":["122.4"],"它接受两个类型参数":["122.4"],"通过指定类型参数为":["122.4"],"我们创建了一个具体的":["122.4"],"genericnumber":["122.5"],"idefaultfirst":["123.1"],"idefaultsecond":["123.1"],"crosstype":["123.1"],"crosstype中的name的类型将为":["123.1"],"具体类型联合":["123.1"],"second":["123.1"],"question":["123.1"],"sstring":["123.1"],"numbher":["123.1"],"getcrossover":["123.1"],"是typescript的工具类型":["123.1"],"iquestiontype":["123.2"],"这里表示id的类型是布尔值":["123.2"],"它也可以定义为字符串":["123.2"],"数字":["123.2"],"都是可以正常运行的":["123.2"],"guards":["123.3"],"类型守卫是一种用于":["123.3"],"printvalue":["123.4"],"cat":["123.5"],"meow":["123.5"],"这种形式":["123.6"],"必须是来自当前函数签名里的一个参数名":["123.6"],"表示一个类型":["123.6"],"bird":["123.6"],"fly":["123.6"],"类型别名有时候和接口很相似":["123.8"],"但是可以作用于原始值":["123.8"],"联合类型":["123.8"],"元组预计其它任何需要手写的类型":["123.8"],"但是不需要给原始类型起别名":["123.8"],"与交叉类型一起使用":["123.9"],"linkedlist":["123.9"],"在下面示例中":["123.10"],"在编辑器中将鼠标悬停在":["123.10"],"interfaceed":["123.10"],"显示它返回的是":["123.10"],"但悬停在":["123.10"],"aliased":["123.10"],"初始化":["123.11"],"在这个条件语句中":["123.12"],"typescript手册":["123.13"],"checkalivetype":["125.0"],"errcode":["125.0"],"errmsg":["125.0"],"ok":["125.0"],"调用人脸识别":["125.0"],"startface":["125.0"],"custname":["125.0"],"replace":["125.0"],"是一种数据结构":["127.1"],"是一组由节点组成的":["127.1"],"数组":["127.2"],"元素时":["127.2"],"因为需要":["127.2"],"移动其它元素":["127.2"],"来进行":["127.2"],"它包含一个值和一个指向下一个节点的引用":["127.3"],"它的实现可以参考下面代码":["127.3"],"newnode":["127.4"],"在链表指定位置插入新节点":["127.4"],"insertat":["127.4"],"循环链表":["127.5"],"一个":["127.5"],"包含两个值":["127.5"],"当前节点的值":["127.5"],"是否大于":["127.6"],"greaterthan":["127.6"],"是否小于或等于":["127.6"],"lessthanorequal":["127.6"],"greaterthanorequal":["127.6"],"反转比较顺序":["127.6"],"compareoriginal":["127.6"],"namedchunksplugin":["129.0"],"以改善构建性能":["129.0"],"tree":["129.0","130.1"],"shaking改进":["129.0"],"对tree":["129.0"],"shaking进行了改进":["129.0"],"提供了更好的代码优化":["129.0"],"syntax":["130.0","130.1"],"ast":["130.1"],"多端开发框架":["130.2"],"mpvue":["130.2"],"taro":["130.2"],"来源于一个ast转换网站":["130.2"],"astexplorer":["130.2"],"transsyntax":["130.2"],"aa":["130.2"],"转换成":["130.2"],"后":["130.2","134.1"],"program":["130.2"],"解析过程":["130.3"],"这个过程要经":["130.3"],"词法分析":["130.3"],"转换成ast":["130.4"],"是计算机科学中将字符序列转换为单词":["130.4"],"token":["130.4"],"序列的过程":["130.4"],"基本信息":["131.0"],"是一个信息文件":["131.1"],"里面储存着位置信息":["131.1"],"js脚本现在变得很复杂":["131.2"],"怎么在浏览器中使用sourcemap":["131.3"],"cheap":["131.4","131.8","131.9"],"inline":["131.4"],"这五种关键字的组合":["131.4"],"webpcak官网的devtool":["131.4"],"devtool中sourcemap关键字配置":["131.4"],"产生":["131.4"],"map文件":["131.4"],"nb":["131.5"],"webpack":["131.5"],"footer":["131.5"],"debugger":["131.7"],"source":["131.8"],"转换后的代码":["131.8"],"仅限行":["131.8"],"信息全面":["131.9"],"并且由于代码未压缩":["131.9"],"我们并不那么在意代码咧信息":["131.9"],"是一个具有高性能且极具灵活性的即时":["133.1"],"原子化":["133.1"],"pick":["134.0","134.2","134.3"],"的更改应用于当前所在分支":["134.1"],"而不是进行完整分支的合并":["134.1"],"执行":["134.1","134.3"],"会在目标提交的更改在当前分支上重新创建一个新的提交":["134.1"],"保持了原有提交的":["134.1"],"cherry":["134.2","134.3"],"commit":["134.2"],"来将该修复提交应用到生产分支":["134.2"],"041cd2b":["134.3"],"feat":["134.3"],"pick用法更新":["134.3"],"0cbf613":["134.3"],"更新watch和watcheffect的区别":["134.3"],"e360bfd":["134.3"],"fix":["134.3","137.3"],"修正文案错误":["134.3"],"5772f85":["134.3"],"config":["134.3","135.1"],"更新vitepress依赖版本":["134.3"],"9f1aa0d":["134.3"],"更新this指向相关":["134.3"],"命令":["134.3","136.3"],"后面跟上你想要移植的提交哈希":["134.3"],"之后合并冲突":["134.3"],"merging":["134.3","137.3"],"背景":["135.0"],"初始化git仓库":["135.1"],"当前git":["135.1"],"bash所在目录路径为gitrepo":["135.1"],"输入命令":["135.1"],"init":["135.1"],"会看见本地电脑的目录下会有":["135.1"],"文件夹":["135.1"],"在第一次安装git之后需要初始github的配置信息":["135.1"],"所以接下来要初始化你的github信息":["135.1"],"global":["135.1"],"fetch":["136.1","137.2"],"pull":["136.1"],"master":["136.2"],"dev":["136.2"],"它们的head指针分别指向e和f":["136.2"],"对上述做如下操作":["136.2"],"checkout":["136.2"],"选择or切换到master分支":["136.2"],"远程主机名":["136.3"],"这个命令将某个远程主机的更新全部取回本地":["136.3"],"如果只想取回特定分支的更新":["136.3"],"前面提到":["136.4"],"的过程可以理解为":["136.4"],"下面主要介绍它的两个使用场景":["137.1"],"failed":["137.2","137.3"],"some":["137.2"],"refs":["137.2"],"hint":["137.2"],"updates":["137.2"],"were":["137.2"],"because":["137.2"],"remote":["137.2"],"contains":["137.2"],"work":["137.2"],"have":["137.2"],"locally":["137.2"],"is":["137.2","137.3"],"usually":["137.2"],"caused":["137.2"],"by":["137.2","137.3"],"another":["137.2"],"repository":["137.2"],"pushing":["137.2"],"same":["137.2"],"may":["137.2"],"want":["137.2"],"integrate":["137.2"],"up":["137.3"],"with":["137.3"],"origin":["137.3"],"直接合并feature分支":["137.3"],"merge":["137.3"],"conflict":["137.3"],"automatic":["137.3"],"conflicts":["137.3"],"竟然失败了":["137.3"],"说明我两个分支之前的版本已经不同步了":["137.3"],"需要手动合并冲突":["137.3"],"再提交":["137.3"],"先查看冲突文件":["137.3"],"status":["137.3"],"ahead":["137.3"],"commits":["137.3"],"合并commit":["138.0"],"使用背景":["138.0"],"可以按下":["138.2"],"向下翻看":["138.2"],"oneline":["138.2"],"可以一行展现":["138.2"],"我们使用命令":["138.2"],"rebase":["138.2"],"startpoint":["138.2"],"endpoint":["138.2"],"的意思是":["138.2"],"常用使用场景":["139.1"],"正在进行一些工作":["139.1"],"stash":["139.2","139.3","139.5","139.6","139.7"],"直接保存其实是执行了命令":["139.3"],"show":["139.5","139.6"],"应用某个存储":["139.7"],"命令恢复之前缓存的工作目录":["139.8"],"将缓存堆栈中的对应":["139.8"],"删除所有缓存的stash":["139.10"],"新增的文件":["139.10"]},{"0":["8.0","42.12","50.5","64.49","69.39","78.5","81.1","81.2","87.12","87.13","92.0","97.1","103.7","103.9","110.22","121.1","121.4","131.5"],"1":["0.0","4.0","31.4","32.0","33.1","42.4","47.1","50.5","63.31","64.48","64.49","66.5","69.7","69.11","73.7","74.16","74.21","74.24","78.5","81.6","81.7","81.8","82.0","87.13","87.15","87.17","87.23","89.2","98.0","103.9","103.14","103.15","105.4","110.2","110.3","110.4","110.5","110.6","110.7","110.9","110.10","110.11","110.12","110.13","110.15","110.17","110.18","121.4"],"2":["4.0","9.0","10.0","11.0","12.6","16.5","42.1","54.5","64.27","69.3","73.7","73.21","73.22","74.16","74.21","74.24","75.7","78.12","82.0","87.13","87.15","87.17","88.16","95.3","103.15","105.1","110.1","110.2","110.4","110.6","110.7","110.9","110.10","110.11","110.12","110.13","110.15","110.17","110.18","110.20","110.22","112.2","117.1","121.4"],"3":["2.0","31.6","57.1","63.51","73.15","74.11","74.14","78.11","87.15","87.17","87.36","88.16","102.13","103.6","103.8","110.1","110.2","110.4","110.9","110.10","110.11","110.12","110.13","110.15","110.17","110.18","110.20","110.22","121.4","122.3"],"4":["0.0","8.0","10.0","12.4","54.8","64.25","87.15","88.5","88.9","103.8","103.15","110.2","110.12","110.17","110.18","110.20","110.22","131.8","134.3"],"5":["17.0","102.7","103.8","110.2","110.18","111.5","125.0","131.8"],"6":["17.0","63.18","102.7","111.5","130.2"],"7":["102.7","102.11","111.5"],"8":["20.2","22.0","22.2","32.0","33.1","87.36","102.6","102.12","134.3","137.2"],"9":["102.6"],"10":["81.14","88.3","102.6","123.11"],"11":["10.0","102.6"],"12":["102.7"],"13":["58.1"],"14":["97.5","102.8","137.2"],"15":["75.0"],"16":["42.12","119.13","119.16"],"17":["130.2"],"18":["59.1"],"19":["59.2"],"20":["59.3","69.0","88.3"],"21":["59.4","103.11"],"22":["70.0","134.3"],"23":["134.3"],"25":["71.0"],"30":["102.7"],"35":["89.1"],"43":["102.11"],"46":["134.3"],"47":["102.11"],"49":["69.39","130.2"],"50":["64.25","81.3","81.11","81.12"],"60":["81.5"],"68":["130.2"],"98":["102.8"],"100":["75.1","78.9","81.1","81.3","81.6","81.7","81.8","81.9","81.11","81.12","81.13","137.2"],"123":["58.2","87.21","88.8"],"200":["63.4"],"202":["63.4"],"940":["26.4"],"2000":["102.8"],"2014":["102.8"],"2019":["102.11"],"2024":["134.3"],"10000":["76.0"],"20120620":["102.12"],"var":["0.0","21.0","78.12","88.2","89.1","89.25","89.31","105.5","121.4","121.5","127.6"],"arr":["0.0","87.15","87.16","87.17","88.9","89.28","103.7","110.1","110.3","110.5","110.6","110.7","110.9","110.10","110.11","110.13","110.15","110.17","110.18","110.19","110.20","110.23"],"一个指向数组或列表的起始位置":["2.0"],"通常是最左侧":["2.0"],"另一个指向数组或列表的结束位置":["2.0"],"通常是最右侧":["2.0"],"在两个指针没有相遇之前":["2.0"],"进行如下操作":["2.0"],"比较指针所指向的元素与目标值或特定条件的关系":["2.0"],"根据比较结果":["2.0"],"调整指针的位置":["2.0"],"如果指针所指向的元素满足条件":["2.0"],"可以得到问题的解":["2.0"],"或进行其它操作":["2.0"],"如果指针所指向的元素不满足条件":["2.0"],"根据问题的要求":["2.0"],"将指针向中间移动一步或多步":["2.0"],"继续移动指针":["2.0"],"直到两个指针相遇":["2.0"],"夹逼原则的核心思想是通过双指针的相向移动":["2.0"],"将问题的解空间逐渐缩小":["2.0"],"直到找到满足条件的解或遍历完所有可能的情况":["2.0"],"夹逼原则常用于解决一些查找问题":["2.0"],"比如在有序数组中查找目标值":["2.0"],"找出数组中三个数的和等":["2.0"],"它的优势在于时间复杂度较低":["2.0"],"通常为":["2.0"],"newarr":["3.0","110.14"],"for":["3.0","63.38","78.6","87.18","89.22","97.1","103.13","123.1","137.2"],"let":["3.0","58.2","87.18","88.10","88.15","97.1","102.15","104.6"],"j":["3.0"],"length":["3.0","87.13","89.25","92.0","97.1","101.2","121.3"],"k":["3.0"],"输出":["4.0","89.29"],"解释":["4.0"],"函数应该返回新的长度":["4.0"],"并且原数组":["4.0"],"的前两个元素被修改为":["4.0"],"不需要考虑数组中超出新长度后面的元素":["4.0"],"示例2":["4.0","8.0"],"typescript":["5.0","7.0","9.0","11.0","50.2","57.1","103.16","105.4","123.8","123.10"],"getconcatarr":["5.0"],"number":["5.0","7.0","49.0","51.6","57.1","58.3","76.0","81.14","93.1","106.1","119.3","119.15","123.10"],"void":["5.0","119.7"],"splice":["5.0","50.5"],"sort":["5.0","76.0"],"a":["5.0","32.1","32.5","33.0","34.4","78.12","87.12","87.13","87.18","87.23","88.9","88.11","89.6","89.25","96.0","98.0","102.8","102.11","103.12","103.14","111.3","119.3"],"b":["5.0","75.2","87.12","87.13","87.18","87.23","88.9","88.11","89.25","103.12","119.15"],"return":["5.0","25.2","32.1","32.5","33.0","34.4","44.10","45.1","47.1","63.18","63.33","66.5","69.21","73.7","74.7","78.3","78.5","81.14","88.17","89.9","89.25","89.27","89.31","92.0","103.9","113.4","113.7","113.8","119.13","123.1","125.0"],"如何理解":["6.0"],"首先":["6.0","30.1","32.2","66.11"],"我们需要找到数组中最长的驼峰":["6.0"],"但由于这个驼峰数组长度不确定":["6.0"],"但我们可以利用驼峰的性质":["6.0"],"从中间向两边递减":["6.0"],"从数组中间向两边查找最常的递减序列":["6.0"],"为了确保找到的是最长的递减序列":["6.0"],"可以采用贪心算法":["6.0"],"即只要当前元素大于前一个元素":["6.0"],"就将当前元素加入递减序列":["6.0"],"当找到递减序列结束时":["6.0"],"比较当前递减序列的长度与之前记录的最长递减序列的长度":["6.0"],"插入进去排序后下标为4":["7.0"],"求解":["7.0","11.0"],"先将目标值放在数组中":["7.0"],"进行去重和排序":["7.0"],"再进行判断下标":["7.0"],"const":["7.0","11.0","42.10","44.1","46.3","53.5","53.16","54.7","57.1","57.3","58.3","66.7","66.10","67.18","67.19","67.33","67.54","67.55","69.13","73.10","76.0","87.4","87.6","87.13","87.15","87.16","87.24","87.25","88.9","88.10","88.14","88.20","88.21","89.5","89.10","90.0","97.1","103.16","104.6","105.2","105.4","110.1","110.3","110.5","110.6","110.7","110.17","110.18","110.19","110.20","123.5","123.9"],"searchinsert":["7.0"],"push":["7.0","67.12","67.23","101.2","113.6","137.3","140.2"],"newnum":["7.0","63.37"],"array":["7.0","32.4","63.44","81.14","89.2","107.1"],"from":["7.0","42.5","42.10","67.19","67.54","67.55","69.13","73.10","73.23"],"new":["7.0","44.9","63.3","63.37","75.5","88.12","89.6","90.0","103.14","105.1","110.21","113.3","127.6"],"set":["7.0","14.4","15.5","63.32","63.44","78.8","97.0"],"等等":["9.0"],"主要是通过使用闭包函数来保存变量":["9.0"],"防止被全局篡改":["9.0"],"并且保留计数器值":["9.0"],"param":["9.0"],"右侧数之和":["10.0"],"str2":["11.0"],"loveleetcode":["11.0"],"firstuniqchar":["11.0"],"的过程中的资料梳理":["12.1"],"hairui219":["12.2"],"learning":["12.2"],"data":["12.3","13.0","17.0","21.0","26.1","26.2","26.3","30.0","42.7","54.5","67.57","73.9"],"binding":["12.3","13.0","17.0"],"条件判断":["12.3","13.0"],"if":["12.3","13.0","17.0","58.3","81.14","104.6","123.1","123.2"],"js的使用方法":["12.4"],"您知道控制台命令如何使用":["12.4"],"如果您需要对以上某方面内容入门":["12.4"],"之后我改做应用和手机游戏的后端开发":["12.5"],"主要使用php":["12.5"],"在这几年的工作经验中":["12.5"],"过程并不向用户开放":["12.6"],"起到了隐蔽后端服务器的效果":["12.6"],"业":["12.7"],"zhi":["12.7"],"来获取元素和填入代码之类的工作":["12.8"],"但学会基本的语法之后":["12.8"],"我仍然是对于具体如何操作dom来实现具体的功能完全没有头绪":["12.8"],"这是一种什么感觉呢":["12.8"],"就像是在读大学时学习c":["12.8"],"c":["12.8","63.30","87.13","88.7","88.17","103.12","119.14"],"java语言":["12.8"],"我们可以手工的去实现一些基本的算法或数据结构":["12.8"],"但是学完了之后":["12.8"],"我们可以直接使用c":["12.8"],"或java制作基于windows的客户端程序了吗":["12.8"],"完全重构整个网站是可以接受的":["12.9"],"另外":["12.9","14.1","53.12","69.26"],"我之前只是误打误撞的制作出来一个":["12.9"],"我自认为是一个比较追求新技术的人":["12.10"],"但是当我测试angular":["12.10"],"2时":["12.10"],"发现我电脑上安装的chrome":["12.10"],"v44版本无法运行":["12.10"],"当我下载更新到v47后才能正常运行":["12.10"],"官网介绍v46以上才支持es6":["12.10"],"许可协议进行许可":["12.11"],"访问":["12.11"],"http":["12.11"],"creativecommons":["12.11"],"org":["12.11"],"licenses":["12.11"],"by":["12.11"],"nc":["12.11"],"数据绑定":["13.0","67.2"],"angularjs":["14.0"],"前端js框架":["14.0"],"angular":["14.0","21.0","21.2"],"material":["14.0"],"前端界面框架":["14.0"],"59美金":["14.1"],"我个人认为还是非常超值的":["14.1"],"对比工作效率的提升而言":["14.1"],"出于个人习惯":["14.1"],"support":["14.2"],"由于国内网络原因":["14.2"],"chrome浏览器必须要连接至国外路由才能下载":["14.2"],"另外推荐您点击以下链接进行下载":["14.2"],"通过官网可以直接下载node":["14.3"],"js的安装包":["14.3"],"可选":["14.4"],"将npm默认设置从淘宝服务器上获取数据":["14.4"],"config":["14.4"],"直接通过bower在项目内进行下载使用":["14.5"],"然后一步一步的将各个需要的内容填充进来":["15.0"],"这样我们会对使用angularjs开发有一个更好的了解":["15.0"],"在webstorm中":["15.0"],"js":["15.1","20.3","24.1","26.1","42.7","50.2","88.23"],"css":["15.1","33.1","62.0","67.2","74.20","81.9","81.12","81.13","112.0","133.1"],"img":["15.1","64.34"],"三个目录":["15.1"],"目录下的内容":["15.2"],"既是我们不期望用户通过网络链接直接可以访问到的内容":["15.2"],"会有哪些内容呢":["15.2"],"产品的文档":["15.2"],"这样可以更好的理解配置生成的文件的内容":["15.3"],"在左下角点击":["15.4"],"does":["15.5"],"this":["15.5","54.8","63.33","67.12","75.9","88.22","106.4","113.1","113.7","115.4"],"package":["15.5"],"expose":["15.5"],"项目的关键字":["15.5"],"keywords":["15.5"],"作者和联系方式":["15.5"],"authors":["15.5"],"harry":["15.5","24.0","25.0","25.3"],"andtoo":["15.5"],"net":["15.5"],"授权方式":["15.5"],"如果您期望这是一个私人项目":["15.5"],"可以输入no":["15.5"],"license":["15.5"],"mit":["15.5"],"项目主页":["15.5"],"homepage":["15.5"],"是否要把当前已经安装的模块设置为项目的依赖项":["15.5"],"文件":["15.6"],"告诉":["15.6"],"bower":["15.7"],"并配置好了bower工具":["16.0"],"validate":["16.1"],"against":["16.1"],"file":["16.2","87.8","134.3","137.3"],"然后输入":["16.2"],"点击":["16.2","36.0"],"ok":["16.2","51.7"],"webstorm会自动帮助我们加入基本的html内容":["16.2"],"js是完整的版本":["16.3"],"1m大小":["16.3"],"如下所示":["16.4"],"html":["16.4","20.1","21.5","22.1","23.0","26.1","33.0","55.2","67.2"],"doctype":["16.4"],"图3":["16.5"],"运行index":["16.5"],"如果浏览器没有自动打开":["16.5"],"条件判断语句":["17.0"],"show":["17.0"],"hide":["17.0"],"上方的":["18.0"],"和":["18.0","20.3","50.6","58.2","63.28","67.2","67.17","67.21","69.1","69.11","74.17","78.6","78.8","89.5","104.7","106.0","113.1"],"既是angularjs的基本表达式":["18.0"],"如果angularjs被成功的引入":["18.0"],"那么最终的页面将不会显示双括号":["18.0"],"请注意这里的使用用法":["19.1"],"view":["19.1","54.1","54.3","66.3","67.16"],"part":["19.1","33.0"],"外部有单引号":["19.1"],"div":["19.1","21.5","45.1","50.4","67.28","67.29","67.42","67.43","67.45","67.47","69.21","78.3","78.5","82.0","98.0"],"views":["19.1"],"还有":["19.2"],"onload":["19.2"],"需要将":["19.3"],"script":["19.3","69.49","73.16"],"的":["19.3","21.3","26.1","51.3","66.3","73.22","73.24","108.0","127.2","131.4"],"type":["19.3","23.0","27.2","27.3","32.5","32.6","32.7","49.0","64.32","66.14","67.49","113.3","113.5","119.4","119.13","119.16","123.8","123.10"],"初始化":["20.0","109.4"],"index":["20.1","26.1","87.18","101.1"],"中引入":["20.1"],"zh":["20.2","102.4"],"head":["20.2","22.0","22.2","26.1","32.0","88.5","127.6"],"meta":["20.2","22.0","22.2","32.0"],"charset":["20.2","22.0","22.2","32.0"],"utf":["20.2","22.0","22.2","32.0"],"网页的标题":["20.2","22.0"],"我们在这里使用了angularjs的基本表达式":["20.2","22.0"],"title":["20.2","22.0","22.2","32.0","33.1","88.22","89.1"],"学习angularjs":["20.2","32.0","33.1"],"module":["21.0","21.2"],"firstctrl":["21.0","27.0","33.0"],"function":["21.0","25.3","26.1","26.2","27.0","32.1","32.4","33.0","34.4","35.0","45.1","50.2","63.32","88.15","95.4","105.6","106.4","107.4","111.3","113.7","119.7","119.14","121.2"],"scope":["21.0","24.1","25.3","26.1","26.2","32.3","32.4","32.5","33.0","34.5"],"message":["21.0","21.5","119.12"],"angularjs会解析参数的名称":["21.3"],"并转化为对应的对象传入":["21.3"],"这里使用的":["21.3"],"用于将":["21.3"],"ng":["21.3","26.3","29.1","32.6","32.7"],"controller":["21.3","26.1","27.0","32.4","33.0"],"javascript":["21.4","23.2","24.1","26.1","30.3","32.1","32.4","35.0","42.5","46.3","52.5","53.5","53.13","54.1","54.8","55.2","57.3","64.43","64.45","66.7","66.10","66.13","67.22","67.23","67.33","67.55","76.0","87.6","87.16","87.18","87.24","87.25","87.31","88.14","88.15","88.20","88.23","95.4","102.3","102.10","104.6","106.4","110.1","110.3","110.5","110.6","110.7","110.18","110.19","110.23","112.0","121.4","121.5","127.3"],"h1":["21.4","69.5"],"hello":["21.5","63.37","67.42","87.2","87.3","87.4","87.5","87.34","88.7","88.21","89.28","123.11"],"onclick":["22.1","24.1","47.1","78.3","78.5"],"alert":["22.1","98.0"],"将以下代码放置在firstctrl中":["23.0"],"input":["23.0","32.6","32.7","51.6","64.34","66.4"],"checkbox":["23.0"],"model":["23.0","27.1","32.6","32.7","67.30","106.4"],"通过复选框来控制文字是否显示":["23.0"],"的工作模式与":["23.1"],"不一样":["23.1"],"list":["24.0","25.0","25.3","31.2","67.37","67.38"],"name":["24.0","25.0","25.1","25.3","27.0","30.0","32.3","51.4","63.32","66.4","67.46","88.14","88.20","89.1","123.8","130.2","135.1"],"tom":["24.0","25.0","113.6"],"jerry":["24.0","113.6"],"下面":["24.0"],"app":["24.1","26.1","30.3","32.0","32.1","32.4","33.2","45.1","69.38","134.3"],"中":["24.1","50.0","52.0","67.2","123.12","136.2"],"对":["24.1","129.0"],"函数进行一些改造":["24.1"],"让它能够获取传入的数据":["24.1"],"json":["25.0","55.4","69.60","76.0"],"将对象转化为json文本输出":["25.0"],"orderby":["25.1"],"text":["25.2","32.6","32.7","67.37","78.5","105.3"],"split":["25.2","97.1"],"searchtext":["25.3"],"h":["25.4","89.28"],"搜索":["25.4"],"且":["25.4"],"为如下代码":["26.1"],"deleted":["26.1"],"false":["26.1","27.3","36.0","50.5","69.25","89.25","123.2"],"important":["26.1"],"并在":["26.1"],"部分将css文件引入":["26.1"],"style":["26.2","33.1","91.0"],"class":["26.3","54.8","63.17","83.0","127.3"],"5s":["26.4","81.13"],"animate":["26.4","104.6"],"color":["26.4","27.0","27.2","27.3","81.1","81.3","81.6","81.8","81.9"],"red":["26.4","26.5","27.0","73.13"],"font":["26.4","81.1"],"size":["26.4","64.28","81.1"],"styletext为样式为":["26.5"],"类型的文本":["26.5"],"通过样式传入":["26.5"],"我们可以直接向元素传入对应的样式":["26.5"],"实现样式动态化的效果":["26.5"],"一个比较主要的用途是向元素传入动态的背景图片":["26.5"],"例子如下":["26.5"],"以下两个示例来自于stackoverflow":["26.5"],"colors":["27.0"],"黑色":["27.0","27.3"],"black":["27.0","27.2","27.3"],"白色":["27.0","27.2","27.3"],"white":["27.0","27.2","27.3"],"红色":["27.0","69.39"],"colorchosen":["27.1"],"options":["27.1"],"暗色":["27.2","27.3"],"亮色":["27.3"],"美国united":["27.4"],"states":["27.4"],"uk":["27.4"],"英国united":["27.4"],"kingdom":["27.4"],"gr":["27.4"],"德国germany":["27.4"],"country":["27.4"],"相信大家对于angularjs已经有了基本的了解":["28.0"],"但是我感觉此翻译很难让读者明确其具体的含义和用法":["29.0"],"因此":["29.0"],"我在本书中直接应用了英文名":["29.0"],"angularjs的directive":["29.0"],"从实际用途的理解":["29.0"],"在第四章中我们学习的":["29.1"],"目的是对界面操作的抽象与解耦":["29.2"],"e":["30.0","30.4","66.4","88.7","89.28","103.12","137.2"],"template":["30.0","32.6","32.7","51.7","52.2","67.28","67.29","67.31","67.43","67.44","67.45","69.9","74.14","74.19"],"p":["30.0","47.1","50.3","66.5","67.29","78.3","78.5","88.6","89.6","119.5"],"姓名":["30.0"],"性别":["30.0","30.1"],"sex":["30.0","30.1","32.6"],"我们将这段代码分拆开逐步讲解":["30.1"],"声明一个directive的基本结构如下":["30.1"],"html对应的标签":["30.2"],"将被替换成对应的内容":["30.2"],"则可以让angularjs用替换的模式应用directive":["30.3"],"directive":["30.3","32.1","33.2","34.4","35.0"],"people":["30.3","31.5","32.1","123.9"],"值":["30.4","74.12"],"对应类型":["30.4"],"使用方法":["30.4"],"并且通过":["31.0"],"语法":["31.1"],"也就是从第二个单词开始":["31.1"],"peoplelist":["31.2"],"因为html对大小写不敏感":["31.3"],"并进行一下两个方面的处理":["31.4"],"去除字段的":["31.4"],"x":["31.4","32.0","33.1","74.11","88.6","119.3","122.3","122.5"],"示例":["31.5","78.12","80.0","89.1"],"减号":["31.5"],"黄色背景部分代表不符合标准":["31.6"],"图5":["31.6"],"html5验证结果":["31.6"],"无data前缀":["31.6"],"directive提供了非常简单的定义一个scope的功能":["32.1"],"restrict":["32.1","32.5","33.0","34.4"],"info":["32.1","32.2","32.5","53.5","75.6"],"在firstctrl中加入如下代码":["32.3"],"anotherperson":["32.3"],"张三":["32.3"],"注意":["32.7","53.5","87.12","109.2"],"这里没有加入下方的value模型":["32.7"],"一个用于输入文字的输入框":["32.7"],"绑定到value上":["32.7"],"value":["32.7","51.5","58.3","63.32","66.7","67.54","73.9","89.9","123.2","127.6"],"br":["32.7"],"提交的按钮":["32.7"],"绑定上方scope的btnclick方法":["32.7"],"注意传入参数的方式和html中具体使用的方式":["32.7"],"link":["33.1","34.5"],"href":["33.1"],"rel":["33.1"],"stylesheet":["33.1"],"formdirective":["33.2","34.4","35.0"],"stringify":["34.0","63.45"],"带有三个参数":["34.0"],"为了更好的了解link函数三个参数的意义":["34.0"],"函数中加上了日志输出的":["34.0"],"被转义成json的文本中很难获取任何实质的信息":["34.1"],"实现了jquery中的大部分常用功能":["34.2"],"也就是":["34.2"],"我们可以在获取了":["34.2"],"参数后":["34.2"],"调用jquery常用的语法":["34.2"],"install":["34.3","102.2"],"attrs":["34.5"],"children":["34.5","42.10"],"bind":["34.5","63.26","67.27"],"这是如何实现的呢":["35.0"],"这就要应用到directive的":["35.0"],"属性":["35.0","64.7","64.39","112.4"],"tab列表中项目被选中":["36.0"],"的处理函数":["36.0"],"pane":["36.0"],"foreach":["36.0","89.13","89.18","103.13"],"selected":["36.0"],"初始化页面时":["36.0"],"但是我建议各位读者好好的掌握本章的内容":["37.0"],"一个html":["40.1"],"返回所有数据":["40.1"],"减少http请求":["40.1"],"现在统一到服务端node去做":["40.2"],"尤其是遇到高并发访问的情况":["40.2"],"在vue中我们组合不同功能的方式是通过composition":["42.1"],"开放是针对组件通信来说":["42.2"],"指的是不同组件可以通过props":["42.2"],"单向数据流":["42.2"],"进行数据交互":["42.2"],"componentwillmount":["42.3","69.26"],"react17版本中被移除":["42.3"],"render":["42.3","52.2","55.4","66.5","66.6","69.21"],"componentdidmount":["42.3","66.6"],"更新":["42.3","54.8"],"class的区别":["42.4"],"import":["42.5","67.54","69.13","73.23","131.7"],"的警告":["42.6"],"关于使用废弃的":["42.6"],"在页面重新加载时去获取redux中的数据":["42.7"],"使用webpack构建的项目":["42.7"],"需要通过webpack":["42.8"],"不在react中使用jsx会更加方便":["42.9"],"每个jsx元素只是调用":["42.9"],"errorboundary":["42.10"],"haserror":["42.10"],"sethaserror":["42.10"],"需要使用babel去转换为浏览器识别的js":["42.11"],"所以在":["42.12"],"受控组件更合适":["42.13"],"数据驱动是react的核心":["42.13"],"里的代码会执行":["43.0"],"配置订阅":["43.1"],"手动更改浏览器的url等等":["43.1"],"并在渲染前进行调整":["43.2"],"防止闪烁":["43.2"],"在某些情况下":["43.2"],"可能会影响应用的性能":["43.3"],"只有当确实需要同步操作dom的时候才会使用它":["43.3"],"可以使我们的代码具有更好的可读性和可维护性":["44.0"],"state":["44.1","44.10","53.5"],"reducer里面包含了两个参数":["44.3"],"state的初始值":["44.4"],"用于初始化":["44.5"],"initialarg":["44.7"],"处理完成之后返回新的状态":["44.8"],"newstate":["44.8"],"reducer":["44.8","44.10"],"只有被dispatch的时候才会被调用":["44.8"],"decrement":["44.9"],"default":["44.9","52.5","66.13","67.54","69.13","131.7"],"throw":["44.9","127.4"],"error":["44.9","127.4"],"是一个根据不同的":["44.9"],"tsx":["44.10","73.23"],"找到需要操作的商品":["44.10"],"item":["44.10"],"find":["44.10"],"switch":["44.10"],"case":["44.10"],"filter":["44.10","76.0"],"利用dom":["46.0"],"document":["46.1","97.4"],"于是每次数据微小的变化都会引起dom的重新渲染":["46.2"],"vue":["46.3","51.7","55.4","67.19","67.27","67.31","67.44","67.45","67.54","67.57","69.7","69.9","78.8","134.3"],"转化后":["46.3"],"并且虚拟dom感受到变化的时候是通过局部更新而非整体":["46.5"],"从而减少非常多的dom操作":["46.5"],"并且模拟了事件冒泡和捕获的过程":["46.6"],"采取事件代理批量更新等方法":["46.6"],"高阶组件通常用于组件之间的复用逻辑":["47.0"],"例如状态管理":["47.0"],"数据获取":["47.0"],"访问控制等等":["47.0"],"hoc一个常见的示例就是react":["47.0"],"button":["47.1","51.5","69.5","69.19","78.3","78.5"],"useeffect":["47.1","73.10"],"返回的是一个全局可以访问和修改的":["47.2"],"ref":["47.2","50.4","69.1"],"对象":["47.2","75.12","122.4"],"usestate用于保存和更新组件的状态":["47.2"],"matchpattern":["49.0"],"任何名称与":["49.0"],"exclude":["49.0"],"匹配的组件都不会被缓存":["49.0"],"最多可以缓存多少组件实例":["49.0"],"max":["49.0"],"string":["49.0","58.3","106.1","119.7","119.16","122.2","122.3","123.9"],"regexp":["49.0","107.1","119.14"],"keepalive支持传入三个可选参数":["49.0"],"分别是":["49.0"],"keepalive":["49.0"],"默认会缓存内部的所有组件实例":["49.0"],"但是可以通过":["49.0"],"来定制该行为":["49.0"],"支持传入":["49.0"],"字符串":["49.0","69.60","76.0","95.2"],"数组或者正则表达式":["49.0"],"的实现原理基于浏览器的异步任务队列和微任务队列":["50.0"],"默认使用微任务":["50.0"],"实际上就启动执行了该进程的主执行线程":["50.1"],"线程则相当于车间里的工人":["50.1"],"一个车间会有多个工人在工作":["50.1"],"所以一个进程可以包含多个线程":["50.1"],"浏览器是多线程的":["50.1"],"所以它可以一次能够处理多个事件":["50.1"],"比如渲染页面":["50.1"],"脚本执行":["50.1"],"事件处理等等":["50.1"],"js则是单线程的":["50.1"],"浏览器只给js分配了一个线程":["50.1"],"执行栈与任务队列":["50.1"],"observer":["50.2"],"scheduler":["50.2"],"export":["50.2","52.5","66.13","67.54","69.13","88.23","131.7"],"queuewatcher":["50.2"],"watcher":["50.2"],"resolve":["50.3","50.5","103.14"],"执行回调函数":["50.3"],"then":["50.3","73.4","103.14"],"flushcallback":["50.3"],"ios":["50.3","125.0"],"中可能会出现一个回调被推入微任务队列":["50.3"],"但是队列没有刷新的情况":["50.3"],"所以用一个空的计时器来强制刷新任务队列":["50.3"],"isios":["50.3"],"noop":["50.3"],"true":["50.3","67.51","89.9","89.25","90.0","121.1"],"else":["50.3","50.5","78.12","81.14","89.7"],"isie":["50.3"],"tostring":["50.3","88.8","119.13","127.6"],"object":["50.3","89.2","89.4","113.9"],"mutationobserverconstructor":["50.3"],"不支持":["50.3"],"的话":["50.3"],"在支持mutationobserver的非":["50.3"],"ie":["50.3"],"环境下":["50.3"],"如":["50.3","67.36","69.26","69.54","82.0","102.8"],"flushindex":["50.5"],"currentpreflushparentjob":["50.5"],"可以入队就添加到主任务队列":["50.5"],"id":["50.5","69.9","130.2"],"否则就插入到头部":["50.5"],"findinsertionindex":["50.5"],"创建微任务":["50.5"],"这个方法负责尝试创建微任务":["50.5"],"等待任务队列执行":["50.5"],"是否正在执行":["50.5"],"isflushpending":["50.5"],"是否正在等待执行":["50.5"],"微任务创建器":["50.5"],"当前任务":["50.5"],"当前没有微任务":["50.5"],"简写":["51.1"],"这里的":["51.1"],"就是一个参数":["51.1"],"它告诉":["51.1"],"指令将表达式":["51.1"],"的值绑定到元素的":["51.1"],"attribute上":["51.1"],"在简写中":["51.1"],"参数前的一切":["51.1"],"都会被忽略为一个":["51.1"],"字符":["51.1"],"另一个例子是":["51.1"],"指令":["51.1","88.12"],"它将监听dom事件":["51.1"],"惰性":["51.3"],"如果初次渲染时条件值为false":["51.3"],"那么它不会做任何事":["51.3"],"条件区块只有当条件首次变为true才会被渲染":["51.3"],"是基于表达式的真假性":["51.3"],"来条件性地渲染元素或者模版片段":["51.3"],"的默认方式是尝试就地更新元素而不移动它们":["51.4"],"要强制其重新排序元素":["51.4"],"则需要使用特殊attribute":["51.4"],"来提供一个排序提示":["51.4"],"src":["51.5"],"imagesrc":["51.5"],"动态":["51.5"],"名":["51.5"],"key":["51.5","63.32","89.5","89.9","103.10","123.1"],"缩写":["51.5"],"缩写形式的动态":["51.5"],"事件而不是":["51.6"],"将输入合法字符串转为数字":["51.6"],"方法接收原生事件作为唯一参数":["51.7"],"如果使用内联声明":["51.7"],"生命可以访问一个特殊的":["51.7"],"变量":["51.7","95.2","119.17"],"click":["51.7","67.40","69.5","95.5"],"handle":["51.7"],"还支持绑定不带参数的事件":["51.7"],"监听器的对象":["51.7"],"请注意":["51.7"],"当使用对象语法时":["51.7"],"不支持任何修饰符":["51.7"],"destroyed":["52.0"],"而在":["52.0"],"在":["52.0","67.2","69.3","87.21","134.2"],"组件挂载之前":["52.1"],"mounted":["52.1"],"组件挂载到实例上去之后":["52.1"],"beforeupdate":["52.1","52.4"],"判断是否存在":["52.2"],"选项":["52.2","53.9"],"若不存在则停止编译":["52.2"],"直到调用":["52.2"],"mount":["52.2"],"才会继续编译":["52.2"],"优先级":["52.2"],"outerhtml":["52.2"],"是在页面":["52.3"],"节点渲染完毕之后就立刻执行的":["52.3"],"触发时机上":["52.3"],"update":["52.4","119.17"],"被替换为":["52.4"],"onbeforeupdate":["52.4"],"onupdate":["52.4"],"beforedestroy":["52.4"],"函数需要返回一个对象":["52.5"],"用于暴露组件状态和方法给模版使用":["52.5"],"因此也提高了代码的可读性和组件的封装性":["52.5"],"透传":["52.5"],"attributes":["52.5"],"非响应式对象":["52.5"],"等价于":["52.5"],"console":["52.5","53.8","67.54","72.26","78.3","78.5","87.5","87.7","87.9","87.20","87.29","89.4","89.10","89.29","89.31","97.4","98.0","105.6","110.14","111.3","111.5"],"log":["52.5","67.54","78.3","78.5","87.7","87.9","87.20","87.29","87.30","89.4","89.29","97.4","103.15","110.14","111.3","111.5","121.1"],"插槽":["52.5"],"触发事件":["52.5"],"函数":["52.5","63.38","78.2","103.14","107.1"],"vue侦听器":["53.0"],"执行的回调函数":["53.2"],"返回一个值":["53.3"],"该回调函数会在副作用下一次重新执行前调用":["53.4"],"可以用来清除无效的副作用":["53.4"],"当直接侦听一个响应式对象时":["53.5"],"侦听器会自动启用深层模式":["53.5"],"reactive":["53.5"],"并在依赖更改时重新执行":["53.6"],"第二个参数是watcheffect的属性":["53.7"],"objdata":["53.8"],"str":["53.8","63.37","87.2","87.4","87.5","87.6","89.28","89.29"],"ontrigger":["53.9"],"功能和":["53.9"],"watcheffect":["53.10","53.15"],"当不再需要此侦听器时":["53.10"],"只追踪明确侦听的数据源":["53.12"],"它不会追踪任何在回调中访问到的东西":["53.12"],"post":["53.13","63.40"],"选项即可":["53.13"],"source":["53.13","122.4"],"返回的函数":["53.15"],"需要异步请求得到的数据":["53.16"],"当我们用":["54.1"],"也会更新":["54.2"],"例如在用户填写表单时":["54.2"],"视图层":["54.3"],"还有两个主要部分组成":["54.4"],"监听器":["54.4"],"同时对模版执行编译":["54.5"],"找到其中动态绑定的数据":["54.5"],"从":["54.5"],"中获取数据并初始化视图":["54.5"],"这个过程发生在解析器":["54.5"],"选项做响应式处理":["54.6"],"observe":["54.6"],"代理":["54.6"],"到":["54.6"],"vm":["54.6","54.8"],"上":["54.6","69.11","105.5"],"childnodes":["54.7"],"对应的dep中":["54.8"],"当":["54.8"],"setter":["54.8"],"触发时":["54.8"],"便可通过对应":["54.8"],"通知管理所有":["54.8"],"负责更新视图":["54.8"],"constructor":["54.8"],"updater":["54.8"],"在单页面应用中":["55.2"],"所有有必要的代码":["55.2"],"之后解析":["55.3"],"生成":["55.3"],"fcp":["55.3"],"资源加载下来了":["55.3"],"首次的内容绘制":["55.3"],"有一个大结构了":["55.3"],"queryselector":["55.4"],"header":["55.4","64.12","67.13","78.10"],"同构":["55.4"],"同构渲染就是一套代码多端使用":["55.4"],"现在有一些框架":["55.4"],"next":["55.4","127.6"],"nuxt":["55.4"],"类似于渲染就是":["55.4"],"server":["55.4"],"getsum":["57.1"],"08":["57.2"],"到被加载的那个模块里面去取值":["57.3"],"输出的是对象的拷贝":["57.3"],"在引入的模块中的变化影响不到这个值":["57.3"],"若文件引用的模块值改变":["57.3"],"引入的模块值不会改变":["57.3"],"而":["57.3","58.2","64.50","69.7","87.22"],"引入的模块值会改变":["57.3"],"用法不同":["57.3"],"类型是可以的":["58.2"],"unknown类型赋值给除了":["58.2"],"类型不会报错":["58.2"],"其它都会报错":["58.2"],"known":["58.2"],"known1":["58.2"],"boolean":["58.2","75.8","107.1","122.4"],"fun":["58.3"],"typeof":["58.3","119.10","119.16"],"️":["59.1"],"更新了面试相关的javascript相关":["59.2"],"的区别请简述":["61.7"],"跨平台的语言":["63.1"],"脚本语言":["63.1"],"解释性语言":["63.1"],"来创建该对象":["63.3"],"设置回调函数":["63.3"],"在发送请求之前":["63.3"],"需要设置一个回调函数来处理服务器响应":["63.3"],"onreadystatechange":["63.3"],"属性来监听状态变化":["63.3"],"并在状态变化时触发回调函数":["63.3"],"打开和发送请求":["63.3"],"open":["63.3","90.0"],"方法来指定请求的类型":["63.3"],"表示服务器已经成功接受请求":["63.4"],"并返回客户端所请求的结果":["63.4"],"表示服务器已经接受了请求":["63.4"],"但是还没有处理":["63.4"],"就会形成闭包":["63.6"],"别的函数可能误用这些变量":["63.7"],"造成全局对象过于庞大":["63.7"],"影响访问速度":["63.7"],"因为变量的取值是需要从原型链上遍历的":["63.7"],"除了每次使用变量都是用":["63.7"],"会造成内存泄漏":["63.8"],"details":["63.8","64.48","137.2"],"什么是内存泄漏":["63.8"],"内存泄漏":["63.8"],"memory":["63.8"],"leak":["63.8"],"是指程序中已经不再使用的内存没有被及时释放":["63.8"],"导致系统的可用内存逐渐减少":["63.8"],"就可以管理某一些类型的所有事件":["63.9"],"js高级程序设计":["63.9"],"提高性能":["63.10"],"减少内存空间":["63.10"],"每个函数都是对象":["63.10"],"对象会占用内存":["63.10"],"对象越多":["63.10"],"内存占用率越大":["63.10"],"可以返回事件的目标节点":["63.11"],"我们称为事件源":["63.11"],"捕获阶段":["63.12"],"从window对象传导到目标节点":["63.12"],"生命周期":["63.13"],"cookie可以设置过期时间":["63.13"],"可以使会话级的":["63.13"],"浏览器关闭时失效":["63.13"],"也可以是持久性的":["63.13"],"cookie还可以设置域名和路径":["63.13"],"用于控制其在哪些请求中发送":["63.13"],"本地存储分为两种":["63.13"],"newkey":["63.16"],"newvalue":["63.16"],"name1":["63.16","123.9"],"操作起来更方便":["63.17"],"简化了过程":["63.17"],"js本身事没有":["63.17"],"也就是实例":["63.18"],"普通函数的返回值由":["63.18"],"决定":["63.18"],"构造函数的函数名与类名相同":["63.18"],"引申":["63.18"],"构造函数在被":["63.18"],"的过程中":["63.18"],"发生了什么":["63.18"],"解决问题":["63.20","131.5"],"await":["63.21"],"函数前必须加一个":["63.21"],"请求参数的限制是来源与浏览器或":["63.22"],"web":["63.22","69.38"],"服务器":["63.22"],"浏览器或者":["63.22"],"服务器限制了":["63.22"],"请求":["63.23","63.40","75.6"],"一般是做查询操作":["63.23"],"的交互是通过":["63.24"],"事件驱动":["63.24","117.1"],"addeventlistener":["63.25"],"scrollheight":["63.27"],"里的方法":["63.28"],"clientx":["63.28"],"clienty":["63.28"],"javascript的解释器会消耗完系统中所有可用的内存":["63.30"],"造成系统崩溃":["63.30"],"javascript不像c":["63.30"],"它有一套自己的垃圾回收机制":["63.30"],"garbage":["63.30"],"这种方法不太常见":["63.31"],"引用计数法的意思是每个值被引用的次数":["63.31"],"当声明了一个变量":["63.31"],"并用一个引用类型的值赋值给改变量":["63.31"],"则这个值的引用次数就为1":["63.31"],"相反的":["63.31"],"如果包含了对这个值引用的变量":["63.31"],"又取得了另外一个值":["63.31"],"则在原先的引用值的引用次数":["63.31"],"减":["63.31"],"当这个值的引用次数为":["63.31"],"newarg":["63.33"],"concat":["63.33"],"www":["63.35"],"phpernote":["63.35"],"com":["63.35"],"uploadfiles":["63.35","63.36"],"editor":["63.35","63.36"],"201107240502201179":["63.36"],"jpg":["63.36"],"但是不能实现例如包装对象":["63.37"],"对象的克隆":["63.37"],"包装对象":["63.37"],"num":["63.37","75.8","123.10"],"空对象":["63.37"],"剩余部分作为右侧子串":["63.38"],"preresult":["63.38"],"对右侧子串进行全排列":["63.38"],"递归调用":["63.38"],"i":["63.38","92.0","97.1"],"get":["63.40","89.5","89.8","89.16","90.0"],"所谓的同源":["63.41"],"指的是协议":["63.41"],"margin":["63.42","64.5","64.51","73.2","74.14","81.10","81.11","81.12","81.14"],"left":["63.42","81.11"],"top":["63.42","73.15","81.5","81.11","81.12","109.5"],"合并成":["63.42"],"或者是指向该函数所属的对象":["63.43"],"全局this":["63.43"],"结构":["63.44"],"不仅适用于数组还适用于对象":["63.45"],"也就是说会包括那些在原型链上的属性":["63.46"],"prototype":["63.47","106.4","113.3","113.4"],"咱两在一起上班":["63.48"],"到吃饭时间了":["63.48"],"响应":["63.50"],"的模式":["63.50"],"无状态保存":["63.50"],"无链接":["63.50"],"目的是减少文件下载体积":["63.51"],"使用":["63.51","67.15","69.32","98.0","134.0"],"cdn":["63.51"],"之后使用的时候从缓存中调用":["63.52"],"懒加载是延迟加载":["63.52"],"xss攻击与csrf攻击":["63.54"],"png":["64.1"],"可以在文件大小和图像质量之间取得平衡":["64.2"],"优点":["64.2","64.3","64.4"],"简单图形和带有透明度的图像":["64.3"],"支持动画":["64.4"],"外边距":["64.5","73.2"],"组成":["64.5","73.2"],"设置元素的宽高只是设置了内容区域的宽高":["64.5","73.2"],"盒子真正的宽高应该是":["64.5","73.2"],"需要播放的视频地址":["64.9","64.10"],"width":["64.9","81.9","81.11","81.12","81.13","91.0"],"视频区域的宽度":["64.9"],"height":["64.9","81.6","81.9","81.12","81.13","91.0"],"属性名称":["64.10"],"功能":["64.10","64.16","112.4"],"表单元素":["64.11"],"页面头部":["64.12"],"main":["64.12"],"页面主要内容":["64.12"],"footer":["64.12"],"页面底部":["64.12"],"模糊半径":["64.14"],"阴影尺寸":["64.14"],"阴影颜色":["64.14"],"内":["64.14"],"外部阴影":["64.14"],"背景图片尺寸":["64.15"],"origin":["64.15","64.18","114.0","136.4"],"linear":["64.16","73.13","81.5"],"定义如何换行":["64.17"],"wrap":["64.17"],"倾斜":["64.18"],"可以更改元素转换的位置":["64.18"],"改变":["64.18"],"xyz":["64.18"],"proprety":["64.19"],"过渡属性名":["64.19"],"keyframes":["64.20","81.2","81.4"],"动画名称":["64.20"],"duration":["64.20"],"属性是对ie6的兼容":["64.21"],"兼容性高":["64.21"],"但是设置":["64.21"],"绝对定位":["64.22"],"脱离文档流":["64.22"],"相对于父级定位":["64.22"],"并且子元素不能设置浮动":["64.24"],"float":["64.24"],"否则居中失效":["64.24"],"translatey":["64.25"],"不知道父元素高度":["64.25"],"子绝对定位父相对定位":["64.25"],"子元素":["64.25"],"父元素设置display":["64.26"],"table":["64.26"],"cell":["64.26"],"vertical":["64.26"],"align":["64.26"],"middle":["64.26","73.15"],"子元素设置margin":["64.26"],"自身浮动法":["64.27"],"左栏左浮动":["64.27"],"右栏右浮动":["64.27"],"adjust":["64.28"],"hover":["64.30","82.0"],"active":["64.30","82.0"],"css2伪类选择器":["64.30"],"结构伪类选择器":["64.30"],"nth":["64.30"],"child":["64.30","67.37","67.42","67.46","67.47","73.7","113.3","113.5"],"伪元素选择器":["64.31","82.0"],"position":["64.32","73.15","81.11","81.12","81.13"],"如果前者小于后者":["64.33"],"优先加载":["64.33"],"em":["64.34"],"select":["64.34"],"sub":["64.34"],"padding":["64.35","123.2"],"内边距":["64.35","91.0"],"direction":["64.36"],"弹性容器中子元素排列方式":["64.36"],"主轴排列方式":["64.36"],"的值并不是固定的":["64.38"],"会继承父级元素的字体大小":["64.38"],"参考物是父元素的":["64.38"],"或":["64.40","88.10","94.0","102.8"],"xhtm":["64.40"],"通过它可以告诉浏览器":["64.41"],"使用哪一个":["64.41"],"在开始拖放被拖放元素时触发":["64.42"],"darg":["64.42"],"在正在拖放被拖放元素时触发":["64.42"],"这里影响和优化的主要是网络和":["64.43"],"脚本":["64.43"],"则可以改成":["64.44"],"async":["64.44"],"或者":["64.44","95.5","102.2"],"defer":["64.44"],"是由":["64.45"],"通过修改":["64.45"],"dom":["64.45","66.20","67.11","89.5"],"服务器会发送查询报文到顶级域名服务器":["64.48"],"顶级域名服务器收到请求后会返回权威":["64.48"],"地址":["64.48"],"服务器地址再发送查询报文到权威":["64.48"],"权威":["64.48"],"服务器接收到请求后":["64.48"],"返回最终的":["64.48"],"tcp三次握手建立连接":["64.48"],"网络模型":["64.48"],"网络模型可以分为七层":["64.48"],"四层或五层模型":["64.48"],"这里我们将其分为五层":["64.48"],"五层":["64.48"],"自上而下":["64.48"],"分为应用层":["64.48"],"传输层":["64.48"],"网络层":["64.48"],"content":["64.49","78.10"],"initial":["64.49"],"scale":["64.49"],"trhead":["64.50"],"完成":["64.50","109.2"],"js动画":["64.50"],"则会在":["64.50"],"普通流的块级元素垂直方向的":["64.51"],"用于创建对跨渲染保留的元素或值的可变引用":["66.1","78.4"],"usecallback":["66.1","69.33","78.4"],"缓存回调函数":["66.1","78.4"],"避免在每次渲染时都创建新的回调函数实例":["66.1","78.4"],"当回调函数作为prop传递给子组件时":["66.1","78.4"],"当对react组件的数据火状态进行更改时":["66.2"],"虚拟dom会更新":["66.2"],"而不是直接操作真实的dom":["66.2"],"native":["66.3","107.4"],"weex":["66.3"],"不同点":["66.3"],"严格上只针对":["66.3"],"mvc":["66.3"],"层":["66.3"],"h3":["66.4"],"controlled":["66.4"],"component":["66.4","66.10","66.22"],"onchange":["66.4"],"handleagechange":["66.5"],"is":["66.5","67.46","111.3"],"此方法负责渲染jsx标记并返回要在屏幕上显示的内容":["66.6"],"此方法在组件dom中呈现后会立即调用":["66.6"],"它通常用于初始化任务":["66.6"],"例如":["66.6","67.44","69.42","78.2"],"相反":["66.8"],"建议使用useeffect":["66.8"],"传递给":["66.8"],"以防止内存泄漏":["66.9"],"此外":["66.9"],"如果组件多次渲染":["66.9"],"则在执行下一个效果之前":["66.9"],"清除上一个效果":["66.9"],"parent":["66.10","69.9"],"状态管理器可以解决几个问题":["66.11"],"并且没有后计划将其传递给其它区组件":["66.12"],"则建议使用本地状态":["66.12"],"我们跟踪接收到的动作的类型":["66.13"],"并根据它修改状态并返回一个新的状态对象":["66.13"],"它必须具有类型字段":["66.14"],"flux":["66.15"],"它旨在处理流式数据和大规模数据集":["66.16"],"提供了一种功能强大且灵活的方式来处理数据流":["66.16"],"xmlhttprequest对象与服务器进行异步通信的技术":["66.17"],"ajax可以实现在不重新加载整个页面的情况下更新部分页面内容":["66.17"],"ajax是一种基于原生javascript的技术":["66.17"],"相对来说比较底层":["66.17"],"并且需要开发者处理一些底层逻辑细节":["66.17"],"hooks时":["66.18"],"需要遵循一些规则":["66.18"],"其中一个重要的规则是不能将":["66.18"],"hooks放到条件判断语句":["66.18"],"循环语句等代码块中":["66.18"],"父组件可以将数据作为属性传递给子组件":["66.19"],"并且子组件可以通过":["66.19"],"尽可能高效地识别需要进行实际":["66.20"],"更新的部分":["66.20"],"从而避免不必要的重绘和重新排版":["66.20"],"diff算法的一般流程如下":["66.20"],"虚拟dom没有立即更新真的dom":["66.21"],"是先把dom结构抽象成dom树":["66.21"],"mvvm":["67.1"],"编写的":["67.2"],"可以使用模版引擎来渲染动态数据":["67.2"],"视图模型":["67.2"],"viewmodel是链接模型和视图的桥梁":["67.2"],"它负责将模型数据映射到视图上":["67.2"],"并将用户的交互事件传递给模型":["67.2"],"viewmodel可以使用数据绑定来自动更新视图":["67.2"],"当模型数据发生改变时":["67.2"],"视图自动更新":["67.2"],"最重要的部分是数据绑定和双向数据绑定":["67.2"],"是指将视图中的元素绑定到模型数据的过程":["67.2"],"子组件所有的":["67.3"],"阻止点击事件冒泡":["67.4"],"相当于原生中":["67.4"],"event":["67.4"],"stoppropagation":["67.4"],"prevent":["67.4"],"防止执行预设的行为":["67.4"],"相当于原生中的":["67.4"],"preventdefault":["67.4"],"并不能显示输出":["67.6"],"等价":["67.7"],"只是":["67.7"],"可以的":["67.9"],"如果绑定多个事件":["67.9"],"是保证唯一性":["67.10"],"vue在执行时":["67.10"],"当在模版中把数据绑定到一个计算属性上时":["67.11"],"方式进行跳转的叫做编程式导航":["67.12"],"router":["67.12","67.16","67.19","67.23","67.33"],"后台更改":["67.13"],"url的":["67.15"],"hash值来做路由":["67.15"],"支持所有浏览器":["67.15"],"以及浏览器的前进后退会触发相应的监听事件":["67.16"],"然后调用":["67.16"],"之后更新路由":["67.16"],"触发":["67.16"],"history":["67.18"],"routes":["67.18"],"hash只能修改":["67.20"],"的部分":["67.20"],"可以设置与当前url一样的新的url":["67.20"],"路由定义":["67.22"],"path":["67.22"],"user":["67.22","97.4","135.1"],"导航到搜索页面并传递查询参数":["67.23"],"使用路由参数更合适":["67.24"],"确保信息直接可见":["67.24"],"如果希望用户能够在url中看到传递的信息":["67.24"],"使用双大括号":["67.26"],"将变量插入到模版中":["67.26"],"指令可以将一个变量的值绑定到html元素属性上":["67.27"],"v":["67.30","67.36","67.46","78.6"],"实例中的方法":["67.31"],"createrouter":["67.33","67.55"],"guards":["67.34"],"表示当前导航正要离开的路由":["67.35"],"一个函数":["67.35"],"用于进入下一个钩子":["67.35"],"beforeresolve":["67.35"],"mext":["67.35"],"在导航被确认之前":["67.35"],"也就是所有组件的":["67.35"],"beforerouterenter":["67.35"],"被调用之后触发":["67.35"],"在这些守卫中":["67.35"],"通过调用":["67.35"],"自定义属性名":["67.37"],"属性值":["67.37"],"的形式传递":["67.37"],"子组件":["67.38","67.42","67.44"],"子组件接受通过":["67.38"],"nox":["67.40"],"buttom":["67.40"],"transferparents":["67.40"],"点击传值给父组件":["67.40","67.41"],"父组件接收":["67.41"],"引入组件":["67.41"],"world":["67.42","87.2","87.5","88.21","89.31"],"slot":["67.43"],"我是设置的默认内容":["67.43"],"xxx":["67.44"],"可简写为":["67.44"],"指令的":["67.44"],"元素":["67.44"],"这个元素会将目标插槽的名字传递下去匹配对应插槽":["67.44"],"父组件":["67.45","73.10"],"slotprops":["67.46"],"my":["67.46"],"bigturnip":["67.47"],"或者是由以上类型的值组成的数组":["67.50"],"第二个参数是在发生变化时要调用的回调函数":["67.50"],"这个回调函数接收三个参数":["67.50"],"新值":["67.50"],"旧值":["67.50"],"fooref":["67.51"],"barref":["67.51"],"foo":["67.51","89.4","105.2"],"bar":["67.51","105.7"],"prefoo":["67.51"],"prebar":["67.51"],"深度遍历":["67.51"],"当使用getter函数作为源时":["67.51"],"回调只在此函数的返回值变化时才会触发":["67.51"],"如果想让回调在深层级变更时也能触发":["67.51"],"你需要使用":["67.51"],"deep":["67.51"],"强制侦听器进入深层级模式":["67.51"],"在深层级模式时":["67.51"],"适用于派生值的场景":["67.52"],"它会缓存计算结果":["67.52"],"只有在依赖的响应式数据变化时才重新计算":["67.52"],"是监听一个值的变化而执行对应的回调":["67.52"],"白屏时间怎么检测":["67.53"],"setup":["67.54"],"访问当前路由信息":["67.54"],"createwebhashhistory":["67.55"],"而不仅仅是对象的属性":["67.56"],"这使得vue3能够高效的追踪数据的变化":["67.56"],"从而提高响应性能":["67.56"],"编译优化":["67.56"],"的编译器做了大量的优化工作":["67.56"],"生成的运行时代码更为精简和高效":["67.56"],"其中有一个重要的变化是将模版编译为更优化的渲染函数":["67.56"],"减少了运行时的开销":["67.56"],"新的编译器还引入了静态提升":["67.56"],"static":["67.56"],"hoisting":["67.56"],"对应一般":["67.57"],"对象的":["67.57"],"里存放的数据是响应式的":["67.57"],"数据发生改变":["67.57"],"的参数中":["69.3"],"我们可以定义一个对象":["69.3"],"其中的每个属性代表一个prop":["69.3"],"在这个示例中":["69.3"],"我们定义了一个名为":["69.3"],"count":["69.3","69.5"],"changeparentcount":["69.5"],"更新父组件的count":["69.5"],"defineexpose适用于将组件内部的属性和方法暴露给父组件或者其它组件使用":["69.7"],"通过这种方式":["69.7"],"我们可以定义哪些部分可以从组件外部访问和调用":["69.7"],"子组件child":["69.7"],"上面这段代码中":["69.7","89.1"],"我们定义了一个":["69.7"],"它接收一个参数":["69.9"],"即要注入的数据的键":["69.9"],"在子组件中使用inject时":["69.9"],"可以直接使用接收到的数据":["69.9"],"而不需要再组件的配置选项中声明这些数据":["69.9"],"父组件parent":["69.9"],"child1":["69.9"],"child2":["69.9","113.3"],"将父组件的":["69.11"],"双向绑定到子组件的":["69.11"],"面的代码中":["69.11"],"接着":["69.13"],"创建一个event":["69.13"],"bus":["69.13"],"ts":["69.13"],"设计的状态管理库":["69.15"],"类似":["69.15"],"react":["69.17"],"无法检测到状态的更改":["69.17"],"正确的做法是始终使用":["69.17"],"行为":["69.18"],"最好使用具有唯一标识的属性作为":["69.18"],"jsx":["69.18","69.19"],"错误的方式":["69.18","69.19","69.21"],"可以使用箭头函数或在构造函数中绑定方法来解决这个问题":["69.19"],"可能会导致":["69.20"],"通过next":["69.22"],"mounting":["69.23"],"更新阶段":["69.23"],"updating":["69.23"],"getderivedstatefromprops":["69.24"],"props":["69.24","73.8"],"静态方法":["69.24"],"用于根据":["69.24"],"决定是否重新渲染组件":["69.25"],"可以通过返回":["69.25"],"来阻止渲染过程":["69.25"],"还有一些过时的生命周期方法":["69.26"],"但效果在所有dom突变后同步运行":["69.35"],"并且列表移出可视区域时":["69.36"],"虚拟滚动列表会回收对应的dom元素从而降低内存占用":["69.36"],"收集现代性能指标并提供对开发人员最佳实践的意见":["69.37"],"搜索引擎优化":["69.38"],"seo":["69.38"],"页面是否针对搜索引擎结果排名进行了优化":["69.38"],"pwa":["69.38"],"progressive":["69.38"],"慢":["69.39"],"调试面板中的":["69.40"],"lighthouse":["69.40"],"有几种常用的方式可以实现跨页面通信":["69.41"],"storage提供了一种在浏览器中存储数据的方法":["69.43"],"这些数据在不同页面之间是共享的":["69.43"],"但是":["69.45","87.21"],"api允许在不同的窗口或iframe之间安全地发送消息":["69.46"],"通过在页面上建立websocket连接":["69.47"],"可以实现实时的跨页面数据传输":["69.47"],"不同端口或不同协议的资源发起请求时":["69.48"],"是一种利用":["69.49"],"标签的":["69.49"],"w3c":["69.50"],"提出的跨域解决方案":["69.50"],"通过在服务器端设置相应的":["69.50"],"当浏览器无法直接访问目标资源时":["69.51"],"如果目标服务器支持":["69.52"],"来进行跨域身份验证":["69.53"],"是一种基于":["69.53"],"性能问题":["69.54"],"如果在父页面和":["69.54"],"中频繁进行通信":["69.54"],"可能会影响页面的性能":["69.54"],"特别是在某些情况下":["69.54"],"由于通信的频繁性":["69.54"],"可能会导致页面变得不稳定或响应变慢":["69.54"],"浏览器兼容性":["69.54"],"不同浏览器对于":["69.54"],"中的跨页面通信机制的支持程度可能有所不同":["69.54"],"需要谨慎考虑兼容性问题":["69.54"],"为了解决这些问题":["69.54"],"可以采取一些措施":["69.54"],"例如使用安全的通信机制":["69.54"],"开发方式有以下特点":["69.55"],"集中管理":["69.55"],"所有项目的代码都集中存储在一个代码仓库中":["69.55"],"便于管理和维护":["69.55"],"接受一个函数和依赖项数组作为参数":["69.56"],"并返回该函数的记忆化版本":["69.56"],"记忆化版本只有在依赖项发生变化时才会重新计算":["69.56"],"否则将复用上一次计算的结果":["69.56"],"parse":["69.60","111.4"],"来监听":["69.60"],"的变化":["69.60"],"并更新本地存储中对应的值":["69.60"],"将":["69.60"],"转换为":["69.60"],"并保存到本地存储中":["69.60"],"最终可以在一起渲染所有页面":["70.5"],"once":["70.7"],"在拖动过程中连续触发":["71.3"],"api":["71.4"],"用于指定鼠标悬停在拖动元素上时的光标样式":["71.5"],"dragstart":["71.6"],"api是优于options":["71.9"],"因为composition":["71.9"],"线下":["72.1"],"线上":["72.13"],"formattednum":["72.26"],"将数字格式化为带有千位分隔符的字符串":["72.26"],"通过":["73.4","75.2","76.0"],"param1":["73.7"],"param2":["73.7"],"fc":["73.9"],"setdata":["73.9"],"孙组件":["73.11"],"父组件传递的参数":["73.11"],"通过层级嵌套传参":["73.11"],"我们也可以实现跨组件传递":["73.11"],"但如果有多层嵌套时":["73.11"],"一层一层之间传递很非常冗余和麻烦":["73.11"],"有时候也会搞混参数来源":["73.11"],"子组件通过调用props":["73.12"],"000000":["73.13"],"gradient":["73.13"],"渐变":["73.13"],"用于创建颜色渐变的背景":["73.13"],"background":["73.13","74.24","81.1","81.3","81.6","81.8","81.9"],"image":["73.13","136.1"],"to":["73.13"],"right":["73.13","81.14"],"yellow":["73.13"],"transform":["73.13"],"变换":["73.13"],"用于对元素进行旋转":["73.13"],"弹性盒子布局":["73.14"],"可以实现灵活的":["73.14"],"自适应的布局":["73.14"],"通过设置容器的":["73.14"],"display":["73.14","74.14","81.1","81.5","81.6"],"flex":["73.14"],"可以指定其为":["73.14"],"容器":["73.14"],"然后使用各种":["73.14"],"使用绝对定位和负边距":["73.15"],"relative":["73.15","81.8","81.11","81.12","81.13"],"absolute":["73.15","81.5","81.8","81.11","81.12"],"o":["73.16","89.28","131.8"],"操作等":["73.16"],"当执行完一个宏任务后":["73.16"],"引擎会检查是否有微任务需要执行":["73.16"],"然后再执行微任务队列中的任务":["73.16"],"常见的宏任务包括整体代码":["73.16"],"执行":["73.16","89.30","117.0"],"又因为在js中内层作用域总是能访问外层作用域的":["73.17"],"延长变量的生命周期":["73.18"],"使用新的api":["73.20"],"creatroot":["73.20"],"使用旧的api仍然兼容":["73.20"],"只用使用了":["73.20"],"createroot":["73.20"],"并在适当的时机进行合并和应用":["73.21"],"以优化性能":["73.21"],"这样做可以减少不必要的重渲染":["73.21"],"并提高应用程序的响应性":["73.21"],"同步更新":["73.21"],"就可以在后台执行":["73.22"],"不会影响应用程序的交互性能":["73.22"],"usetransition":["73.22"],"是":["73.22","89.7","119.6"],"严格模式只在开发环境下工作":["73.23"],"不会影响生产环境下的应用程序":["73.23"],"可以在应用程序启动时禁用严格模式":["73.24"],"在应用程序启动文件中":["73.24"],"我们可以使用":["73.24","97.5"],"unstable":["73.24"],"任务调度和优先级":["73.25"],"任务调度器负责决定哪些任务执行":["73.25"],"何时执行以及中断和恢复任务":["73.25"],"优先级允许":["73.25"],"根据任务的紧迫性来安排任务的执行顺序":["73.25"],"确保响应度更高的任务能够优先执行":["73.25"],"利用并发模式":["73.25"],"可以将渲染过程分解为多个小任务":["73.25"],"并根据优先级来动态调整任务执行的顺序":["73.25"],"这样":["73.25"],"07":["74.0","77.0","97.5"],"的区别":["74.1"],"或者一个不存在的属性":["74.2"],"当访问一个未初始化的变量时":["74.2"],"在代码中":["74.3"],"开发者有时会显式地将变量设置为":["74.3"],"以表示这个变量的值为空":["74.3"],"它包含了所需的所有类型的特性":["74.5"],"联合类型会产生一个包含所有类型选择集的类型":["74.6"],"整数部分和小数部分拼接":["74.7"],"使用字符串截取的方式":["74.7"],"那么此时上拉的时候会不会卡顿":["74.8"],"组件的":["74.10"],"可能并不会影响到组件的":["74.10"],"ui":["74.10"],"渲染结果":["74.10"],"此时重新渲染组件是没有必要的":["74.10"],"会造成性能浪费":["74.10"],"就是为了解决这个问题而提供的":["74.10"],"指向":["74.11"],"这个对象":["74.11"],"在对象":["74.11"],"上创建一个属性":["74.11"],"即":["74.12","139.7"],"要解决这个问题":["74.12"],"可以使用闭包来创建一个函数作用域":["74.12"],"并在每次迭代时保留":["74.12"],"的值":["74.12","112.6"],"60px":["74.14","81.11"],"声明一个容器":["74.14"],"grid":["74.14"],"声明列的宽度":["74.14"],"columns":["74.14","74.18","74.19"],"repeat":["74.14"],"200px":["74.14","74.19","81.10"],"声明行间距和列间距":["74.14"],"gap":["74.14","74.18","74.19","74.24"],"20px":["74.14","74.24","81.10"],"声明行的高度":["74.14"],"rows":["74.14","74.24"],"100px":["74.14","74.19","74.24","81.10","81.12","81.15"],"声明的是一个块级元素":["74.15"],"2行":["74.16"],"而且行高都为":["74.16"],"auto":["74.16","74.24","81.3"],"fill":["74.16","81.8"],"关键字":["74.16","131.5"],"表示自动填充":["74.16"],"让一行":["74.16"],"的简写形式":["74.17"],"10px":["74.17","74.18","81.1","81.12","81.15"],"120px":["74.18"],"5px":["74.19"],"center":["74.20"],"stretch":["74.20"],"代码效果如下":["74.20"],"wrapper":["74.20","74.21"],"也就是上面提到的隐式网格":["74.22"],"那么它的行高和列宽可以根据":["74.22"],"属性设置":["74.22"],"它们的写法和":["74.22"],"1fr":["74.24"],"minmax":["74.24"],"one":["74.24"],"19caad":["74.24"],"two":["74.24"],"area":["74.25"],"指定项目放在哪一个区域":["74.25"],"属性设置单元格内容的垂直位置":["74.26"],"上中下":["74.26"],"也是只作用于单个项目":["74.26"],"他们的属性值":["74.26"],"打印结果为3":["75.2"],"第一步":["75.2"],"方法给元素每一项执行":["75.2"],"的回调函数":["75.2"],"打印结果为":["75.3"],"javascript中事件执行顺序是":["75.3"],"先同步任务形成执行栈":["75.3"],"执行同步任务的过程中遇到异步任务会把异步任务先放到任务队列中":["75.3"],"等同步任务执行完成后开始自行异步任务队列":["75.3"],"题中":["75.3"],"属于同步任务的是":["75.3"],"myflat":["75.4"],"t":["75.4"],"parsedurl":["75.5"],"处理query":["75.5"],"searchparams":["75.5"],"复杂跨域请求":["75.6"],"复杂跨域请求满足以下任意条件就会触发":["75.6"],"delete":["75.7","78.8","89.2","89.7","98.0"],"等":["75.7"],"cors预检":["75.7"],"在进行跨域请求时":["75.7"],"浏览器会自动发送":["75.7"],"configs":["75.9"],"并且这个新的promise的状态是由包裹的promise的状态共同决定的":["75.11"],"当所有的":["75.11"],"的状态变成":["75.11"],"有时候我们已经有一个现成的值希望将其转换成":["75.12"],"方法会等到一个":["75.14"],"fulfilled":["75.14"],"状态":["75.14","75.15"],"就会立即变成对应的":["75.15"],"那么对于":["75.15"],"关于":["76.0"],"的数据类型":["76.0"],"以下哪些说法是正确的":["76.0"],"声明的数组":["76.0"],"可以向其中添加元素":["76.0"],"数组的":["76.0"],"map":["76.0","78.8","81.14","88.9","89.26"],"reverse":["76.0"],"方法都会产生新数组":["76.0"],"任意的对象都能转换为":["76.0"],"有异步队列吗":["77.2"],"异步原理":["77.23"],"来包裹这个组件":["78.2"],"这样react会在每次渲染前比较新旧":["78.2"],"如果他们相等":["78.2"],"浅比较":["78.2"],"则跳过不必要的渲染":["78.2"],"使用方式":["78.2"],"直接将组件作为参数传递给":["78.2"],"handleclick":["78.3"],"点击了按钮":["78.3"],"点击次数":["78.3"],"settext":["78.5"],"rendered":["78.5"],"被激活":["78.6"],"onactivated":["78.6"],"被包含在":["78.6"],"keep":["78.6"],"alive":["78.6"],"中的组件":["78.6"],"会多出两个生命周期钩子函数":["78.6"],"被激活时执行":["78.6"],"切换":["78.6"],"ondeactivated":["78.6"],"例如从a组件切换到b组件":["78.6"],"a组件消失后执行":["78.6"],"我们通常会用":["78.6"],"钩子在组件挂载后发送异步请求":["78.6"],"获取数据并更新组件状态":["78.6"],"这是因为":["78.6","97.2"],"钩子在组件挂载到dom后调用":["78.6"],"而发送异步请求通常需要确保组件已经挂载":["78.6"],"以便正常地操作dom或者更新组件的状态":["78.6"],"更好的typescript支持":["78.7"],"需要通过":["78.8"],"以及":["78.8"],"这样的api才会生效":["78.8"],"对于":["78.8"],"es6":["78.8","89.1"],"中新产生的":["78.8"],"等数据结构不支持":["78.8"],"vue3":["78.8"],"vue3响应式使用的是es6的":["78.8"],"proxy":["78.8","89.6"],"使用交叉类型":["78.9"],"固定高度":["78.10"],"可以自动监听数据源作为依赖":["78.11"],"不用指明监听哪个数据":["78.11"],"监听的回调中用到哪个数据":["78.11"],"那就监听哪个数据":["78.11"],"high":["78.12"],"二分法查找最长公共前缀":["78.12"],"mid":["78.12"],"floor":["78.12"],"substring":["78.12","122.4"],"尝试更长的前缀":["78.12"],"尝试缩短前缀":["78.12"],"最长公共前缀的长度为high":["78.12"],"寻找字符串中出现最多的字符串":["78.12"],"afjghdfraaaasdenas":["78.12"],"textanimation":["79.0"],"465efb":["81.1","81.3","81.6","81.7","81.8"],"6px":["81.1","81.8"],"inline":["81.1","81.5","81.6"],"block":["81.1","81.5","81.6"],"1px":["81.1"],"webkit":["81.1","81.6","81.7","81.8","81.10","81.11","81.14"],"animation":["81.1","81.6","81.7","81.8"],"in":["81.2","81.4","81.8","89.7","119.5","123.1","137.2"],"out":["81.2","81.4","81.8","127.4"],"border":["81.3","81.6","81.7","81.8","81.10"],"radius":["81.3","81.6","81.7","81.8","81.10"],"opacity":["81.3"],"8s":["81.4","81.9"],"infinite":["81.4","81.6","81.7","81.8","81.11"],"ease":["81.4","81.6","81.8"],"delay":["81.4","104.1"],"9s":["81.4","81.9"],"30px":["81.6","81.11"],"bouncedelay":["81.6","81.8"],"4s":["81.6","81.13"],"scaleout":["81.7"],"0s":["81.7"],"2s":["81.8"],"mode":["81.8"],"both":["81.8","137.3"],"6s":["81.9","81.13"],"7s":["81.9","81.13"],"fff":["81.9"],"300px":["81.9","81.12","81.13"],"25px":["81.10"],"15px":["81.10"],"moz":["81.10"],"1s":["81.11"],"80px":["81.12"],"keys":["81.14","89.13","98.0","123.1"],"0px":["81.14"],"下面的选择器的权重是递增的":["82.0"],"类型选择器":["82.0"],"元素选择器":["82.0"],"标签这些":["82.0"],"before":["82.0","137.2"],"after":["82.0"],"class选择器":["82.0"],"类名选择器":["82.0"],"伪类选择器":["82.0"],"focus":["82.0"],"visited":["82.0"],"这些":["82.0"],"box":["83.0"],"ul":["83.0"],"原文链接":["84.0"],"partial":["86.1"],"container":["86.1"],"开始":["87.5"],"users":["87.8"],"hhh":["87.8","89.10"],"documents":["87.8"],"txt":["87.8"],"abc":["87.9"],"标准化形式":["87.10"],"它主要用于处理":["87.10"],"可以在调用时扩展实际传入的参数":["87.12"],"扩展运算符后面还可以放置表达式":["87.12"],"如果扩展运算符后面是一个空数组":["87.12"],"则不会有任何效果":["87.12"],"warning":["87.12"],"只有在函数调用时":["87.12"],"扩展运算符才能放在圆括号中":["87.12"],"否则会报错":["87.12"],"arraylike":["87.13"],"区别":["87.14"],"方法的主要目的":["87.14"],"是弥补数组构造函数":["87.14"],"的不足":["87.14"],"因为参数个数不同":["87.14"],"会导致":["87.14"],"内的全部元素":["87.16"],"是对键值的遍历":["87.18"],"是对键值对的遍历":["87.18"],"of":["87.18","127.4"],"baz":["87.20"],"如果使用字面量方式定义对象":["87.21"],"使用大括号":["87.21"],"es5":["87.21"],"返回true":["87.22"],"操作符返回false":["87.22"],"二是object":["87.22"],"那么可以使用第二个参数指定修饰符":["87.27"],"而且":["87.27"],"返回的正则表达式会忽略原有的正则表达式的修饰符":["87.27"],"regex":["87.28","98.0"],"s":["87.29","88.8"],"exec":["87.30"],"abcabc":["87.30"],"表示是否有y修饰符":["87.31"],"表示是否有u修饰符":["87.31"],"replace":["87.32"],"search":["87.32"],"china":["87.34"],"ecmascript是一种由":["88.0"],"ecma":["88.0"],"国际组织制定的脚本语言标准":["88.0"],"关键字的区别在于":["88.2"],"块级作用域":["88.3"],"y":["88.3","88.6","119.3"],"常量":["88.3"],"tail":["88.5","127.6"],"z":["88.5","98.0"],"undefined":["88.5","89.25","96.0","119.12"],"此时的p是模式":["88.6"],"不是变量":["88.6"],"如果想要p也作为变量赋值":["88.6"],"可以写成下面这样":["88.6"],"d":["88.7","89.28","103.12"],"result":["88.9","123.1"],"所以不能用":["88.10"],"再次声明":["88.10"],"add":["88.11","88.15","89.21","102.15","122.5"],"不可以对箭头函数使用":["88.12"],"arguments":["88.13","88.15","115.4"],"要用":["88.13"],"rest":["88.13"],"我们可以放置任何有效的javascript表达式":["88.14"],"这些表达式的值将被插入到字符串中":["88.14"],"对象了":["88.15"],"rest参数搭配的变量是一个数组":["88.15"],"该变量将对于的参数放入到数组中":["88.15"],"这个示例的含义是表示一个求和函数":["88.15"],"利用rest参数":["88.15"],"可以向该函数传入任意数目的参数":["88.15"],"values":["88.15","89.13","89.18"],"arr2":["88.18"],"它提供了一种更方便的方法来定义和初始化对象属性":["88.19"],"lastworld":["88.21"],"last":["88.21","112.7"],"aa":["88.21"],"first":["88.21"],"author":["88.22"],"下面是一个示例":["88.23"],"utils":["88.23"],"导出一个常量":["88.23"],"原生提供":["89.1"],"构造函数":["89.1"],"用来生成":["89.1"],"实例":["89.1"],"handler":["89.1","89.5"],"time":["89.1"],"作为构造函数":["89.1"],"接收两个参数":["89.1"],"第一个参数是需要代理的目标对象":["89.1"],"上例是一个空对象":["89.1"],"deleteproperty":["89.2","89.7"],"ownkeys":["89.2"],"getownpropertydescriptor":["89.2"],"proto":["89.4"],"propertykey":["89.4"],"receiver":["89.4"],"obj":["89.4"],"create":["89.4","113.9"],"上面代码中":["89.5"],"由于设置了存值函数":["89.5"],"任何不符合要求的":["89.5"],"属性赋值":["89.5"],"都会抛出一个错误":["89.5"],"这是数据验证的一种实现方法":["89.5"],"利用":["89.5"],"方法":["89.5"],"还可以数据绑定":["89.5"],"即每当对象发生变化时候":["89.5"],"会自动更新":["89.5"],"有时候我们会在对象上面设置内部属性":["89.5"],"属性名的第一个字符使用下划线开头":["89.5"],"表示这些属性不应该被外部使用":["89.5"],"结合":["89.5"],"就可以做到防止这些内部属性被外部读写":["89.5"],"target":["89.5","89.9","105.4"],"invariant":["89.5"],"am":["89.6","102.8"],"the":["89.6"],"让":["89.7"],"操作都变成函数行为":["89.7"],"某些":["89.7"],"命令式":["89.7"],"has":["89.7"],"argumentslist":["89.8"],"用于创建一个类的实例对象":["89.8"],"notifyobservers":["89.9"],"设置观察者":["89.9"],"addobserver":["89.9"],"函数都返回一个全新且不相等的":["89.10"],"mysymbol1":["89.10"],"mysymbol2":["89.10"],"weakset":["89.11"],"它类似于对象":["89.12"],"但有一些不同之处":["89.12"],"返回以键遍历器的对象":["89.13"],"返回以值遍历器的对象":["89.13"],"entries":["89.13","89.18"],"返回以键和值为遍历器的对象":["89.13"],"使用回调函数遍历每个成员":["89.13","89.18"],"只接受对象":["89.14"],"作为键":["89.14"],"节点":["89.15"],"dom节点被移除时自动释放此成员键":["89.15"],"返回键值对":["89.16"],"类似于数组":["89.17"],"返回以属性值为遍历器的对象":["89.18"],"返回以属性值和属性值为遍历器的对象":["89.18"],"并且这些对象是弱引用的":["89.19"],"这意味着如果一个对象在":["89.19"],"不用担心这些节点从文档移除时会引发内存泄漏":["89.20"],"添加值":["89.21"],"是一种迭代机制":["89.23"],"为es6":["89.24"],"创造了一种新的遍历命令":["89.24"],"it":["89.25"],"done":["89.27","137.2"],"必须部署":["89.27"],"接口":["89.28"],"l":["89.28"],"遍历字符串":["89.29"],"内部封装了多个状态":["89.30"],"ending":["89.31"],"hw":["89.31"],"xhr":["90.0"],"xmlhttprequest":["90.0"],"responsetype":["90.0"],"blob":["90.0"],"setrequestheader":["90.0"],"authorization":["90.0"],"basic":["90.0"],"a2vybwl0omtlcm1pda":["90.0"],"不包括内边距":["91.0"],"边框和外边距":["91.0"],"clientheight":["91.0"],"tcp数据包序列号":["93.1"],"在tcp发送的每个数据包都会随机生成一个序列号":["93.1"],"该序列号用于接受放对数据包的接收确认":["93.1"],"防止丢失以及数据接收完毕后按序列号顺序组装":["93.1"],"ack":["93.1"],"确认编号":["93.1"],"acknowledgement":["93.1"],"数据包的确认标志":["93.1"],"服务端进入":["93.2"],"close":["93.2"],"这个时候客户端已经没有数据要发送了":["93.2"],"不过服务器端有数据发送的话":["93.2"],"客户端依然需要接收":["93.2"],"客户端接收到服务端发送的":["93.2"],"后":["93.2","105.7","109.2"],"进入到":["93.2"],"wati":["93.2"],"一个用于计算机或通信系统间互联的标准体系":["94.0"],"一般称为":["94.0"],"osi参考模型":["94.0"],"七层模型":["94.0"],"所谓的":["94.0"],"简称":["95.1"],"xss":["95.1"],"方法名等":["95.2"],"在标签属性中":["95.2"],"恶意内容包含引号":["95.2"],"从而突破属性值的限制":["95.2"],"常见的是在评论区插入攻击脚本":["95.3"],"如果脚本被储存到服务端":["95.3"],"那么所有看见对应评论的用户都会受到攻击":["95.3"],"是必要的":["95.4"],"就需要对引号":["95.4"],"尖括号":["95.4"],"斜杠进行转移":["95.4"],"但这还不是很完善":["95.4"],"想对html模版各处插入点进行充分的转移":["95.4"],"就需要采用合适的转义库":["95.4"],"attack":["95.5"],"session":["95.5"],"refer":["95.6"],"check":["95.6"],"csrf时常也被成为xsrf":["95.7"],"csrf实现的方式还可以是直接通过命令行发起请求等":["95.7"],"本质上讲":["95.7"],"我们只是想打印obj里边的fn":["96.0"],"这个时候就应该用我们的call了":["96.0"],"都是改变上下文中的":["96.1"],"通常是由web服务器使用响应":["97.0"],"header设置的":["97.0"],"然后浏览器使用":["97.0"],"cookiestring":["97.1"],"cookies":["97.1"],"cookiearray":["97.1"],"cookieitem":["97.1"],"展示所有":["97.2"],"如果你运行了上面这段代码":["97.2"],"你会看到多个cookie":["97.2"],"操作不是重写整个所有的cookie":["97.2"],"它只设置代码中提到的cookie":["97.2"],"从技术上讲":["97.2"],"cookie的名称和值可以是任意字符":["97.2"],"为了保持有效的格式":["97.2"],"设置":["97.3"],"那么该cookie在":["97.3"],"如果我们在site":["97.4"],"com网站上设置了cookie":["97.4"],"cookie":["97.4"],"jhon":["97.4"],"在forum":["97.4"],"域名下":["97.4"],"我们无法访问它":["97.4"],"03":["97.5"],"gmt":["97.5"],"cooke的国旗时间定义了浏览器会自动清除该cookie的时间":["97.5"],"日期必须完全采用gmt时区的这种格式":["97.5"],"date":["97.5","107.1","134.3"],"toutcstring":["97.5"],"来获取它":["97.5"],"datatracker":["97.6"],"ietf":["97.6"],"当属性名匹配提供的正则表达式时":["98.0"],"允许使用":["98.0"],"方式取值":["98.0"],"否则只能用":["98.0"],"号取值":["98.0"],"notation":["98.0"],"文件末尾强制换行":["98.0"],"eol":["98.0"],"替代":["98.0"],"eqeqeq":["98.0"],"allow":["98.0"],"null":["98.0","104.5","115.2","127.6"],"方法表达式是否需要命名":["98.0"],"func":["98.0"],"names":["98.0"],"方法定义风格":["98.0"],"declaration":["98.0"],"强制使用方法声明的方式":["98.0"],"f":["98.0"],"expression":["98.0"],"强制使用方法表达式的方式":["98.0"],"allowarrowfunctions":["98.0"],"declaration风格中允许箭头函数":["98.0"],"禁止使用alert":["98.0"],"confirm":["98.0"],"prompt":["98.0"],"禁止使用数组构造器":["98.0"],"bitwise":["98.0"],"禁止使用按位运算符":["98.0"],"caller":["98.0"],"禁止使用arguments":["98.0"],"caller或arguments":["98.0"],"callee":["98.0"],"catch":["98.0"],"shadow":["98.0"],"禁止catch子句参数与外部作用域变量同名":["98.0"],"assign":["98.0"],"禁止给类赋值":["98.0"],"cond":["98.0"],"禁止在条件表达式中使用赋值语句":["98.0"],"禁止使用console":["98.0"],"禁止修改const声明的变量":["98.0"],"constant":["98.0"],"condition":["98.0"],"禁止在条件中使用常量表达式":["98.0"],"continue":["98.0"],"禁止使用continue":["98.0"],"control":["98.0"],"禁止在正则表达式中使用控制字符":["98.0"],"debugger":["98.0"],"禁止使用debugger":["98.0"],"不能对var声明的变量使用delete操作符":["98.0"],"不能使用看起来像除法的正则表达式":["98.0"],"dupe":["98.0"],"在创建对象字面量时不允许键重复":["98.0"],"args":["98.0","110.23","115.4"],"函数参数不能重复":["98.0"],"duplicate":["98.0"],"switch中的case标签不能重复":["98.0"],"如果if语句里面有return":["98.0"],"后面不能跟else语句":["98.0"],"具有":["100.0"],"的简单语法和":["100.0"],"的异步":["100.0"],"得益于es6的静态模块结构":["100.0"],"可以进行":["100.0"],"tree":["100.0","130.0"],"shaking":["100.0"],"允许像":["100.0"],"rollup":["100.0"],"这样的打包器":["100.0"],"删除不必要的代码":["100.0"],"减少代码包可以获得更快的加载":["100.0"],"可以在html中调用":["100.0"],"只要如下":["100.0"],"它的返回值作为一个元素被添加为新数组中":["101.1"],"该函数被调用时将传入以下参数":["101.1"],"element":["101.1"],"数组中当前正在处理的元素":["101.1"],"正在处理的元素的索引":["101.1"],"调用了":["101.1"],"它方便了日常开发中对时间的操作":["102.0"],"提高了开发效率":["102.0"],"日常开发中":["102.0"],"moment":["102.2"],"yarn":["102.2"],"locale":["102.4"],"cn":["102.4"],"获取本周周日23时59分59秒":["102.6"],"获取当前月最后一天23时59分59秒":["102.6"],"获取当前月的总天数":["102.6"],"daysinmonth":["102.6"],"获取时间戳":["102.6"],"以秒为单位":["102.6"],"设置小时":["102.7"],"hours":["102.7"],"设置分钟":["102.7"],"minutes":["102.7"],"设置秒数":["102.7"],"从sunday到saturday":["102.8"],"w":["102.8"],"年份中的第几周":["102.8"],"如42":["102.8"],"表示第42周":["102.8"],"yyyy":["102.8"],"四位数字完整表示的年份":["102.8"],"yy":["102.8"],"两位数字表示的年份":["102.8"],"大写的am":["102.8"],"pm":["102.8"],"end":["102.9","130.2"],"五月":["102.11"],"24日":["102.11"],"年前":["102.12"],"上周六晚上7点49":["102.13"],"本月一号":["102.15"],"行一个提供的reducer函数":["103.1"],"每一次运行reducer函数会将先前的结果作为参数传入":["103.1"],"一个初始值":["103.2"],"在第一次调用时":["103.3"],"如果指定了":["103.3"],"initialvalue":["103.3","103.17"],"则为指定的":["103.3"],"currentvalue":["103.4"],"开始执行":["103.4"],"如果没有":["103.4"],"acc":["103.6","103.10"],"表示的是累加器":["103.6"],"accumulator":["103.6"],"initvalue":["103.7"],"判断累加器的结果中是否有未记录的名称key":["103.9"],"通过传入一个空对象":["103.9"],"cur":["103.10"],"curgroup":["103.10"],"potter":["103.11"],"bob":["103.11"],"war":["103.11"],"and":["103.11"],"sapce":["103.11"],"romeo":["103.11"],"如果你喜欢使用":["103.13"],"循环":["103.13"],"你可以再遍历一次时使用":["103.13"],"进行过滤和映射":["103.13"],"curfunc":["103.14"],"p1":["103.14"],"arrlike":["103.16"],"函数组合":["103.17"],"实现管道功能":["103.17"],"pipe":["103.17"],"functions":["103.17"],"reduce":["103.17"],"settimeout和setinterval是两个用于执行延迟操作或定期执行代码的函数":["104.0"],"作用":["104.1","104.2"],"在指定的延迟时间":["104.1"],"以毫秒为单位":["104.1","104.2"],"以指定的时间间隔":["104.2"],"重复执行传入的函数":["104.2"],"javascript是单线程执行":["104.3"],"javascript是单线程执行的":["104.3"],"意味着所有任务都在同一个执行队列中":["104.3"],"setinterval":["104.4","104.7"],"intervalfunction":["104.5"],"用法":["104.6"],"starttime":["104.6"],"timestamp":["104.6"],"window":["105.1","105.2"],"global":["105.1"],"一般使用":["105.1"],"打印":["105.2"],"输出mike":["105.3"],"o1":["105.3"],"o2":["105.3"],"我们可以手动调用它":["105.4"],"fn":["105.4","105.6","115.4"],"arg1":["105.4"],"绑定到新建的对象":["105.5"],"根据构造函数返回类型作为判断":["105.5"],"如果是原始值则被忽略":["105.5"],"如果是返回对象":["105.5"],"需要正常处理":["105.5"],"上述过程可以用如下代码表述":["105.5"],"settimeout":["105.6","115.4"],"输出值为":["105.7"],"上述代码中通过":["105.7"],"函数中的":["105.7"],"绑定为obj1对象":["105.7"],"执行bar":["105.7"],"obj1的值为":["105.7"],"所以输出值为2":["105.7"],"当使用":["105.7"],"bar作为构造函数时":["105.7"],"new的优先级比bind绑定的优先级更高":["105.7"],"这意味着当操作涉及不匹配的类型时":["106.0"],"它允许隐式类型转换":["106.0"],"而不是抛出类型错误":["106.0"],"前端数据类型分为":["106.0"],"基本数据类型":["106.0"],"复杂数据类型":["106.0"],"symbol":["106.1","106.3"],"要么是":["106.3"],"属性值可以是任何类型的值":["106.3"],"包括其它对象":["106.3"],"从而可以构建复杂的数据结构":["106.3"],"有两种对象属性的类型":["106.3"],"数据属性和访问器属性":["106.3"],"每个属性都有对应的特性":["106.3"],"attribute":["106.3"],"引擎可在内部访问每个属性":["106.3"],"用于检测构造函数的":["106.4"],"属性是否出现在某个实例对象的原型链上":["106.4"],"car":["106.4"],"make":["106.4"],"year":["106.4"],"上图中":["107.0"],"都是javascript内置的":["107.1"],"类似的我们还有":["107.1"],"也可以说是让某一个构造函数实例化的所有对象都可以找到公共的方法和属性":["107.2"],"有了":["107.2"],"我们不需要":["107.2"],"通常被称为隐式类型":["107.3"],"被称为显式类型":["107.3"],"那么我们可以说一个对象的隐式原型指向了该对象的构造函数的显式原型":["107.3"],"我们通过在显式原型上定义的属性方法":["107.3"],"通过隐式原型传递给了构造函数的实例":["107.3"],"这样一来实例就很容易能够访问到构造函数原型上的方法和属性了":["107.3"],"我们之前也说过":["107.3"],"属性是对象":["107.3"],"独有的":["107.3"],"那么":["107.3"],"那":["107.4"],"函数是不是也有构造函数呢":["107.4"],"显然是有的":["107.4"],"code":["107.4","137.3"],"通过输出看到":["107.4"],"第二次":["108.0"],"也会提升到顶部":["108.0"],"也为":["108.0"],"之下的":["108.0"],"才是":["108.0"],"所以此时打印的是":["108.0"],"第二个例子中也是如此":["108.0"],"先提升到顶部":["108.0"],"为":["108.0"],"再去给":["108.0"],"赋值":["108.0"],"赋值结果为":["108.0"],"所以打印的是":["108.0"],"实际的运行结果为":["108.0"],"浏览器会":["109.2"],"重新绘制":["109.2"],"受影响的部分到屏幕中":["109.2"],"该过程称为":["109.2"],"dom树":["109.3","109.4"],"创建之后创建":["109.3"],"会计算dom节点的样式信息":["109.3"],"会触发":["109.4"],"reflow回流":["109.4"],"页面第一次渲染":["109.4"],"除了":["109.5"],"尽量一次性修改":["109.6"],"所以很多浏览器都会优化这些操作":["109.7"],"浏览器会维护1个队列":["109.7"],"两者区别是":["110.8"],"方法从右向左操作的":["110.8"],"第三个以及后面的多个参数表示从第一个参数的值的位置开始被插入的元素":["110.18"],"setmap":["110.21"],"newmap":["110.21"],"生成的数字范围":["110.22"],"但比分别调用这两个方法稍微更高效一些":["110.23"],"引用数据类型":["111.1"],"这个数据有着原始数据属性值的一份精确复制":["111.2"],"如果属性是基本类型":["111.2"],"name2":["111.3","123.9"],"xka":["111.3"],"love":["111.3"],"beautiful":["111.3"],"属性为对象时":["111.6"],"浅拷贝是复制":["111.6"],"如何实现一个深拷贝":["111.7"],"响应速度":["112.1"],"过期":["112.2"],"如果命中则直接从缓存中获取资源":["112.2"],"否则进入下一步":["112.2"],"没有命中强缓存":["112.2"],"强制缓存失效":["112.3"],"则直接向服务器发起请求":["112.3"],"跟第一次发起请求一致":["112.3"],"那么客户端与服务端的时间因为某些原因":["112.4"],"例如时区不同":["112.4"],"客户端与服务端有一方时间不准确":["112.4"],"发生误差":["112.4"],"那么强制缓存则会直接失效":["112.4"],"这样的话强制缓存的存在就毫无意义":["112.4"],"在http":["112.4"],"1中":["112.4"],"是最重要的规则":["112.4"],"主要用于控制网页缓存":["112.4"],"取值有以下几种":["112.4"],"public":["112.4"],"所有内容都被缓存":["112.4"],"客户端和代理服务都可缓存":["112.4"],"由服务器根据缓存标识决定是否使用缓存的过程":["112.5"],"主要分为两种情况":["112.5"],"是服务器响应请求时":["112.6"],"返回该资源文件在服务器最后被修改的时间":["112.6"],"则是客户端再次发起该请求时":["112.6"],"携带上次请求返回的":["112.6"],"通过此字段告诉服务器":["112.6"],"该资源上次请求返回的最后被修改时间":["112.6"],"服务器收到该请求":["112.6"],"生效则直接使用缓存":["112.7"],"若不生效则进行协商缓存":["112.7"],"modified":["112.7","137.3"],"如果一个类别b":["113.0"],"继承自":["113.0"],"speed":["113.1"],"由汽车的这个类可以派生出":["113.1"],"轿车":["113.1"],"货车":["113.1"],"两个类":["113.1"],"在汽车的基础属性上":["113.1"],"为轿车添加一个后备箱":["113.1"],"借助call":["113.2"],"getname":["113.4"],"第二次调用":["113.5"],"call":["113.5","113.8"],"clone":["113.7"],"original":["113.7"],"friends":["113.8"],"getfriends":["113.8"],"获取当前窗口的路径":["114.0"],"pathname":["114.0"],"获取当前窗口的源信息":["114.0"],"获取当前窗口的协议":["114.0"],"protocol":["114.0"],"mousemove":["115.0"],"等事件在触发时":["115.0"],"节流是指程序在n秒内只运行一次":["115.1"],"oldtime":["115.2"],"apply":["115.2"],"定时器写法":["115.2"],"毫秒后第一次执行":["115.2"],"第二次事件停止触发后依然会再一次执行":["115.2"],"若在这个时间段内被重复触发":["115.3"],"保存this指向":["115.4"],"参数对象":["115.4"],"降低回调执行频率":["115.5"],"节省计算资源":["115.5"],"差异":["115.5"],"手机号":["115.6"],"邮箱验证输入检测":["115.6"],"进行了封装":["117.0"],"对一些特殊用例进行优化":["117.0"],"提供替代的api":["117.0"],"使得":["117.0"],"在非浏览器环境下运行得更好":["117.0"],"直到数据正常返回":["117.1"],"再去处理数据":["117.1"],"从而提升了执行效率":["117.1"],"事件驱动的编程思想主要是通过事件或者状态变化来进行应用程序的流程控制":["117.1"],"一般通过事件驱动来完成":["117.1"],"一旦事件被监测到":["117.1"],"则调用响应的回调函数":["117.1"],"简单来说":["117.1"],"就是当异步任务执行的时候":["117.1"],"t2":["119.1","119.2","119.8","119.9"],"t1":["119.2","119.4"],"不会改变这一点":["119.5"],"只会让":["119.5"],"变为只读":["119.5"],"的实现如下":["119.5"],"的第一个参数":["119.6"],"用作对象的键名":["119.6"],"第二个参数":["119.6"],"的键值类型":["119.6"],"可以是联合类型":["119.6"],"t3":["119.7","119.12"],"t4":["119.7","119.10","119.12"],"any":["119.10"],"t5":["119.10","119.11"],"math":["119.10"],"random":["119.10"],"t6":["119.10","119.11"],"上面实例中":["119.11"],"的返回值会包括函数的参数名":["119.11"],"这一点需要注意":["119.11"],"如果参数类型":["119.11"],"不是带有参数的函数形式":["119.11"],"会报错":["119.11"],"报错":["119.11","119.17"],"它可以返回一些内置构造方法的参数类型":["119.12"],"errorconstructor":["119.12"],"functionconstructor":["119.14"],"regexpconstructor":["119.14"],"的参数都是typescript内置的原生对象的构造函数类型":["119.14"],"所以返回值就是这些构造函数的实例类型":["119.14"],"由于":["119.14"],"class作为类型":["119.14"],"代表实例类型":["119.14"],"要获取它的构造方法":["119.14"],"必须把它当成值":["119.14"],"如果它的类型参数不是":["119.15"],"上面示例中":["119.16","119.17"],"something":["119.17"],"wrong":["119.17"],"正确":["119.17"],"的类型是一个正常的对象类型与":["119.17"],"组成的交叉类型":["119.17"],"现代typescript高级教程":["120.0"],"中一种特殊的数据类型":["121.0"],"允许我们为一组数值设定友好的名字":["121.0"],"conssole":["121.1"],"上述示例中":["121.3"],"就是一个计算所得项":["121.3"],"上面的例子不会报错":["121.3"],"但是如果紧接在计算所得项后面的是未手动赋值的项":["121.3"],"上面例子编译结果是":["121.4","121.5"],"定义的类型只会用于编译时的检查":["121.5"],"编译结果中会被删除":["121.5"],"泛型":["122.1"],"generics":["122.1"],"字符串数组为":["122.2"],"除此之外":["122.2"],"我们也可以使用泛型":["122.2"],"elemtype":["122.2"],"返回":["122.3"],"我们在函数名后使用了":["122.3"],"其中":["122.3"],"表示任意类型":["122.3"],"后面的":["122.3"],"参数和函数返回值就可以直接使用":["122.3"],"了":["122.3"],"在调用时":["122.3"],"我们传入":["122.3"],"类型":["122.3"],"表示指定它的类型为字符串":["122.3"],"当然也可以不指定类型":["122.3"],"由类型推断自动推断出来":["122.3"],"它的":["122.4"],"类型是":["122.4"],"的类型是":["122.4"],"定义函数的形状":["122.4"],"类型确定情况":["122.4"],"isearchfunc":["122.4"],"zerovalue":["122.5"],"作用是":["123.1"],"构造类型":["123.1"],"并将它所有的属性设置为可选的":["123.1"],"它的返回类型表示输入类型的所有子类型":["123.1"],"hasownproperty":["123.1"],"as":["123.1"],"hasownpropertu":["123.1"],"seconds":["123.1"],"在函数中定义":["123.2"],"getunointype":["123.2"],"收窄":["123.3"],"这里使用":["123.4"],"操作符将":["123.4"],"值的类型范围收窄到":["123.4"],"dog":["123.5"],"bark":["123.5"],"layeggs":["123.6"],"fish":["123.6"],"swim":["123.6"],"pet":["123.6"],"是字符串字面量或字符串字面量类型":["123.7"],"并且":["123.7"],"是个联合类型":["123.7"],"通常没什么用处":["123.8"],"尽管可以运行":["123.8"],"name3":["123.9"],"上时":["123.10"],"现实的却是这个字面量类型":["123.10"],"alias":["123.10"],"错误的初始化":["123.11"],"表示待推断的函数参数":["123.12"],"整句的含义为":["123.12"],"如果":["123.12"],"能赋值给":["123.12"],"这才是真正让你入门typescript类型体操的文章":["123.13"],"custidcard":["125.0"],"身份证名称":["125.0"],"身份证号码":["125.0"],"showtoast":["125.0"],"微信版本过低":["125.0"],"暂时无法使用此功能":["125.0"],"请升级微信最新版本":["125.0"],"fail":["125.0"],"兼容版本":["125.0"],"读数字":["125.0"],"android":["125.0"],"微信6":["125.0"],"4及以上版本":["125.0"],"集合":["127.1"],"每个节点都有一个指针和指向它的下一个节点":["127.1"],"最后一个指针指向":["127.1"],"插入":["127.2"],"操作":["127.2"],"所以从":["127.2"],"起点":["127.2"],"中间":["127.2"],"插入或移除元素具有很高的成本":["127.2"],"链表插入":["127.2"],"range":["127.4"],"和指向":["127.5"],"下一个节点的链接":["127.5"],"双线链表":["127.5","127.6"],"conmpareoriginal":["127.6"],"doublylinkedlistnode":["127.6"],"双向链表节点":["127.6"],"previous":["127.6"],"vallback":["127.6"],"callback":["127.6"],"doublylinkedlist":["127.6"],"comparatorfunction":["127.6"],"双向链表的头节点":["127.6"],"doublylinkedisnode":["127.6"],"用于比较的函数":["127.6"],"将新的节点插入到头部":["127.6"],"prepend":["127.6"],"创建新的节点作为头部节点":["127.6"],"newnode":["127.6"],"如果存在头部节点":["127.6"],"以便删除未使用的代码":["129.0"],"支持webassembly":["129.0"],"wasm":["129.0"],"webassembly提供了原生的支持":["129.0"],"使得在项目中使用webassembly更加方便":["129.0"],"支持es6模块导入":["129.0"],"或简称语法树":["130.1"],"是源代码语法结构的一种抽象表示":["130.1"],"body":["130.2"],"variabledeclaration":["130.2"],"declarations":["130.2"],"variabledeclarator":["130.2"],"identifier":["130.2"],"语法分析":["130.3"],"构建ast":["130.3"],"抽象语法树":["130.3"],"进行词法分析的程序或者函数叫作":["130.4"],"词法分析器":["130.4"],"lexical":["130.4"],"analyzer":["130.4"],"简称lexer":["130.4"],"也叫":["130.4"],"也就是说":["131.1"],"转换后代码的每一个位置所对应的转换前的位置":["131.1"],"有了它":["131.1"],"大部份源码需要转换才能放在浏览器中运行":["131.2"],"chrome浏览器中默认是开启了soruce":["131.3"],"使用eval包裹模块代码":["131.4"],"不包含":["131.4"],"列信息":["131.4"],"也不包含":["131.4"],"loader":["131.4"],"sourcemap":["131.4"],"包含":["131.4"],"chunks":["131.5"],"sourceurl":["131.5"],"特点":["131.5"],"index页面":["131.7"],"原始源代码":["131.8"],"所以":["131.9"],"比较推荐配置":["131.9"],"devtool":["131.9"],"引擎":["133.1"],"内容":["134.1"],"但生成了新的提交id":["134.1"],"bash":["134.1"],"快速解决线上问题":["134.2"],"提取特定功能":["134.2"],"分支a":["134.2"],"上开发了一个新功能":["134.2"],"但由于计划安排暂时不能将其合并到主分支":["134.2"],"合并冲突后结果":["134.3"],"55b234d":["134.3"],"fri":["134.3"],"mar":["134.3"],"0800":["134.3"],"changed":["134.3"],"insertion":["134.3"],"deletion":["134.3"],"会尝试将指提交所做的所有更改应用到当前分支":["134.3"],"如果没有冲突":["134.3"],"会自动创建一个新的提交":["134.3"],"这个提交包含了与原始提交相同的更改":["134.3"],"单据有新的提交哈希":["134.3"],"本地安装了git":["135.0"],"your":["135.1"],"github":["135.1"],"username":["135.1"],"然后再输入命令":["135.1"],"email":["135.1"],"这里说明一下":["135.1"],"尖括号里输入的是你的github账号":["135.1"],"第二个尖括号输入的是与你github绑定的电子邮箱":["135.1"],"第三步":["135.1"],"现在需要将你的电脑和github账号通过sshkey绑定":["135.1"],"可以简单的概括为":["136.1"],"merge":["136.2"],"将dev分支合并到当前分支":["136.2"],"合并完成后":["136.2"],"g":["136.2","137.2"],"现在abcdefg属于master":["136.2"],"g是一次合并后的结果":["136.2"],"可以指定分支名":["136.3"],"分支名":["136.3"],"注意之间有空格":["136.3"],"fetch":["136.4"],"master":["136.4"],"changes":["137.2"],"pull":["137.2"],"again":["137.2"],"see":["137.2"],"note":["137.2"],"about":["137.2"],"fast":["137.2"],"forwards":["137.2"],"help":["137.2"],"push失败了":["137.2"],"说明a在我之前已经提交了":["137.2"],"我本地master分支的提交历史已经落后远端了":["137.2"],"需要先pull一下":["137.2"],"与远端同步后才能push":["137.2"],"enumerating":["137.2"],"objects":["137.2"],"counting":["137.2"],"compressing":["137.2"],"total":["137.2"],"publish":["137.3"],"local":["137.3"],"you":["137.3"],"have":["137.3"],"unmerged":["137.3"],"paths":["137.3"],"run":["137.3"],"abort":["137.3"],"mark":["137.3"],"resolution":["137.3"],"打开文件":["137.3"],"进行修改":["137.3"],"原文件":["137.3"],"fmt":["137.3"],"println":["137.3"],"修改后":["137.3"],"现在通过add添加":["137.3"],"然后commit提交":["137.3"],"一个repo通常是由一个team中的多个人共同维护":["138.0"],"如果需要增加新feature":["138.0"],"是git中用于将一个分支的提交应用到另一个分支上的命令":["138.1"],"它主要作用是将一个分支上的修改":["138.1"],"interractive":["138.2"],"即弹出交互式页面让用户编辑完成合并操作":["138.2"],"则指定了一个编辑的区间":["138.2"],"是可选的":["138.2"],"如果不指定":["138.2"],"则该区间默认终点是当前分支head所指向的commit":["138.2"],"注":["138.2"],"该区间指定的是一个前开后闭的区间":["138.2"],"针对与我们之前创建的提交":["138.2"],"具体执行以下命令":["138.2"],"但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其它操作":["139.1"],"想要推送某个分支但又不想包含当前所有的更改":["139.1"],"命令":["139.2","139.6"],"save":["139.3"],"用于查看执行stash操作的存储列表":["139.4"],"列表格式类似于下面这种格式":["139.4"],"显示做了哪些改动":["139.5"],"默认show第一个存储":["139.5"],"显示第一个存储的改动":["139.6"],"如果想显示其它存存储":["139.6"],"但不会把存储从存储列表中删除":["139.7"],"默认使用第一个存储":["139.7"],"删除":["139.8"],"并将对应修改应用到当前的工作目录下":["139.8"],"默认为第一个":["139.8"],"存储":["139.9"],"直接执行stash是不会被存储的":["139.10"],"不保存新建文件":["139.10"],"branch":["140.1"]},{"0":["4.0","6.0","7.0","27.0","36.0","44.10","53.5","63.31","63.37","64.21","73.13","81.3","81.5","81.8","81.10","87.3","87.9","87.18","87.22","87.30","88.6","88.9","88.15","89.5","103.3","103.16","119.14","137.2","139.7","139.8"],"1":["20.2","22.0","22.2","23.2","26.1","50.3","63.22","66.20","67.2","67.42","69.5","69.9","69.36","74.20","75.6","81.1","87.16","87.18","97.1","102.13","103.7","103.16","106.1","108.0","110.8","110.19","122.3","122.4","123.2"],"2":["15.1","44.9","50.3","50.5","64.24","64.28","64.33","64.48","67.2","67.13","69.7","69.9","74.19","74.20","81.3","81.10","87.16","87.23","88.10","88.11","89.2","102.2","103.7","103.13","103.14","103.16","105.4","110.3","110.5","110.19","110.23","121.1"],"3":["4.0","12.6","16.5","44.9","54.5","64.21","64.27","64.48","69.3","73.14","73.22","74.20","74.21","75.2","82.0","87.13","87.16","87.23","88.12","88.23","93.2","98.0","103.16","105.1","105.7","107.1","110.3","110.5","110.6","110.7","110.19","110.23","117.1","138.2"],"4":["4.0","50.3","63.37","63.42","63.51","64.26","64.48","73.15","74.21","74.24","78.11","82.0","87.16","87.17","93.2","110.1","110.3","110.4","110.5","110.6","110.7","110.9","110.10","110.11","110.13","110.15","110.19","110.23","137.2"],"5":["4.0","8.0","63.51","64.25","73.13","74.21","81.4","82.0","87.15","87.16","87.17","98.0","103.13","103.14","110.1","110.4","110.6","110.7","110.9","110.10","110.11","110.12","110.13","110.17","110.20"],"6":["74.21","76.0","81.3","103.13","110.12","110.21","131.8","137.2"],"7":["0.0","17.0","76.0","122.3","125.0"],"8":["0.0","17.0","26.1","102.7"],"9":["0.0","102.7"],"10":["0.0","64.31","82.0","102.7","105.2","110.22"],"11":["0.0"],"12":["102.6"],"13":["102.6"],"14":["88.23"],"20":["130.2"],"21":["130.2"],"23":["130.2"],"25":["81.4","81.10"],"26":["103.11"],"40":["59.2"],"42":["123.1"],"50":["69.39","73.15","81.2","81.4","81.9","81.13"],"65":["87.7"],"75":["81.4"],"89":["69.39"],"97":["87.9"],"100":["81.2","81.5","81.14","82.0"],"123":["88.6"],"200":["74.16","90.0"],"204":["63.4"],"o":["2.0","63.37"],"或":["2.0","31.4","63.3","67.35","69.60","98.0"],"nlogn":["2.0"],"具体取决于排序的时间复杂度":["2.0"],"需要注意的是":["2.0"],"在使用夹逼原则时":["2.0"],"要保证数组或列表已经有序":["2.0"],"否则可能会得到错误的结果":["2.0"],"此外":["2.0"],"对于一些特殊情况":["2.0"],"还需要考虑边界条件和指针移动的终止条件":["2.0"],"以确保算法的正确性":["2.0"],"typescript":["2.0","6.0","8.0","73.11","74.12","103.13","122.2"],"const":["2.0","9.0","44.8","53.15","78.2","88.23","89.9","103.13","106.4","110.8","110.23","122.2","123.6","123.10"],"threesum":["2.0"],"number":["2.0","6.0","9.0","11.0","58.2","69.3","78.12","87.12","88.8","89.4","103.13","107.1"],"array":["2.0","3.0","6.0","54.7","57.1","75.5","111.3","119.10","123.2"],"len":["2.0"],"length":["2.0","7.0","36.0","74.7","121.4","122.4"],"if":["3.0","7.0","36.0","51.4","63.36","66.18","67.33","75.5","75.8","78.6","90.0","97.1","103.12","112.7","123.4"],"push":["3.0","36.0","67.54","75.5"],"return":["3.0","9.0","30.3","33.2","35.0","57.1","73.9","87.3","88.15","88.22","101.2","105.5","105.7","122.4","123.2"],"from":["3.0","54.7","73.11","73.24","81.6","131.7","137.2"],"new":["3.0","50.3","50.5","54.6","63.33","63.44","89.13","89.18","97.5","107.4","113.5","113.8"],"set":["3.0","89.16","89.26"],"arr":["3.0","63.44","75.1","87.13","88.6","103.13","110.8","111.3","122.2"],"param":["5.0"],"do":["5.0","100.0","137.3"],"not":["5.0"],"anything":["5.0"],"modify":["5.0"],"in":["5.0","25.0","81.1","81.5","81.6","81.7"],"place":["5.0","73.15"],"instead":["5.0"],"选择较长的一个作为结果":["6.0"],"求解":["6.0","8.0"],"getlongesthump":["6.0"],"let":["6.0","7.0","44.10","75.4","89.13","89.18","97.2","97.5","107.4","113.8","127.4","127.6"],"maxlength":["6.0"],"sort":["7.0"],"a":["7.0","30.4","35.0","87.25","123.1"],"b":["7.0","119.6","123.1"],"numindex":["7.0"],"for":["7.0","11.0","27.1","74.7","74.12","75.16","88.15","89.24","89.27"],"k":["7.0"],"主要是通过双指针存储临时变量来求解":["8.0"],"danger":["8.0","51.4","67.28"],"注意":["8.0","27.4","89.1","134.1"],"下面第一个方法执行完成后":["8.0"],"返回的数字是正确的":["8.0"],"但数组可能不会修改成我们所需要的数组":["8.0"],"function":["9.0","24.1","30.3","33.2","63.31","63.36","66.9","66.13","89.4","89.5","108.0","111.4","119.11"],"createcounter":["9.0"],"两者相等":["10.0"],"示例2":["10.0"],"数组中不存在满足此条件的中心下标":["10.0"],"示例3":["10.0"],"str":["11.0","95.4"],"string":["11.0","50.3","89.26","107.1","110.16","123.8","125.0"],"map":["11.0","50.5","69.18","89.13","131.5","131.9"],"希望能对大家学习angularjs有一定帮助":["12.1"],"txt":["12.1"],"如果您在阅读过程中":["12.1"],"angular":["12.2"],"show":["12.3","13.0"],"hide":["12.3","13.0"],"重复语句":["12.3","13.0","17.0"],"repeat":["12.3","13.0","17.0","25.0"],"过滤器":["12.3","17.0"],"我向您推荐w3school网站":["12.4"],"您可以在这个网站上快速的了解相关的知识":["12.4"],"另外":["12.4","52.0"],"在javascript方面":["12.4"],"如果您有一定的php经验":["12.4"],"我向您推荐这本书":["12.4"],"我形成了一套app的构建思路":["12.5"],"因此":["12.5","12.8","29.2","127.2","127.6"],"可以对api的访问限制和安全性进行更完善的设计实现":["12.6"],"前端网站托管在阿里云的oss上":["12.6"],"界":["12.7"],"hu":["12.7"],"一点也不":["12.8"],"学习dom入门给我的感觉与之一模一样":["12.8"],"因为当时并不知道还有javascript框架这种东西存在":["12.8"],"我去网上搜索教程时也是一头雾水":["12.8"],"我想了一个笨办法":["12.8"],"直接在一个国外的网站上购买了一套后台管理系统界面的模板":["12.8"],"浏览了下源代码之后":["12.8"],"我发现源码提供了两套版本":["12.8"],"一套完全基于jquery":["12.8"],"bootstrap的版本":["12.8"],"和一套基于angularjs的版本":["12.8"],"两个版本的界面布局一模一样":["12.8"],"可用":["12.9"],"的网站":["12.9"],"为了使用更地道的方式制作这个新版网站":["12.9"],"新版本angular":["12.10"],"2抛弃了controller":["12.10"],"service":["12.10"],"完全用directive":["12.10"],"这点与我的技术构想不符":["12.10"],"查看该许可协议":["12.11"],"attribution":["12.11"],"noncommercial":["12.11"],"international":["12.11"],"cc":["12.11"],"bower":["14.0","15.2","15.6"],"获取包括angularjs在内的各种开发库":["14.0"],"为了使用bower":["14.0"],"您可能还需要安装如下工具":["14.0"],"我使用的是英文版的webstorm":["14.1"],"目前网络上也存在有汉化包":["14.1"],"如果希望使用汉化界面的朋友可以自行搜索尝试":["14.1"],"在学习本书的过程中":["14.1"],"您可以使用webstorm的30天尝试版本":["14.1"],"这样可以直接下载完整的安装包":["14.2"],"直接在google搜索chrome的官网页面下载的是一个小型下载器":["14.2"],"在国内无法正确安装":["14.2"],"windows":["14.3","98.0"],"os":["14.3"],"x":["14.4","20.2","22.0","22.2","24.0","25.0","26.1","102.6","119.14"],"会需要您输入本机的密码":["14.4"],"sudo":["14.4"],"选择":["15.0"],"file":["15.0"],"如下图所示":["15.1","74.19"],"图2":["15.1"],"一些项目配置文件":["15.2"],"如":["15.2","34.2","109.4"],"如果不想通过命令行创建":["15.3"],"terminal":["15.4"],"currently":["15.5"],"installed":["15.5"],"components":["15.5"],"as":["15.5"],"dependencies":["15.5"],"将常用的忽略文件项添加到列表":["15.5"],"add":["15.5","102.2","102.7"],"commonly":["15.5"],"ignored":["15.5"],"files":["15.5","137.2"],"ignore":["15.5"],"list":["15.5","31.5","78.12"],"将项目设置为私有":["15.5"],"防止其被误发布到网络上":["15.5"],"would":["15.5"],"you":["15.5"],"like":["15.5"],"mark":["15.5"],"将组件库下载到特定的目录":["15.6"],"在项目根目录创建":["15.6"],"的配置已经全部结束":["15.7"],"本章开始":["16.0"],"doctype":["16.2","20.1","21.0","26.1","33.0"],"lang":["16.2","16.4","21.0","26.1","33.0"],"zh":["16.2","16.4","21.0","26.1","33.0"],"head":["16.2","16.4","33.0","134.3","136.4","138.2"],"如果在运行环境中":["16.3"],"您应该将angular":["16.3"],"js替换为angular":["16.3"],"meta":["16.4","26.1","33.0"],"我在windows电脑上遇到了相同的问题":["16.5"],"请将webstorm使用管理员权限打开":["16.5"],"运行效果如下图所示":["16.5"],"filter":["17.0"],"样式选择器":["17.0"],"class":["17.0","46.3","119.14"],"而是直接显示hello":["18.0"],"我们可以尝试下将表达式中的内容替换为如下内容":["18.0"],"并观察运行的结果":["18.0"],"假设":["19.1"],"scope中有template":["19.1"],"url":["19.1","26.5","63.3","63.22","67.18"],"http":["19.1","63.22","69.50","114.0"],"这个对象":["19.1"],"和":["19.2","50.0","55.2","63.13","67.36","67.54","97.3","119.11"],"设置为":["19.3"],"text":["19.3","32.0","32.5","64.17","67.28","74.14"],"然后给它配置一个":["19.3"],"可以将网页自动初始化为一个angularjs应用":["20.0"],"这样你才能在网页中使用各种angularjs提供的功能":["20.0"],"比如前一节介绍的基本表达式功能":["20.0"],"并将":["20.1"],"ng":["20.1","21.5","22.1","25.0","25.3","25.4","26.4","32.5","33.0"],"配置进去即可":["20.1"],"app":["20.3","29.1","44.10"],"hello":["21.0","51.7","66.10","87.6","87.31","88.14","89.29","123.1"],"同时":["21.0","25.2"],"我们在":["21.0","69.5"],"index":["21.0","69.18","74.24","87.30","89.4","121.4"],"html":["21.0","24.0","24.1","25.3","25.4","26.2","26.4","27.0","29.0","32.3","32.6","34.0","64.41","67.6"],"中进行一些代码修改":["21.0"],"最终代码如下":["21.0"],"声明ng":["21.2"],"controller的方法":["21.2"],"firstctrl":["21.2","21.5","25.4","26.4","30.0","32.7","33.1"],"这个ng":["21.2"],"中的数据和html代码绑定起来":["21.3"],"传入":["21.3"],"的数据":["21.3"],"可以直接在html代码中调用":["21.3"],"在上面的例子中":["21.3"],"我们对":["21.3"],"data":["21.4","31.4","42.2","44.10","50.3","53.16","66.10","137.2"],"message":["21.4","32.7","67.47","69.9"],"controller":["21.5","25.4","26.4","30.0","32.7","33.1"],"学习angularjs":["22.0","22.2","26.1"],"body":["22.0","22.2","33.1"],"将firstctrl绑定到这个div标签上":["22.0"],"这个标签中的内容将可以使用firstctrl中的数据":["22.0"],"div":["22.0","22.1","23.0","25.3","25.4","26.2","26.4","26.5","27.0","32.3","32.6","33.1","34.0","51.5","67.27","67.44"],"h1":["22.1","34.4"],"world":["22.1","87.3","87.4","87.6","88.14"],"如果data":["23.0"],"则显示此段文字":["23.0"],"p":["23.0","32.1","32.5","32.6","34.4","67.42","138.2"],"如果使用":["23.1"],"来控制元素是否显示":["23.1"],"则在不显示的情况下":["23.1"],"我们将这些数据显示在html的一个表格中":["24.0"],"table":["24.0","24.1","44.10"],"tr":["24.0","24.1","25.0"],"alert":["24.1"],"点击了第":["24.1"],"行的按钮":["24.1"],"将刚才的表格也进行一些改造":["24.1"],"jerry":["25.0","25.3"],"orderby":["25.0"],"对显示的数据列表按照name进行排序":["25.0"],"结果为显示顺序harry":["25.0"],"json":["25.1"],"对list的内容进行排序后输出成json文本":["25.1"],"join":["25.2","123.2"],"我们利用最早的hello":["25.2"],"world的例子":["25.2"],"将我们定义的":["25.2"],"这个过滤器应用上去":["25.2"],"tom":["25.3"],"对于最后一项":["25.4"],"我们可以采取如下输入方法来应用":["25.4"],"style":["26.0","26.3","32.0","64.18"],"并加入对应的代码":["26.1"],"全部代码如下":["26.1"],"charset":["26.1"],"utf":["26.1"],"title":["26.1"],"此处引入style":["26.1"],"css样式文件":["26.1"],"orange":["26.3","69.39"],"3em":["26.4"],"修改html代码如下":["26.4"],"input":["26.4","78.5","87.30"],"type":["26.4","32.0","46.3","64.30","67.38","82.0","119.3","137.2"],"image":["26.5","64.14","64.32"],"img":["26.5"],"products":["26.5"],"product":["26.5"],"也可以传入一个函数":["26.5"],"主要用于解决ie11中背景图片不显示的问题":["26.5"],"getbackgroundstyle":["26.5"],"蓝色":["27.0","27.2","27.3"],"blue":["27.0","27.3","121.4"],"黄色":["27.0"],"yellow":["27.0"],"保存选中的状态":["27.0"],"默认颜色设置为黑色":["27.0"],"colorchosen":["27.0"],"color":["27.1","67.29","74.18","81.5","81.11","81.12","121.4"],"name":["27.1","32.1","32.4","32.5","50.4","78.12","82.0","97.2","111.4","125.0"],"亮色":["27.2"],"红色":["27.2","27.3"],"red":["27.2","27.3","51.5","121.4"],"true":["27.3","35.0","50.5","63.37","87.5","88.6","89.7","123.7"],"以下代码中":["27.4"],"for后面有一个":["27.4"],"空格":["27.4","97.2"],"如果没有":["27.4","64.41"],"则无法成功运行":["27.4"],"这是因为传入":["27.4"],"的其实是一串文本":["27.4"],"我建议您在阅读后续内容之前":["28.0"],"对本章内容进行一次回顾":["28.0"],"可以称之为":["29.0"],"自定义html标签":["29.0"],"举个例子":["29.0"],"angularjs可以让我们进行如下的html编码":["29.0"],"可能像我一样对前端经验不太足的读者们":["29.2"],"scope":["30.0"],"harry":["30.0","32.4"],"男":["30.0","32.3","32.4"],"我们调用了":["30.1"],"函数来告诉angularjs加入一个新的directive":["30.1"],"调用这个函数":["30.1"],"我们需要传入2个参数":["30.1"],"我们这里看看替换后实际的html代码如何":["30.2"],"图5":["30.2"],"e":["30.3","63.37","78.5","87.15","89.29"],"element":["30.4","110.16"],"people":["30.4","32.4"],"使用了它":["31.0"],"但是":["31.0","34.1"],"每个单词的首字母大写":["31.1"],"peoplelistarray":["31.2"],"而javascript对大小写敏感":["31.3"],"头":["31.4"],"冒号":["31.5"],"而如果我们在ng":["31.6"],"app和ng":["31.6"],"controller前加上data":["31.6"],"前缀":["31.6"],"link":["32.0","67.12"],"css":["32.0","55.2","73.14","74.22","74.26","81.14","84.0"],"rel":["32.0"],"stylesheet":["32.0"],"href":["32.0","95.2"],"template":["32.1","34.4","52.5","67.27","69.3","69.13","74.20","74.21","78.8"],"姓名":["32.1","125.0"],"性别":["32.1","32.5","32.6"],"sex":["32.1","32.3","32.4"],"是告诉这个directive它需要自己存储信息":["32.2"],"类似于建立一个基于这个directive的":["32.2"],"model":["32.5","67.36"],"button":["32.7","51.7","66.4","66.5","67.31","69.13"],"提交":["32.7"],"click":["32.7","51.1","67.31","69.13","69.21"],"代码片段开始":["33.1"],"代码片段结束":["33.1"],"form":["33.1","34.0","63.44","110.21"],"directive":["33.1"],"的命令":["34.0"],"未加上":["34.0"],"转变为json格式输出":["34.0"],"是因为":["34.0"],"本身涉及循环引用":["34.0"],"因此无法转化为json":["34.0"],"对应的html代码":["34.0"],"bind":["34.2","98.0"],"addclass":["34.2","34.5"],"removeclass":["34.2"],"等来直接对元素进行操作":["34.2"],"实现我们期望的功能":["34.2"],"jquery":["34.3"],"save":["34.3"],"在":["34.3","117.1"],"标题":["34.4"],"这里是段落文字":["34.4"],"mouseenter":["34.5"],"strike":["34.5"],"restrict":["35.0"],"通过transclude标签将directive变为一个容器":["35.0"],"注意template中的ng":["35.0"],"供其它directive调用的注册函数":["36.0"],"this":["36.0","63.18","63.36","66.19","67.46","69.21","96.1"],"注意templateurl的命名":["36.0"],"templateurl":["36.0"],"gqtablist":["36.0"],"获取gqtabcontainer这个directive":["36.0"],"这样在利用angularjs构建网站时":["37.0"],"x相关的文档来自于":["38.0"],"响应快":["40.1"],"用户体验好":["40.1"],"会大量占用服务端cpu资源":["40.2"],"api":["42.1","66.6","66.17"],"mixin":["42.1"],"provide":["42.1","69.1"],"数据驱动视图":["42.2"],"ui":["42.2","73.16"],"渲染界面不应该直接操作dom":["42.2"],"componentwillreceiveprops":["42.3","69.26"],"shouldcomponentupdate":["42.3"],"componentwillupdate":["42.3"],"hooks更加简洁":["42.4"],"reactdom":["42.5","73.20","73.23"],"finddomnode":["42.6"],"方法的警告":["42.6"],"可以创建一个文件":["42.7"],"js将数据保存在data中":["42.7"],"babel之类的变异工具转换为js文件执行":["42.8"],"js可以被打包工具直接编译不需要额外的转换":["42.8"],"react":["42.9","74.0"],"boolean":["42.10","98.0","119.9","119.10","119.15"],"false":["42.10","67.35","123.7","130.2"],"errorhandler":["42.10"],"console":["42.10","66.4","73.9","87.4","87.8","87.13","87.18","87.31","88.3","88.11","88.14","103.9","103.10","110.1","110.13","110.15","110.17","110.20","110.21","113.3","113.6","113.8","123.11","131.7"],"此时就会有个依据去判断是原生dom标签还是react组件":["42.11"],"版本之后":["42.12"],"官方推出了fragment的概念":["42.12"],"当需要在react组件中访问":["42.13"],"修改或验证表单元素的值时":["42.13"],"但它是异步的":["43.0"],"所以可能会在浏览器的下一个绘制周期之后才会执行":["43.0"],"不需要立即同步读取或更改dom":["43.1"],"如果不关心可能的微小布局跳动或闪烁":["43.1"],"异步的":["43.2"],"useeffect":["43.2"],"如果代码在服务器端渲染":["43.3"],"跟":["44.0"],"usestate":["44.0"],"dispatch":["44.1","44.10"],"第一个参数是":["44.3"],"state":["44.3","44.5","66.13"],"或者initialarg":["44.7"],"刚进入页面的时候是不会执行的":["44.8"],"仍然是只读的":["44.8"],"来更新状态的纯函数":["44.9"],"它接收当前状态":["44.9"],"和一个动作对象":["44.9"],"根据action":["44.9"],"type来决定如何更新state":["44.9"],"如果action":["44.9"],"type是":["44.9"],"则":["44.9","103.4"],"default":["44.10","67.38","78.3","78.5"],"reducer函数根据传入的action更新商品列表的状态":["44.10"],"查找要操作的商品item":["44.10"],"对不同的action":["44.10"],"type执行相应的操作":["44.10"],"将商品数量增加1":["44.10"],"将商品数量减少1":["44.10"],"删除指定商品":["44.10"],"切换商品的编辑状态":["44.10"],"更新商品的名称":["44.10"],"app组件":["44.10"],"usereducer":["44.10"],"cellpadding":["44.10"],"onclick":["45.1","66.4","66.5","69.19","69.21"],"current":["45.1"],"diff算法避免了没有必要的dom操作":["46.0"],"虚拟dom是一个对象":["46.1"],"而真实的dom是dom结构":["46.1"],"在虚拟dom中":["46.2"],"virtualdom":["46.3"],"props":["46.3","66.6"],"children":["46.3"],"所以性能会比真实的dom操作提升不少":["46.5"],"info":["46.5","53.10","89.1","110.14","119.5","123.9","134.1"],"虚拟dom的优势其实是在于它的diff算法和批量处理策略":["46.5"],"从而磨平各个浏览器事件兼容性问题":["46.6"],"redux的":["47.0"],"connect":["47.0"],"函数":["47.0","53.5","63.37","63.45","108.0","122.3"],"它将redux":["47.0"],"store":["47.0","67.57","112.4"],"用于在函数式组件中执行副作用的操作":["47.1"],"比如订阅事件":["47.1"],"数据获取":["47.1"],"dom操作等等":["47.1"],"它接收一个函数作为参数":["47.1"],"这个函数就是副作用代码":["47.1"],"还可以接收第二个参数":["47.1"],"用于指定副作用操作的依赖项":["47.1"],"用于引用":["47.2"],"dom":["47.2","52.5","73.23"],"元素或者保存值":["47.2"],"usestate的值会被重新渲染":["47.2"],"useref的值则不会":["47.2"],"名称匹配的组件":["49.0"],"会被缓存":["49.0"],"child1":["49.0"],"child2":["49.0"],"is":["49.0"],"componentname":["49.0"],"正则":["49.0"],"在没有原生":["50.0"],"promise":["50.0"],"mutationobserver":["50.0"],"的情况下才会改用":["50.0"],"执行栈":["50.1"],"执行栈使用到的是数据结构中的栈结构":["50.1"],"它是一个存储函数调用的栈结构":["50.1"],"遵循":["50.1"],"先进后出":["50.1"],"的原则":["50.1"],"它主要负责跟踪所有要执行的代码":["50.1"],"每当一个函数执行完成时":["50.1"],"就会从堆栈中探出":["50.1"],"pop":["50.1"],"这个执行完成的函数":["50.1"],"因为每次派发更新都会引起渲染":["50.2"],"所以把所有watcher都放到nexttick里调用":["50.2"],"flushschedulerqueue":["50.2"],"这里参数":["50.2"],"方法会被放到事件循环":["50.2"],"phantomjs":["50.3"],"ios7":["50.3"],"android":["50.3"],"counter":["50.3"],"observer":["50.3","54.4"],"textnode":["50.3"],"document":["50.3","73.20","114.0"],"createtextnode":["50.3"],"observe":["50.3"],"characterdata":["50.3"],"timerfunc":["50.3"],"test":["50.4","87.29"],"避免在事件循环周期内多次创建新的微任务":["50.5"],"把flushjobs推入到任务队列等待执行":["50.5"],"这个方法负责处理队列任务":["50.5"],"主要逻辑如下":["50.5"],"先处理前置任务队列":["50.5"],"根据":["50.5"],"排队队列":["50.5"],"遍历执行队列任务":["50.5"],"执行完毕后清空并重置队列":["50.5"],"执行后置队列任务":["50.5"],"如果还有就递归继续执行":["50.5"],"seen":["50.5"],"countmap":["50.5"],"正在执行":["50.5"],"dev":["50.5"],"开发环境下":["50.5"],"flushpreflushcbs":["50.5"],"执行前置任务队列":["50.5"],"排序队列":["50.5"],"以确保":["50.5"],"从父到子":["50.5"],"因为父级总是在子级前面先创建":["50.5"],"如果符组件更新期间卸载了组件":["50.5"],"vue3":["50.6","52.5"],"dosomething":["51.1","100.0"],"这里的参数是要监听的事件名称":["51.1"],"有一个相应的缩写":["51.1"],"即":["51.1","139.8"],"动态参数":["51.1"],"同样在指令参数上也可以使用一个javascript的表达式":["51.1"],"需要包含在一个方括号内":["51.1"],"attributename":["51.1"],"当":["51.3","51.4","69.60","74.10"],"元素被触发":["51.3"],"元素及其所包含的指令":["51.3"],"组件都会销毁或重构":["51.3"],"如果初始条件是假":["51.3"],"那么其内部的内容根本不会被渲染":["51.3"],"id":["51.4","67.22","69.13","78.12","92.0","135.1"],"与":["51.4"],"优先级":["51.4"],"同时使用时":["51.4"],"内联字符串拼接":["51.5"],"path":["51.5","67.23","67.35","67.54"],"to":["51.5","89.5","131.4"],"images":["51.5"],"filename":["51.5","90.0"],"isred":["51.5"],"classa":["51.5"],"classb":["51.5"],"trim":["51.6"],"移除输入内容两端空格":["51.6"],"vue":["51.6","52.5","67.26","67.30","69.13"],"方法处理函数":["51.7"],"dothis":["51.7"],"动态事件":["51.7"],"内联声明":["51.7"],"dothat":["51.7"],"的基础上做了一些改变":["52.0"],"主要是针对最后两个生命周期":["52.0"],"beforeunmount":["52.0","52.4"],"unmounted":["52.0","52.4"],"组件数据发生变化":["52.1"],"更新之前":["52.1"],"update":["52.1"],"组件数据更新之后":["52.1"],"获取到的是挂载":["52.2"],"的":["52.2","67.56","69.3","69.5","75.15","119.17"],"在此阶段可获取到":["52.2"],"此阶段":["52.2"],"虽已完成dom初始化":["52.2"],"但并未挂载在":["52.2"],"是比":["52.3"],"要更早的":["52.3"],"destroyed":["52.4"],"这些钩子函数的执行顺序与vue2的版本相同":["52.4"],"但有所不同的是":["52.4"],"在vue3中":["52.4"],"暴露公共属性":["52.5"],"expose":["52.5"],"onbeforemount和onmounted":["52.5"],"onbeforemount":["52.5"],"都是":["52.5"],"中的生命周期钩子":["52.5"],"它们分别在组件":["52.5"],"挂载":["52.5"],"之前和之后运行":["52.5"],"钩子函数会在组件挂载到dom前运行":["52.5"],"可以用来在组件挂载前执行一些初始化操作":["52.5"],"钩子函数会在组件挂载到":["52.5"],"后运行":["52.5"],"通常用于获取数据和初始化页面状态等操作":["52.5"],"默认是懒侦听的":["53.1"],"调整回调函数的操作":["53.2"],"一个ref":["53.3"],"例如等待中的异步请求":["53.4","67.50"],"当侦听多个来源时":["53.4","67.50"],"回调函数接收两个数组":["53.4"],"count":["53.5"],"watch":["53.5","53.9"],"深层级变更状态所触发的回调":["53.5"],"侦听一个":["53.5"],"getter":["53.5"],"log":["53.8","66.4","72.26","73.9","87.4","87.5","87.8","87.13","87.18","87.31","88.3","88.11","88.14","89.10","89.31","103.9","103.10","105.6","110.1","110.15","110.17","110.20","110.21","113.3","113.6","113.8","123.11","131.7"],"相同":["53.9"],"仅在数据源确定改":["53.12"],"变时才会触发回调":["53.12"],"callback":["53.13"],"javascript":["53.15","63.31","66.8","66.9","87.10","87.22","87.27","89.13","89.18","97.5","104.1","104.2","110.8"],"ref":["53.16","69.11"],"代码更新":["54.1"],"的状态被更新":["54.2"],"如果此时可以自动更新":["54.2"],"应用的展示效果":["54.3"],"各类ui组件":["54.3"],"compile":["54.5","54.6"],"同时定义一个更新函数":["54.5"],"watcher":["54.5"],"将来对应数据变化":["54.5"],"proxy":["54.6","89.7"],"执行编译":["54.6"],"el":["54.6"],"遍历子元素":["54.7"],"foreach":["54.7","75.5","101.1","101.2"],"node":["54.7","55.4","127.3"],"判断是否为节点":["54.7"],"iselement":["54.7"],"updatefn":["54.8"],"创建实例时":["54.8"],"把当前实例指定到":["54.8"],"target静态属性上":["54.8"],"target":["54.8","66.4","78.5"],"读一下key":["54.8"],"触发get":["54.8"],"置空":["54.8"],"null":["54.8","119.7","127.1","130.2"],"未来执行dom更新函数":["54.8"],"都通过单个页面的加载而检索":["55.2"],"或者根据需要":["55.2"],"通常是为响应用户操作":["55.2"],"contentful":["55.3"],"首次内容绘制":["55.3"],"顾名思义":["55.3"],"它代表浏览器第一次向屏幕绘制":["55.3"],"内容":["55.3"],"只有首次绘制文本":["55.3"],"图片":["55.3","112.0"],"包含背景图":["55.3"],"非白色的":["55.3"],"canvas":["55.3"],"ssr":["55.4"],"服务端渲染也可以解决首屏加载慢这个问题":["55.4"],"因为服务端会把所有数据全部渲染完成在返回给客户端":["55.4"],"请求":["55.4","75.7"],"解析":["55.4"],"返回给客户端":["55.4"],"带请求数据":["55.4"],"但是需要解决":["55.4"],"node层的高并发问题":["55.4"],"路由懒加载":["55.4"],"可以通过":["55.4","67.20","76.0","134.2"],"plugin":["55.4"],"syntax":["55.4"],"dynamic":["55.4","129.0"],"fs":["57.3"],"exports相当于是对":["57.3"],"module":["57.3","100.0","129.0"],"exports的引用":["57.3"],"两者等价":["57.3"],"️":["58.1"],"v":["58.2"],"报错":["58.2","88.10"],"known2":["58.2"],"类型也不能够直接调用上面的方法和属性":["58.2"],"foo":["58.2"],"此时为":["58.3"],"else":["58.3","75.5","123.2"],"更新了面试相关的":["59.1"],"更新了面试相关的javascript相关":["59.3"],"更新了":["59.4"],"浏览器":["62.0"],"为什么javascript是弱类型语言":["63.1"],"弱类型语言实现相对于强类型语言来说的":["63.1"],"在强类型语言中":["63.1"],"get":["63.3","66.4","69.49","75.6","102.6"],"post":["63.3","75.6"],"以及请求的":["63.3"],"然后使用":["63.3","69.7","69.9"],"send":["63.3","90.0"],"方法发送请求":["63.3"],"处理响应":["63.3"],"在回调函数中":["63.3"],"readystate":["63.3","63.36"],"属性判断请求的状态":["63.3"],"而且这个请求最终会不会处理还不确定":["63.4"],"表示服务器已经成功处理了请求":["63.4"],"但没有返回任何实体内容":["63.4"],"可能会返回新的头部元信息":["63.4"],"闭包就是函数的局部变量集合":["63.6"],"只是这些局部变量在函数返回后会继续存在":["63.6"],"关键字外":["63.7"],"我们在实际情况下经常遇到这样一种情况":["63.7"],"即有的函数只需要执行一次":["63.7"],"最终可能导致程序崩溃":["63.8"],"产生场景":["63.8"],"对象或变量未被正确销毁":["63.8"],"当一个对象或变量不再被使用时":["63.8"],"应该及时将它们从内存中删除":["63.8"],"如果没有正确销毁这些对象或变量":["63.8"],"它们所占用的内存就会一直存在":["63.8"],"造成内存泄漏":["63.8"],"性能也会变差":["63.10"],"但利用事件委托":["63.10"],"就只对它的父级进行操作":["63.10"],"减少了调用的对象":["63.10"],"节省了内存空间":["63.10"],"但这个有兼容性":["63.11"],"从外向里":["63.12"],"这个阶段不会响应任何时间":["63.12"],"localstorage":["63.13"],"sessionstorage":["63.13"],"是永久性的":["63.13"],"除非通过代码或者浏览器设置进行删除":["63.13"],"而":["63.13","136.1"],"ming":["63.16"],"类型的":["63.17"],"但是每个函数都具有一个":["63.17"],"prototype":["63.17","63.18","88.8","89.4","105.5","111.3"],"属性":["63.17","71.4","98.0","123.1"],"内部":["63.18"],"创建一个新对象":["63.18"],"使新对象的":["63.18"],"proto":["63.18","105.5","113.8"],"指向原函数的":["63.18"],"改变":["63.18"],"指向":["63.18"],"指向新的obj":["63.18"],"并执行该函数":["63.18"],"回调地狱":["63.20"],"异步操作方法前加一个":["63.21"],"关键字":["63.21"],"的长度":["63.22"],"为了明确这个概念":["63.22"],"我们必须再次强调以下几点":["63.22"],"是一个查找的过程":["63.23"],"可以不用每次都与数据库连接":["63.23"],"来实现的":["63.24"],"是":["63.25","66.3","89.6","125.0"],"dom二级事件新增的指定事件处理程序的操作":["63.25"],"这个方法接收三个参数":["63.25"],"区别":["63.26"],"offsetheight区别":["63.27"],"是鼠标的横纵坐标":["63.28"],"我们用":["63.28"],"offsetx":["63.28"],"collection":["63.30"],"javascript的姐时期可以检测到何时程序不在使用一个对象了":["63.30"],"当它确定了一个对象是无用的时候":["63.30"],"它就知道不再需要这个对象":["63.30"],"可以把它所占用的内存释放掉了":["63.30"],"的时候":["63.31"],"就会把所占的内存给回收进来":["63.31"],"这样垃圾收集器再次运行的时候":["63.31"],"就会释放引用次数为":["63.31"],"的这些值":["63.31"],"引用计数法存在":["63.31"],"内存泄漏":["63.31"],"problem":["63.31"],"缺点":["63.32"],"如果id不再user对象中":["63.32"],"则不能监听id的变化":["63.32"],"在es6中":["63.32"],"考虑原型链":["63.33"],"为什么考虑原型链":["63.33"],"因为在":["63.33"],"一个":["63.33"],"过程中生成新函数的时候":["63.33"],"必须条件就是要继承原函数原型":["63.33"],"201107240502201179":["63.35"],"jpg":["63.35"],"onload":["63.35","90.0"],"onreadystatechange":["63.36"],"complete":["63.36"],"newstr":["63.37"],"h":["63.37","88.7","89.29","102.8","136.2"],"l":["63.37"],"bol":["63.37"],"newbol":["63.37"],"valueof":["63.37","102.6"],"所有对象都有":["63.37"],"方法":["63.37","67.35","69.7","87.12","89.1","89.7"],"j":["63.38"],"所以会有跨域问题出现":["63.40"],"跨域问题来源于":["63.40"],"域名":["63.41"],"网址后面加斜杠":["63.42"],"www":["63.42"],"campr":["63.42"],"com":["63.42"],"指向的是window":["63.43"],"不能拷贝":["63.45"],"undefined":["63.45","111.4"],"map循环方法不会对空数组进行检测":["63.46"],"object":["63.47","106.0","107.3","113.7","123.1","125.0"],"create":["63.47","113.7"],"我去喊你一起吃饭":["63.48"],"你很忙":["63.48"],"我就坐着等你忙完再一起去吃饭":["63.48"],"https是由":["63.50"],"ssl":["63.50"],"协议构建的可进行加密传输":["63.50"],"托管资源":["63.51"],"使用缓存":["63.51"],"按照一定的条件活着需求":["63.52"],"gif":["64.1"],"文件大小相对较小":["64.2"],"支持高度压缩":["64.2"],"支持透明度":["64.3"],"无损压缩":["64.3"],"透明度":["64.4"],"适合存储简单的动画图像":["64.4"],"内容宽高":["64.5","73.2"],"内填充":["64.5","73.2"],"边界边框":["64.5","73.2"],"content":["64.7","74.18","83.0"],"视频区域的高度":["64.9"],"autoplay":["64.9"],"是否自动播放":["64.9"],"视频类型":["64.10"],"支持ogg":["64.10"],"mp3":["64.10"],"表单属性":["64.11"],"nav":["64.12"],"导航栏":["64.12"],"aside":["64.12"],"侧边栏":["64.12"],"article":["64.12"],"加载页面一块独立内容":["64.12"],"设施边框图像":["64.14"],"source":["64.14","87.23","131.5","131.9"],"规定":["64.15"],"position":["64.15","81.9","81.14"],"允许长的内容可以自动换行":["64.17"],"轴":["64.18"],"指定嵌套元素怎么样在三位空间中呈现":["64.18"],"2d":["64.18"],"duration":["64.19"],"动画需要花费的时间":["64.20"],"timing":["64.20"],"之后":["64.21"],"超出部分会被隐藏":["64.21"],"在浮动元素后面加一个空标签并设置属性":["64.21"],"clear":["64.21"],"both":["64.21"],"height":["64.21","81.14"],"fixed":["64.22"],"固定定位":["64.22"],"子父元素款素固定":["64.24"],"top":["64.25","64.26","81.3","81.8","81.9"],"创建一个隐藏节点":["64.25"],"子元素相对定位":["64.26"],"子元素":["64.26"],"left":["64.26","81.3","81.8","81.9"],"值为":["64.26"],"中间栏放最后":["64.27"],"绝对定位法":["64.27"],"左右两栏采用绝对定位":["64.27"],"none":["64.28","109.3"],"n":["64.30","100.0","127.2"],"查找第几个子元素":["64.30"],"of":["64.30","78.12","88.15","89.24","89.27","103.11"],"查找同已类型第几个":["64.30"],"only":["64.30"],"class选择器":["64.31"],"伪类选择器":["64.31"],"内联元素":["64.32"],"字母间距":["64.32"],"letter":["64.32"],"spacing":["64.32"],"段落间距":["64.32"],"word":["64.32"],"使用图片预加载技术":["64.33"],"sup":["64.34"],"u":["64.34","122.3","123.1"],"textarea":["64.34"],"会独占一行":["64.34"],"自身边距到自身内容之间的距离":["64.35"],"当需要在":["64.35"],"wrap":["64.36"],"设置弹性盒子的子元素超出父容器时是否换行":["64.36"],"flow":["64.36"],"font":["64.38"],"size":["64.38"],"中所有的字体都是相对于父元素的大小决定的":["64.38"],"相对于":["64.38"],"就是根据不同的媒体类型设置不同的css样式":["64.39"],"标记语言":["64.40"],"的版本标准来解析文档":["64.41"],"dragenter":["64.42","71.3"],"事件主体是目标元素":["64.42"],"在被拖放元素进入某元素时触发":["64.42"],"交互阶段":["64.43"],"页面加载完成":["64.43"],"同样的":["64.44"],"css如果不是在页面构建前加载":["64.44"],"则可以加上取消阻止显示的标志":["64.44"],"降低关键资源大小":["64.44"],"或者":["64.45","73.8","109.5","123.3","138.2"],"cssom":["64.45"],"来触发的":["64.45"],"链接层和实体层":["64.48"],"物理层":["64.48"],"每层都有相关的协议和功能":["64.48"],"并且需要下一层的支持":["64.48"],"它们的功能以及依赖关系":["64.48"],"如下图":["64.48"],"网络传输数据包装":["64.48"],"应用层http协议的通信请求":["64.48"],"规定应用程序的数据格式":["64.48"],"基于传输层tcp协议的tcp连接":["64.48"],"传输层的tcp连接":["64.48"],"负责传输数据包":["64.48"],"基于网络层ip协议分配ip地址连通网络和链接层mac地址":["64.48"],"网卡地址":["64.48"],"确认接收主机":["64.48"],"网络层的数据发送":["64.48"],"基于连接层将实体层发出的电信号分组并且解读":["64.48"],"通过arp协议利用ip地址获取到mac地址":["64.48"],"实体层":["64.48"],"就是电脑间链接的介质":["64.48"],"比如光纤":["64.48"],"电缆等等":["64.48"],"maxmum":["64.49"],"user":["64.49","71.5"],"执行":["64.50"],"然后触发":["64.50"],"会重叠":["64.51"],"重叠结果为":["64.51"],"使用":["66.1","73.21","74.3","78.4","131.5","134.1"],"usecallback可以确保子组件在依赖项未变化时不会因为接收到新的函数引起不必要的重新渲染":["66.1","69.32","78.4"],"在某些情况下":["66.1","69.32","78.4"],"可以配合":["66.1","78.4"],"usememo":["66.1","78.3","78.4"],"然后":["66.2","121.2"],"虚拟dom计算组件先前状态和更新状态之间的差异":["66.2"],"mvvm":["66.3"],"模式":["66.3","66.15"],"虚拟":["66.3"],"不一样":["66.3"],"会跟踪每一个组件的依赖关系":["66.3"],"不需要重新渲染整个":["66.3"],"组件树":["66.3"],"increment":["66.5","78.5"],"另一方面":["66.5"],"调用或设置事件侦听器":["66.6"],"componentdidupdate":["66.6"],"当组件的":["66.6"],"或状态更改时调用此方法":["66.6"],"setvalue":["66.7"],"的函数将在渲染提交到屏幕后执行":["66.8"],"或者如果将依赖项数组作为第二个参数传递":["66.8"],"则每次其中一个依赖项更改时都会调用该函数":["66.8"],"handlechange":["66.9"],"将数据及其相关逻辑与组件分开是一种很好的做法":["66.11"],"其次":["66.11"],"本地状态也用于表示列表中单个项的组件中":["66.12"],"appreducer":["66.13"],"initialstale":["66.13"],"action":["66.13","89.5"],"some":["66.14"],"也还可以选择天机一些数据作为载荷":["66.14"],"并允许用户进行数据转换":["66.16"],"过滤":["66.16"],"fetch是现代浏览器提供的一种用于发起网络请求的api":["66.17"],"使用promise对象处理异步操作":["66.17"],"fetch更加简洁和现代化":["66.17"],"提供了更有好的api来处理网络请求":["66.17"],"这是因为react需要依赖hook调用的顺序来却顶hook对应的状态":["66.18"],"如果hook调用的顺序发生改变":["66.18"],"可能会导致程序出现错误或不符合预期的行为":["66.18"],"而在":["66.18"],"来访问这些数据":["66.19"],"生成虚拟dom树":["66.20"],"首先":["66.20"],"将当前的dom结构抽象为虚拟dom树":["66.20"],"并且生成待更新的新虚拟dom树":["66.20"],"通过比较两棵虚拟dom树":["66.21"],"高阶函数":["66.22"],"模型的框架":["67.1"],"当模型数据发生变化时":["67.2"],"视图将自动更新":["67.2"],"双向数据绑定":["67.2"],"是指同时将视图中的元素绑定到模型数据":["67.2"],"并将模型数据绑定到视图中的元素":["67.2"],"当视图或模型中的数据发生变化时":["67.2"],"另一部分将自动更新":["67.2"],"mvvm优点":["67.2"],"关注点分离":["67.2"],"mvvm模式通过明确的分层将数据":["67.2"],"用户界面和业务逻辑分离开来":["67.2"],"这有助于提高代码可维护性和可测试性":["67.2"],"使开发人员更容易地修改":["67.2"],"扩展和维护不同的部分":["67.2"],"代码重用":["67.2"],"可以根据不同的视图需求进行调整":["67.2"],"都会刷新为最新的值":["67.3"],"数据从父组件传递给子组件":["67.3"],"captrue":["67.4"],"添加事件侦听器时使用事件捕获模式":["67.4"],"就是谁有该事件修饰符":["67.4"],"就先触发谁":["67.4"],"self":["67.4"],"只会触发自己范围内的事件":["67.4"],"不包括子元素":["67.4"],"once":["67.4"],"叫指令":["67.7"],"可以渲染输出":["67.8"],"可以使用键值对形式":["67.9"],"会对节点进行检查":["67.10"],"如果没有key值":["67.10"],"那么vue检查到这里有":["67.10"],"vue会在它依赖的任何值导致该计算属性改变时更新":["67.11"],"进行跳转的叫声明式":["67.12"],"包括不支持":["67.15"],"html5":["67.15"],"的重新渲染":["67.16"],"hash":["67.16"],"模式是优先监听":["67.16"],"popstate":["67.16"],"事件":["67.16"],"不行就降级为":["67.16"],"hashchange":["67.16"],"history":["67.17"],"模式在内部传递的实际url之前使用了一个哈希字符":["67.18"],"由于这部分":["67.18"],"从未被发送到服务器":["67.18"],"routes":["67.19"],"history模式的url中没有":["67.19"],"号":["67.19"],"采用传统的路由分发模式":["67.19"],"即用户输入":["67.19"],"将记录添加到栈中":["67.20"],"query方式与区别":["67.21"],"component":["67.22"],"useprofile":["67.22"],"在页面中调用":["67.22"],"search":["67.23","114.0","122.4"],"使用路由参数":["67.24"],"query":["67.24"],"非标识性信息":["67.24"],"active":["67.28"],"isactive":["67.28"],"haserror":["67.28"],"activecolor":["67.29"],"fontsize":["67.29"],"可以实现表单输入和数据的双向绑定":["67.30"],"beforeenter":["67.34"],"可以控制路由导航的行为":["67.35"],"调用":["67.35"],"表示继续导航":["67.35"],"中止当前的导航":["67.35"],"子组件":["67.37","73.7"],"props接收父组件传递过来的数据":["67.37"],"是一个对象":["67.37","107.1"],"但是不要直接去找操作修改props的值":["67.37"],"type属性定义接收的数据类型":["67.37"],"defineprops":["67.38"],"接收父组件传递的值":["67.38"],"属性定义接受的数据类型":["67.38"],"属性设置默认值":["67.38"],"父组件接收":["67.40"],"引入组件":["67.40"],"注册组件":["67.40"],"定义事件":["67.40","67.41"],"接收并使用传递的值":["67.40","67.41"],"父组件中使用自定义事件接收":["67.41"],"自定义事件名称必须与子组件传递的一致":["67.41"],"即等号前面名称":["67.41"],"父组件":["67.43"],"monkey":["67.44","67.45"],"child":["67.45","113.4"],"等同于":["67.45","87.20"],"and":["67.46","98.0"],"i":["67.46","74.7","136.2"],"am":["67.46"],"years":["67.46","102.7"],"old":["67.46"],"year":["67.46","102.6"],"bigturnipprops":["67.47"],"用于侦听一个或者多个响应式数据源":["67.48"],"value":["67.49","75.5","78.5","89.31","97.2"],"oldvalue":["67.49","67.51"],"oncleanup":["67.49"],"cleanupfn":["67.49"],"void":["67.49"],"以及一个用于注册副作用清理的回调函数":["67.50"],"该回调函数会在副作用下一次重新执行前调用":["67.50"],"可以用来清除无效的副作用":["67.50"],"如果回调函数":["67.51"],"由于深层级的变更而被触发":["67.51"],"那么新值和旧值将会是同一个对象":["67.51"],"newvalue":["67.51"],"适用于需要在数据变化时执行异步或复杂操作的场景":["67.52"],"是否调用缓存":["67.52"],"函数所依赖的属性不变的时候会调用缓存":["67.52"],"怎么解决白屏问题":["67.53"],"路由器":["67.54"],"router是":["67.54"],"router的实例":["67.54"],"包含了整个路由器的配置信息":["67.54"],"可以理解为全局的路由控制器":["67.54"],"它提供了一些方法和属性":["67.54"],"比如":["67.54","131.4","134.1"],"replace":["67.54","95.4"],"go":["67.54"],"home":["67.55"],"views":["67.55"],"about":["67.55"],"等":["67.56","69.26"],"技术":["67.56"],"使得生成的代码更加紧凑和高效":["67.56"],"tree":["67.56"],"shanking的支持":["67.56"],"vue3在设计上更加友好用于":["67.56"],"shanking":["67.56"],"使得在应用中使用vue3时能够更好地利用打包模块工具":["67.56"],"如webpack":["67.56"],"对应这个数据的组件也会发生改变":["67.57"],"相当于":["67.57"],"的计算属性":["67.57"],"主要是对":["67.57"],"面试":["69.0","71.0"],"defineexpose":["69.1"],"prop":["69.3","88.6"],"它的类型是":["69.3"],"并设置了默认值为0":["69.3"],"之后在":["69.3"],"中":["69.3"],"可以直接使用":["69.3"],"上段代码中":["69.5"],"button中使用":["69.5"],"添加点击事件监听器":["69.5"],"当按钮被点击时":["69.5"],"将调用":["69.5"],"msg":["69.7","107.4"],"变量和一个childmethod的方法":["69.7"],"defineexpose函数将msg和childmethod对外暴露出去":["69.7"],"这样":["69.7"],"我们在父组件中就可以访问子组件的msg属性或者调用":["69.7"],"childmethod":["69.7"],"父组件parent":["69.7"],"子组件child1":["69.9"],"子组件child2":["69.9"],"上面的代码中":["69.9"],"我们在父组件":["69.9"],"中定义了一个响应式数据":["69.9"],"我们在父组件内部使用":["69.11"],"函数定义了两个响应式变量":["69.11"],"并给它们分别赋予初始值":["69.11"],"然后在":["69.11"],"中使用":["69.11"],"在需要通信的组件中":["69.13"],"导入":["69.13","100.0"],"event":["69.13"],"对象并进行事件的监听和触发":["69.13"],"组件first":["69.13"],"first":["69.13","81.6"],"vuex":["69.15"],"的设计模式":["69.15"],"来更新状态":["69.17"],"jsx":["69.17","69.20","131.4"],"错误的方式":["69.17"],"items":["69.18"],"item":["69.18","74.26"],"handleclick":["69.19","69.21"],"typeerror":["69.20"],"请确保在返回之前处理这些情况":["69.20"],"js":["69.22","76.0","100.0","131.4"],"卸载阶段":["69.23"],"unmounting":["69.23"],"来更新":["69.24"],"在组件被创建和每次接收到新的":["69.24"],"render":["69.25"],"getsnapshotbeforeupdate":["69.25"],"prevprops":["69.25"],"prevstate":["69.25"],"componentdidcatch":["69.26"],"但是它缓存的是普通数值而不是回调函数":["69.33"],"这些hook提供了强大的工具":["69.35"],"虚拟滚动列表的实现原理通常包括以下几个步骤":["69.36"],"计算可视区域的高度以及每个列表项的高度":["69.36"],"为lighthouse提供一个需要审查的网址":["69.37"],"验证":["69.38"],"的各个方面的性能情况":["69.38"],"页面的性能评分":["69.38"],"包括首次内容绘制":["69.38"],"推荐":["69.40"],"在链接中添加参数":["69.42"],"通过在一个页面中写入数据":["69.43"],"但是会话存储的数据在会话结束后被清除":["69.44"],"cookies的容量有限":["69.45"],"通过在发送消息的窗口中调用postmessage":["69.46"],"会受到浏览器的同源策略限制":["69.48"],"请求来实现跨域通信的技术":["69.49"],"头部信息":["69.50"],"例如":["69.50","82.0"],"可以发送请求到同源服务器上的代理服务器":["69.51"],"的安全传输令牌":["69.53"],"可以在不同域之间传递身份验证信息":["69.53"],"确保所有参与通信的页面都受信任":["69.54"],"限制通信频率以减少性能影响等":["69.54"],"登录状态不一致":["69.54"],"通过url传递token参数进行登录态校验":["69.54"],"还有iframe的宽高设置":["69.54"],"第三方页面的滚动":["69.54"],"需要设置是根据那个参数滚动的":["69.54"],"微前端的方式":["69.54"],"微前端之前没怎么接触过":["69.54"],"在此做了一些了解":["69.54"],"微前端是一种将前端应用程序拆分为更小":["69.54"],"更可管理的部分":["69.54"],"并独立开发":["69.54"],"测试":["69.54"],"部署的方法":["69.54"],"开发者可以在单个仓库中查找所有相关的代码":["69.55"],"而不需要在多个仓库之间切换":["69.55"],"共享代码":["69.55"],"不同项目之间可以共享代码和资源":["69.55"],"避免了代码重复的问题":["69.55"],"返回的记忆化值可以在组件的渲染过程中使用":["69.56"],"但通常不建议在其它地方调用":["69.56"],"这是因为":["69.56","96.0"],"setitem":["69.60"],"stringify":["69.60"],"发生变化时触发":["69.60"],"返回":["69.60"],"面试二面":["70.0"],"trigger":["70.7"],"当拖动元素进入可放置区域时触发":["71.3"],"draggable":["71.4"],"dragover":["71.6"],"drop":["71.6"],"api几乎是函数":["71.9"],"会有更好的类型推断":["71.9"],"方法来处理异步操作的成功和失败情况":["73.4"],"可以链式调用多个":["73.4"],"从子组件获取的值":["73.9"],"父组件接收到的值":["73.9"],"parent":["73.10"],"fc":["73.10"],"所以可以使用":["73.11"],"context":["73.11"],"来解决这个问题":["73.11"],"再项目目录创建一个":["73.11"],"ts":["73.11","75.16","121.4"],"的文件":["73.11"],"用于创建我们的":["73.11"],"import":["73.11","73.24","129.0"],"createcontext":["73.11"],"onchange事件来传递参数":["73.12"],"缩放":["73.13"],"平移或倾斜":["73.13"],"rotate":["73.13","81.4","81.9"],"45deg":["73.13","81.8","81.9"],"旋转":["73.13"],"translate":["73.13","81.10"],"平移":["73.13"],"scale":["73.13","81.4","81.10"],"属性来控制其子元素的排列方式":["73.14"],"grid":["73.14","73.15","74.20","74.21"],"网格布局":["73.14"],"可以创建复杂的网格结构":["73.14"],"transform":["73.15","81.2","81.4","81.8","81.9","81.10"],"translatey":["73.15","81.4"],"使用网格布局":["73.15"],"操作":["73.16"],"渲染等":["73.16"],"微任务":["73.16"],"那么内部函数存在对外部函数中变量的引用":["73.17"],"实现柯里化":["73.18"],"之后才会有react18的新特性":["73.20"],"tsx":["73.20","73.24"],"getelementbyid":["73.20"],"flushsync":["73.21"],"尽管":["73.21"],"默认以异步方式进行更新":["73.21"],"但在某些情况下":["73.21"],"hook":["73.22"],"版本":["73.22"],"它可以在函数组件中使用":["73.22"],"从而让开发者更方便地控制异步操作的状态":["73.22"],"createroot":["73.22"],"disabledevmode":["73.24"],"函数来禁用严格模式":["73.24"],"在浏览器空闲时间或网络请求等异步操作期间":["73.25"],"可以暂停当前任务":["73.25"],"执行其它具有更高优先级的任务":["73.25"],"以实现更爽快的用户交互体验":["73.25"],"总而言之":["73.25"],"并发模式通过任务调度和优先级机制":["73.25"],"提供了更好的用户体验和性能":["73.25"],"使得":["73.25"],"应用程序能够更加平滑地响应用户操作":["73.25"],"该变量的值为":["74.2"],"当函数没有返回值时":["74.2"],"typeof":["74.3","89.10","119.13","119.14","123.2"],"操作符检测一个值为":["74.3"],"但不适用于基本数据类型":["74.5"],"表示一个值的类型是定义的联合类型中的其中一种":["74.6"],"多余的位数":["74.7"],"extracts":["74.7"],"获取多余的位数":["74.7"],"f可能是0":["74.7"],"即result可能是空字符串":["74.7"],"substring":["74.7"],"每三位添加":["74.7"],"金额对应的字符":["74.7"],"math":["74.7"],"floor":["74.7"],"会卡顿":["74.8"],"它接收一个函数组件":["74.10"],"并返回一个新的组件":["74.10"],"这个新的组件会记住之前渲染的结果":["74.10"],"它会进行浅比较":["74.10"],"如果":["74.10","89.1"],"没有发生变化":["74.10"],"但此时":["74.11"],"仍指向":["74.11"],"因此相当于为":["74.11"],"对象添加了属性":["74.11"],"所以此时":["74.11"],"circular":["74.11"],"可以通过将":["74.12"],"回调函数封装在一个立即调用的函数表达式":["74.12"],"iife":["74.12"],"中来实现":["74.12"],"var":["74.12","81.10","87.21","97.1","105.3","113.3"],"background":["74.14","74.18","81.5","81.11","81.12","83.0"],"19caad":["74.14"],"8cc7b5":["74.14","74.24"],"d1ba74":["74.14"],"bee7e9":["74.14"],"e6ceac":["74.14"],"ecad9e":["74.14"],"align":["74.14"],"center":["74.14","74.26"],"或者一列":["74.16"],"中尽可能的容纳更多的单元格":["74.16"],"表示列宽是":["74.16"],"px":["74.16"],"但列的数量是不固定的":["74.16"],"只要浏览器能够容纳得下":["74.16"],"就可以放置元素":["74.16"],"表示行间距是":["74.17"],"20px":["74.17","81.9"],"表示列间距是":["74.17"],"header":["74.18","97.0"],"sidebar":["74.18"],"rows":["74.19"],"50px":["74.19","81.12"],"第五个项目和第六个项目之间有个空白":["74.19"],"这个是由于第六块的长度大于了空白处的长度":["74.19"],"被挤到了下一行导致的":["74.19"],"先行后列dense":["74.19"],"display":["74.20","74.21","109.3"],"columns":["74.20","74.21"],"100px":["74.21"],"200px":["74.21"],"完全相同":["74.22"],"如果不指定这两个属性":["74.22"],"浏览器完全根据单元格内容的大小":["74.22"],"决定新增网格的列宽和行高":["74.22"],"如果有重叠":["74.24"],"就使用":["74.24"],"z":["74.24"],"常与":["74.25"],"start":["74.26"],"end":["74.26"],"stretch":["74.26"],"得到结果为数组":["75.2"],"第二步":["75.2"],"再调用":["75.2"],"方法过滤出来":["75.2"],"属于异步任务的是":["75.3"],"resultarr":["75.4"],"key":["75.5","78.12","97.1"],"hasownproperty":["75.5"],"isarray":["75.5","119.10"],"请求方法不是":["75.6"],"以确定实际请求":["75.7"],"isnan":["75.8"],"fullfilled":["75.11"],"新的promise的状态变为":["75.11"],"并将所有":["75.11"],"可以使用该类方法":["75.12"],"有了结果":["75.13"],"才会决定新":["75.14"],"的状态":["75.14"],"如果所有的":["75.14"],"resolved":["75.15"],"以及依然处于":["75.15"],"pending":["75.15"],"状态的":["75.15"],"问题1":["75.16"],"描述":["75.16"],"数据结构":["75.16","89.11"],"问题2":["75.16"],"写一个根据用户名称":["75.16"],"查找userid的方法":["75.16"],"并且找到自己的姓名对应的userid":["75.16"],"ts来实现":["75.16"],"getuserid":["75.16"],"递归遍历treedata":["75.16"],"可以表达任意大小的数字":["76.0"],"关于浏览器的限制":["76.0"],"向服务器发送一个自定义":["76.0"],"udp":["76.0"],"包":["76.0"],"读取到用户希望上传的文件内容":["76.0"],"获取用户的操作系统":["76.0"],"浏览器版本":["76.0"],"屏幕分辨率等信息":["76.0"],"获取用户的收藏夹":["76.0"],"历史记录等信息":["76.0"],"关于浏览器的存储机制":["76.0"],"以下说法哪些是正确的":["76.0"],"小红书面试":["78.0"],"memocomponent":["78.2"],"mycomponent":["78.2"],"是一个hook":["78.2"],"用于优化react函数组件内部的计算":["78.2"],"当有一个耗时的计算或者要创建一个复杂的对象":["78.2"],"并且这个计算结果或者对象的依赖没有变化时":["78.2"],"增加":["78.3"],"export":["78.3","78.5"],"在这个例子中":["78.3"],"我们使用":["78.3"],"对":["78.3"],"函数进行了优化":["78.3"],"只有":["78.3"],"变化时":["78.3"],"函数才会被重新创建":["78.3"],"onchange":["78.5"],"的优先级":["78.6"],"的优先级高于":["78.6"],"可以放在一起使用":["78.6"],"但是不建议这么做":["78.6"],"会造成性能上的浪费":["78.6"],"并且不能够放在一起使用":["78.6"],"会报错":["78.6"],"可以在外部添加一个标签":["78.6"],"将":["78.6","131.4"],"移到最外层":["78.6"],"diff算法不同":["78.6"],"更灵活的组合式api":["78.7"],"reflect":["78.8"],"相互配合实现数据响应式":["78.8"],"解决了vue2中视图不能自动更新的问题":["78.8"],"是深度监听":["78.8"],"所以可以监听对象和数组内的任意元素":["78.8"],"从而可以实现视图实时更新":["78.8"],"响应式大致分为三个阶段":["78.8"],"初始化阶段":["78.8"],"初始化阶段通过组件初始化方法形成对应的":["78.8"],"对象":["78.8","89.1","89.4"],"然后形成一个负责渲染的":["78.8"],"effect":["78.8"],"get依赖收集阶段":["78.8"],"通过解析":["78.8"],"差异":["78.9"],"不同点":["78.9"],"可以声明基本类型":["78.9"],"联合类型":["78.9"],"交叉类型":["78.9"],"自适应高度":["78.10"],"footer":["78.10"],"可以访问改变前后的值":["78.11"],"只能获取改变后的值":["78.11"],"在运行的时候":["78.11"],"func":["78.12","105.2"],"record":["78.12"],"maxchar":["78.12"],"maxcount":["78.12"],"统计每个字符出现的次数":["78.12"],"如果当前字符的计数超过了maxcount":["78.12"],"更新maxchar和maxcount":["78.12"],"树形结构":["78.12"],"部门1":["78.12"],"pid":["78.12"],"textanimation3d":["79.0"],"实际效果":["80.0"],"stretchdelay":["81.1"],"2s":["81.1","81.10"],"infinite":["81.1","81.3","81.10"],"ease":["81.1","81.3","81.5","81.7"],"out":["81.1","81.5","81.6","81.7"],"delay":["81.1","81.14"],"perspective":["81.2"],"120px":["81.2"],"rotatey":["81.2"],"180deg":["81.2","81.4"],"absolute":["81.3","81.9","81.13"],"webkit":["81.3","81.9","81.12","81.13"],"animation":["81.3"],"bounce":["81.3","81.5"],"0s":["81.3"],"translatex":["81.4"],"42px":["81.4"],"90deg":["81.4","81.8"],"465efb":["81.5","81.11","81.12"],"border":["81.5","81.11","81.12","81.13"],"radius":["81.5","81.11","81.12","81.13"],"prevent":["81.6"],"frame":["81.6"],"flickering":["81.6"],"when":["81.6"],"starts":["81.6"],"rotatez":["81.8"],"right":["81.8"],"bottom":["81.8"],"relative":["81.9","81.14"],"150px":["81.9","81.13"],"margin":["81.9","81.13"],"75px":["81.9","81.13"],"ms":["81.9","81.10"],"keyframes":["81.10"],"float":["81.11"],"moz":["81.11","81.12","81.13"],"s":["81.14","97.1"],"300px":["81.14"],"width":["81.14"],"属性选择器":["82.0"],"radio":["82.0"],"id选择器":["82.0"],"行内样式":["82.0"],"important":["82.0"],"通过设置元素选择器为1来做对比各种选择器的权重关系":["82.0"],"权重数字":["82.0"],"类":["82.0","98.0"],"layout":["83.0"],"str1":["87.2"],"formcodepoint":["87.7"],"字符串的表达形式":["87.10"],"uncaught":["87.12"],"syntaxerrot":["87.12"],"unexpected":["87.12"],"syntaxerror":["87.12"],"替代函数的":["87.12"],"apply":["87.12","115.4"],"由于扩展运算符可以展开数组":["87.12"],"所以不再需要":["87.12"],"方法转为函数的参数了":["87.12"],"的行为有差异":["87.14"],"空值":["87.14"],"found":["87.15"],"elem":["87.18"],"中只能使用方法一":["87.21"],"标识符":["87.21"],"定义属性":["87.21"],"返回false":["87.22"],"操作符返回true":["87.22"],"只使用新指定的修饰符":["87.27"],"abc":["87.28"],"gi":["87.28"],"𠮷":["87.29"],"groups":["87.30"],"split":["87.32"],"允许为函数的参数设置默认值":["87.34"],"这个运算符的一个特点是右结合":["87.36"],"而不是常见的左结合":["87.36"],"它定义了javascript的语法":["88.0"],"类型":["88.0","119.15","123.4","125.0"],"声明的变量只在其所在的块级作用域中有效":["88.2"],"还有一种情况是不完全解构":["88.5"],"即等号左边的模式":["88.5"],"只匹配一部分等号右边的数组":["88.5"],"d":["88.5","119.8","119.14","140.1"],"嵌套赋值":["88.6"],"如果解构模式是嵌套的对象":["88.6"],"而且子对象所在的父属性不存在":["88.6"],"那么将会报错":["88.6"],"默认值":["88.9"],"函数参数的解构也可以使用默认值":["88.9"],"move":["88.9"],"error":["88.10","89.5"],"引申":["88.10"],"使用函数默认值时":["88.10"],"函数不能有同名参数":["88.10"],"否则会抛出错误":["88.12"],"不可以使用":["88.12"],"arguments":["88.12"],"参数":["88.13","125.0"],"解决":["88.13"],"sum":["88.15","103.8"],"val":["88.15"],"arr2":["88.16"],"它是es6中一个非常方便的特性":["88.19"],"alex":["88.20"],"age":["88.20","112.4"],"表达式还可以用方法名":["88.21"],"getsummary":["88.22"],"书名":["88.22"],"pi":["88.23"],"导出一个函数":["88.23"],"即如果没有":["89.1"],"的介入":["89.1"],"操作原来要访问的就是这个对象":["89.1"],"第二个参数是一个配置对象":["89.1"],"对于每一个被代理的操作":["89.1"],"需要提供一个对应的处理函数":["89.1"],"该函数将拦截对应的操作":["89.1"],"如上面代码中的":["89.1"],"用来拦截对目标对象属性的访问请求":["89.1"],"方法的两个参数分别是目标对象和要访问的属性":["89.1"],"可以看到":["89.1","107.3"],"由于拦截器函数总是返回":["89.1"],"所以访问任何属性都会得到":["89.1"],"要使得":["89.1"],"起作用":["89.1"],"必须针对":["89.1"],"上例是":["89.1"],"进行操作":["89.1"],"而不是针对目标对象":["89.1"],"上例是空对象":["89.1"],"没有设置任何拦截":["89.1"],"那就等同于直接通向原对象":["89.1"],"属性的描述对象":["89.2"],"defineproperty":["89.2","106.3"],"propdesc":["89.2"],"preventextensions":["89.2"],"getprototypeof":["89.2"],"上面代码中":["89.4","89.6"],"拦截操作定义在":["89.4"],"对象上面":["89.4"],"所以如果读取":["89.4"],"继承属性时":["89.4"],"拦截就会生效":["89.4"],"实现数组读取负数的索引":["89.4"],"createarray":["89.4","122.4"],"elements":["89.4"],"handler":["89.4"],"attempt":["89.5"],"private":["89.5","112.4"],"property":["89.5"],"c":["89.5","119.15"],"的实例":["89.6"],"当它作为函数调用时":["89.6"],"就会被":["89.6"],"让操作变成了函数行为":["89.7"],"assign":["89.7"],"对象的方法与":["89.7"],"方法一一对应":["89.7"],"只要是":["89.7"],"对象的方法":["89.7"],"就能在":["89.7"],"对象上找到对应的方法":["89.7"],"这就让":["89.7"],"对象可以方便地调用对应":["89.7"],"完成默认行为":["89.7"],"作为修改行为的基础":["89.7"],"不管":["89.7"],"propkey":["89.8"],"receiver":["89.8"],"获取对象的属性值":["89.8"],"removeobserver":["89.9"],"创建观察者":["89.9"],"observer1":["89.9"],"tostring":["89.10"],"map的键可以是任意类型的值":["89.12"],"创建一个空的":["89.13"],"不接受其它类型的数据":["89.14"],"不用担心这些节点从文档移除时会引发内存泄漏":["89.15"],"添加键值对":["89.16"],"但是它的值是唯一的":["89.17"],"创建一个":["89.18"],"中没有任何其它引用":["89.19"],"临时存放一组对象或存放跟对象绑定的信息":["89.20"],"返回实例":["89.21"],"of循环":["89.22"],"为各种不同的数据结构提供统一的访问机制":["89.23"],"对于遍历器对象来说":["89.25"],"属性都是可以省略的":["89.25"],"因此上面的":["89.25"],"上面代码的扩展运算符内部就调用":["89.28"],"实际上":["89.28"],"这提供了一种简便机制":["89.28"],"可以将任何部署了":["89.28"],"接口的数据结构":["89.28"],"转为数组":["89.28"],"也就是说":["89.28"],"只要某个数据结构部署了":["89.28"],"就可以对它使用扩展运算符":["89.28"],"将其转为数组":["89.28"],"iterable":["89.28"],"char":["89.29"],"函数会返回一个遍历器对象":["89.30"],"next":["89.31"],"done":["89.31"],"status":["90.0"],"获取文件blob数据并保存":["90.0"],"getfilename":["90.0"],"saveas":["90.0"],"response":["90.0"],"url方式保存文件到本地":["90.0"],"鼠标事件触发":["91.0"],"clientx":["91.0"],"鼠标相对于浏览器":["91.0"],"这里说的是浏览器的有效区域":["91.0"],"左上角x轴的坐标":["91.0"],"不随滚动条滚动而改变":["91.0"],"clienty":["91.0"],"左上角y轴的坐标":["91.0"],"pagex":["91.0"],"获取其中某一个参数":["92.0"],"decodeuri":["92.0"],"unit":["92.0"],"方法二":["92.0"],"解析url字符串参数":["92.0"],"标识对发出方发出数据包的接收确认":["93.1"],"sent":["93.1"],"客户端发送同步标志syn后":["93.1"],"进入syn":["93.1"],"sent状态":["93.1"],"recv":["93.1"],"服务端确认客户端的syn包并发送syn包后":["93.1"],"第三次挥手":["93.2"],"服务端数据发送完毕之后":["93.2"],"向客户端发送":["93.2"],"半连接状态下服务器可能又发送了一些数据":["93.2"],"服务器此时进入了":["93.2"],"last":["93.2","112.2"],"ack状态":["93.2"],"第四次挥手":["93.2"],"客户端收到服务器的":["93.2"],"包之后":["93.2"],"ip四层模型":["94.0"],"ip五层模型":["94.0"],"是以":["94.0"],"osi七层":["94.0"],"优化而来":["94.0"],"是一种代码注入攻击":["95.1"],"攻击者通过在目标网站上注入恶意脚本":["95.1"],"注入其它属性或者标签":["95.2"],"在标签的":["95.2"],"src":["95.2"],"等属性中":["95.2"],"反射型":["95.3"],"攻击者将脚本混在url里":["95.3"],"服务端接收到url将恶意代码当作参数取出并拼接在html里返回":["95.3"],"浏览器解析此html后执行恶意代码":["95.3"],"escape":["95.4"],"g":["95.4"],"amp":["95.4"],"riding":["95.5"],"通常缩写为":["95.5"],"csrf":["95.5"],"请求来源限制":["95.6"],"此方法成本最低":["95.6"],"但是并不能保证100":["95.6"],"xss是代码注入问题":["95.7"],"csrf是http问题":["95.7"],"此时打印的是":["96.0"],"通过call函数将a的指向变成了obj这个对象":["96.0"],"所以":["96.0","119.17","127.5"],"它会执行函数":["96.0"],"并且打印出name的值":["96.0"],"call方法还可以传入多个参数":["96.0"],"并立即执行这个函数":["96.1"],"将它们自动添加到":["97.0"],"几乎":["97.0"],"每个对相同域的请求中":["97.0"],"最常见的用处就是用于身份验证":["97.0"],"match":["97.1"],"decodeuricomponent":["97.1"],"它们应该使用内建的":["97.2"],"encodeuricomponent":["97.2"],"函数对其进行转义":["97.2"],"特殊字符":["97.2"],"需要编码":["97.2"],"my":["97.2"],"smith":["97.2"],"admin":["97.3"],"没有user":["97.4"],"但这是可以设置的":["97.4"],"如果我们想允许像":["97.4"],"这样的子域在":["97.4"],"上设置cookie":["97.4"],"也是可以实现的":["97.4"],"为此":["97.4"],"例如我们可以将cookie设置为一天后过期":["97.5"],"当前时间":["97.5"],"1天":["97.5"],"now":["97.5","137.3"],"86400e3":["97.5"],"org":["97.6"],"doc":["97.6"],"empty":["98.0"],"块语句中的内容不能为空":["98.0"],"character":["98.0"],"正则表达式中的":["98.0"],"内容不能为空":["98.0"],"label":["98.0"],"禁止使用空label":["98.0"],"eq":["98.0"],"禁止对null使用":["98.0"],"运算符":["98.0"],"eval":["98.0"],"禁止使用eval":["98.0"],"ex":["98.0"],"禁止给catch语句中的异常参数赋值":["98.0"],"extend":["98.0"],"native":["98.0"],"禁止扩展native对象":["98.0"],"extra":["98.0"],"禁止不必要的函数绑定":["98.0"],"cast":["98.0"],"禁止不必要的bool转换":["98.0"],"parens":["98.0"],"禁止非必要的括号":["98.0"],"semi":["98.0"],"禁止多余的冒号":["98.0"],"fallthrough":["98.0"],"禁止switch穿透":["98.0"],"floating":["98.0"],"decimal":["98.0"],"禁止省略浮点数中的0":["98.0"],"禁止重复的函数声明":["98.0"],"implicit":["98.0"],"coercion":["98.0"],"禁止隐式转换":["98.0"],"implied":["98.0"],"禁止使用隐式eval":["98.0"],"inline":["98.0"],"comments":["98.0"],"禁止行内备注":["98.0"],"inner":["98.0"],"declarations":["98.0"],"functions":["98.0"],"禁止在块语句中使用声明":["98.0"],"变量或函数":["98.0"],"invalid":["98.0"],"regexp":["98.0","119.12"],"禁止无效的正则表达式":["98.0"],"禁止无效的this":["98.0"],"只能用在构造器":["98.0"],"对象字面量":["98.0"],"irregular":["98.0"],"whitespace":["98.0"],"不能有不规则的空格":["98.0"],"禁止使用":["98.0"],"label名不能与var声明的变量名相同":["98.0"],"labels":["98.0"],"禁止标签声明":["98.0"],"lone":["98.0"],"blocks":["98.0"],"禁止不必要的嵌套块":["98.0"],"lonely":["98.0"],"禁止else语句内只有if语句":["98.0"],"loop":["98.0"],"禁止在循环中使用函数":["98.0"],"如果没有引用外部变量不形成闭包就可以":["98.0"],"mixed":["98.0"],"requires":["98.0"],"声明时不能混用声明类型":["98.0"],"spaces":["98.0"],"tabs":["98.0"],"禁止混用tab和空格":["98.0"],"linebreak":["98.0"],"换行风格":["98.0"],"cjs是commonjs的缩写":["100.0"],"经常是这么使用":["100.0"],"importing":["100.0"],"require":["100.0"],"exporting":["100.0"],"导出":["100.0"],"exports":["100.0"],"something":["100.0","137.3"],"数组本身":["101.1"],"返回值":["101.1"],"一个新数组":["101.1"],"每个元素都是回调函数的返回值":["101.1"],"myforeach":["101.2"],"通常会对时间进行下面这几个操作":["102.0"],"比如获取时间":["102.0"],"format":["102.6"],"返回值为字符串类型":["102.6"],"unix":["102.6"],"返回值为数值型":["102.6"],"以毫秒为单位":["102.6"],"获取年份":["102.6"],"seconds":["102.7"],"年份":["102.7"],"月份":["102.7"],"months":["102.7"],"小写的am":["102.8"],"hh":["102.8"],"小时":["102.8"],"24小时制":["102.8"],"00到23":["102.8"],"无前导零":["102.8"],"0到23":["102.8"],"12小时制":["102.8"],"00到12":["102.8"],"diff":["102.9"],"返回毫秒数":["102.9"],"moment":["102.10"],"晚上":["102.11"],"dddd":["102.11"],"星期五":["102.11"],"本周二晚上7点49":["102.13"],"ll":["102.14"],"2019年5月24日":["102.14"],"m":["102.15"],"上一个月月底":["102.15"],"最后":["103.1"],"将其结果汇总为单个返回值":["103.1"],"第一次执行回调函数时":["103.1"],"可选":["103.2"],"否则为array":["103.3"],"的值":["103.3"],"currentvalue":["103.3"],"当前元素的值":["103.3"],"cur":["103.6","103.12","103.15"],"表示的是当前元素":["103.6"],"reduce":["103.8","103.12"],"acc":["103.8","103.12","103.15","103.17"],"表示累加器通过对象操作来控制名称key出现的次数":["103.9"],"输出值为":["103.9"],"groupepeople":["103.10"],"输出结果为":["103.10"],"juliet":["103.11"],"alice":["103.11"],"the":["103.11"],"lord":["103.11"],"myarr":["103.12"],"crr":["103.12"],"includes":["103.12"],"reject":["103.14"],"p2":["103.14"],"fn":["103.17","108.0"],"组合的函数":["103.17"],"实现特定值的乘法":["103.17"],"后执行传入的函数":["104.1"],"只执行一次":["104.1"],"用法":["104.1","104.2"],"示例":["104.2"],"每隔一秒执行一次":["104.2"],"如果队列中已有任务":["104.3"],"那么定时任务的执行可能会受到延迟":["104.3"],"最小延迟时间":["104.3"],"都可以通过":["104.4"],"settimeout":["104.5"],"启动第一次":["104.5"],"progress":["104.6"],"更精准":["104.7"],"因为它与浏览器的重绘同步":["104.7"],"方法调用构造函数时":["105.1"],"构造函数的":["105.1"],"会被绑定到新创建的对象上":["105.1"],"bar":["105.2"],"o3":["105.3"],"上述第一个例子中":["105.3"],"函数返回了this":["105.3"],"并且通过o1对象直接调用":["105.3"],"所以打印项为":["105.3"],"第二个例子中":["105.3"],"arg2":["105.4"],"call":["105.5"],"如果构造函数中出现了显式":["105.5"],"的状况":["105.5"],"那么需要注意":["105.5"],"其可以洗分为两种情况":["105.5"],"执行一个构造函数":["105.5"],"如果返回的是一个对象":["105.5"],"bar1":["105.7"],"输出":["105.7"],"箭头函数的绑定无法被修改":["105.7"],"因此属于优先级高的一列":["105.7"],"除了":["106.0"],"以外":["106.0"],"所有类型都定义了表示在语言最低层面的不可变值":["106.0"],"我们将这些值称为原始值":["106.0"],"bigint":["106.1"],"但是你可以通过":["106.3"],"设置它们":["106.3"],"或通过":["106.3"],"getownpropertydescriptor":["106.3"],"读取它们":["106.3"],"数据属性":["106.3"],"数据属性将键与值相关联":["106.3"],"它可以通过以下属性来描述":["106.3"],"auto":["106.4"],"p1":["107.0"],"它有两个属性":["107.1"],"为每个实例创建重复的属性方法":["107.2"],"而是将属性方法创建在构造函数的原型对象上":["107.2"],"那些不需要共享的方法才被创建在构造函数之中":["107.2"],"也是对象":["107.3"],"它有隐式原型么":["107.3"],"又指向谁呢":["107.3"],"构造函数的原型对象上的隐式原型指向了":["107.3"],"的原型对象":["107.3"],"那么parent的原型对象就继承了object的原型对象":["107.3"],"由此我们可以验证一个结论":["107.3"],"函数的构造函数是":["107.4"],"这点也不奇怪":["107.4"],"因为我们每次定义函数其实都是调用了new":["107.4"],"下面两种效果是一样的":["107.4"],"func1":["107.4"],"介绍完":["108.0"],"变量":["108.0"],"就应该介绍":["108.0"],"变量的提升了":["108.0"],"首先先看一个例子":["108.0"],"这个a会打印1吗":["108.0"],"不会":["108.0"],"打印出来undefined":["108.0"],"当render树":["109.1"],"一定会引起":["109.2"],"不一定会引起":["109.2"],"而且每个页面都至少需要一次":["109.2"],"就是页面第一次开始加载的时候":["109.2"],"可能会有人问":["109.2"],"如果说元素设置成了":["109.3"],"变化":["109.4"],"增删节点":["109.4"],"render树":["109.4"],"padding":["109.4"],"transforms":["109.5"],"opacity":["109.5"],"减少style修改所影响元素的数量":["109.6"],"把所有会引起回流":["109.7"],"newarr":["110.2"],"isbigenough":["110.4"],"warning":["110.16"],"题外话":["110.16"],"方法和":["110.16"],"都是将元素转变为字符串的方法":["110.16"],"但两者又有一些地方有差别":["110.16"],"存在性检查":["110.16"],"在使用":["110.16"],"表示删除掉下标为1的元素后面的元素":["110.18"],"原数组变更为":["110.18"],"indexof":["110.20"],"步长为":["110.22"],"基本数据类型保存在栈内存中":["111.1"],"拷贝的就是基本类型的值":["111.2"],"slice":["111.3"],"one":["111.3"],"two":["111.3"],"three":["111.3"],"arr1":["111.3"],"存在弊端":["111.4"],"转义时会忽略":["111.4"],"symbol":["111.4"],"和函数":["111.4"],"obj":["111.4","123.1"],"name1":["111.4"],"name3":["111.4"],"name4":["111.4","123.9"],"两个对象指向同一个地址":["111.6"],"字体以及应用程序明确请求的任何数据":["112.0"],"即使设备不在线":["112.1"],"则根据请求头的":["112.2"],"modified":["112.2"],"etag":["112.2"],"判断是否命中协商缓存":["112.2"],"不存在缓存标识":["112.3"],"存在该缓存结果和缓存标识":["112.3"],"所有内容只有客户端可以缓存":["112.4"],"的默认取值":["112.4"],"no":["112.4"],"客户端缓存内容":["112.4"],"但是是否使用缓存则需要经过协商缓存来验证决定":["112.4"],"所有内容都不会被缓存":["112.4"],"即不使用强制缓存":["112.4"],"也不使用协商缓存":["112.4"],"max":["112.4"],"xxx":["112.4"],"是数字":["112.4"],"缓存内容将在xxx秒后失效":["112.4"],"协商缓存生效":["112.5"],"发现请求头":["112.6"],"含有":["112.6"],"字段后":["112.6"],"然后根据":["112.6"],"的字段值与该资源在服务器的最后被修改时间做对比":["112.6"],"若服务器的资源最后被修改时间大于":["112.6"],"sinde":["112.6"],"since":["112.7"],"另一个类别a":["113.0"],"给货车添加一个大货箱":["113.1"],"truck":["113.1"],"extends":["113.1","123.1"],"super":["113.1"],"组合继承":["113.2"],"上述代码看似没啥问题":["113.3"],"但实际上是存在潜在问题":["113.3"],"s1":["113.3"],"第一次调用":["113.5"],"手动挂上构造器":["113.5"],"指向自己的构造函数":["113.5"],"person2":["113.6"],"lucy":["113.6"],"getfriends":["113.7"],"person":["113.8"],"来划分不同的继承方式":["113.9"],"获取当前文档的url":["114.0"],"urls":["114.0"],"获取参数":["114.0"],"分隔":["114.0"],"会不断调用绑定在事件上的回调函数":["115.0"],"极大的浪费资源":["115.0"],"降低页面性能":["115.0"],"若在这个时间段内重复触发":["115.1"],"throttleinterval":["115.2"],"timer":["115.2"],"则重新开始计时":["115.3"],"立即执行版本":["115.4"],"immediate":["115.4"],"防抖是在一段连续操作结束后":["115.5"],"处理回调":["115.5"],"利用":["115.5"],"窗口大小":["115.6"],"resize":["115.6"],"的速度非常快":["117.0"],"性能非常好":["117.0"],"运行时建立的平台":["117.0"],"用于方便地搭建响应速度快":["117.0"],"易于扩展的网络应用":["117.0"],"会被放置到任务队列中":["117.1"],"主线程任务完毕后":["117.1"],"会读取任务队列中的事件":["117.1"],"因为任务队列中的每一个异步任务执行完毕后都会在队列中添加一个事件":["117.1"],"而js而js主线程执行完后就会执行这些事件":["117.1"],"从而调起对应的回调函数放入主线程中进行执行":["117.1"],"单线程":["117.1"],"java":["117.1"],"t3":["119.1","119.2","119.8","119.9"],"t4":["119.1","119.8","119.9"],"t1":["119.3"],"的实现如下":["119.4"],"keyof":["119.5"],"ps":["119.5"],"我们可以自定义类型工具":["119.5"],"mutable":["119.5"],"将参数类型的所有属性变为可变属性":["119.5"],"这时会依次展开为多个键":["119.6"],"any":["119.7","119.11"],"t5":["119.7","119.12"],"如果参数类型是泛型参数":["119.10"],"返回值取决于泛型类型":["119.10"],"如果泛型不带有限制条件":["119.10"],"就会返回":["119.10"],"unknown":["119.10"],"t7":["119.10","119.11"],"never":["119.11"],"是两个特殊值":["119.11"],"分别返回":["119.11"],"t8":["119.11"],"constructorparameter":["119.12"],"functionconstructor":["119.12"],"regexpconstructor":["119.12"],"pattern":["119.12"],"flags":["119.12"],"如果参数类型不是构造方法":["119.12"],"如果函数没有":["119.13"],"然后用":["119.14"],"运算符获取它的构造方法类型":["119.14"],"y":["119.14","122.5"],"那么就会原样返回":["119.15"],"给出了函数":["119.16"],"的类型":["119.16"],"并将其中的":["119.16"],"这里的":["119.17"],"的作用是提示":["119.17"],"应该满足":["119.17"],"的条件":["119.17"],"typescript手册":["120.0"],"枚举的定义使用":["121.0"],"从编译结果我们可以看出来":["121.2"],"枚举值递增到":["121.2"],"时与前面":["121.2"],"的值重复了":["121.2"],"导致":["121.2"],"先是":["121.2"],"也是":["121.2"],"所以在赋值时":["121.2"],"最好不要出现这种情况":["121.2"],"那么它就会因为无法获得初始值而报错":["121.3"],"赋值项之后是未赋值的枚举项的报错":["121.3"],"常数项和计算所得项的完整定义":["121.3"],"引用自中文手册":["121.3"],"枚举":["121.3"],"当满足以下条件时":["121.3"],"枚举成员被当作是常数":["121.3"],"不具有初始化函数并且之前的枚举成员是常数":["121.3"],"假如包含了计算成员":["121.4"],"则会在编译阶段报错":["121.4"],"green":["121.4"],"外部枚举与声明语句一样":["121.5"],"是一种强大的类型工具":["122.1"],"它允许我们编写可重用":["122.1"],"来定义一个数组":["122.2"],"通过":["122.3"],"的类型自动":["122.3"],"推断出泛型的类型":["122.3"],"多个类型参数":["122.3"],"定义泛型的时候":["122.3"],"可以一次定义多个类型参数":["122.3"],"swap":["122.3"],"tuple":["122.3"],"seven":["122.3"],"我们实现了一个":["122.3"],"用于交换输入中的元组":["122.3"],"泛型约束":["122.3"],"在函数内部使用泛型参数时":["122.3"],"由于不知道参数的具体类型":["122.3"],"所以不能够随意使用它的属性与方法":["122.3"],"泛型定义函数":["122.4"],"icreatearray":["122.4"],"这个类型断言可以省略":["123.1"],"现在":["123.1"],"obj就同时拥有了":["123.1"],"属性与":["123.1"],"泛型联合":["123.1"],"t":["123.1"],"断言":["123.3"],"之后就可以调用字符串的方法":["123.4"],"makesound":["123.5"],"animial":["123.5"],"这里使用":["123.5"],"这一段就是类型谓词":["123.6"],"isfish":["123.6"],"那么":["123.7"],"分支的类型细化为有一个可选的或者必须的属性":["123.7"],"nameresolver":["123.8"],"tip":["123.9"],"类型别名不能出现在右侧任何地方":["123.9"],"yikes":["123.9"],"declare":["123.10"],"arg":["123.10"],"但是访问一个已知的索引":["123.11"],"会得到正确的类型":["123.11"],"则结果是":["123.12"],"类型中的参数":["123.12"],"6及以上版本":["125.0"],"屏幕闪烁":["125.0"],"2及以上版本":["125.0"],"开放状态":["125.0"],"未开放":["125.0"],"开放范围":["125.0"],"白名单":["125.0"],"参数说明":["125.0"],"是否必填":["125.0"],"说明":["125.0"],"idcardnumber":["125.0"],"在访问一个元素时":["127.2"],"需要从七点开始迭代整个链表直到找到所需的元素":["127.2"],"访问的时间复杂度就在":["127.2"],"之间":["127.2"],"constructor":["127.3"],"currentnode":["127.4"],"prenode":["127.4"],"currentindex":["127.4"],"while":["127.4"],"prevnode":["127.4"],"currentnext":["127.4"],"有三个整数值":["127.5"],"数值":["127.5"],"向后的节点的链接":["127.5"],"向前的节点的链接":["127.5"],"那么它就不再是头部节点了":["127.6"],"将其前驱节点设置为新节点":["127.6"],"新的头部节点":["127.6"],"然后标记新的节点为头部节点":["127.6"],"如果还没有尾部节点":["127.6"],"那么就让新的节点称为尾部节点":["127.6"],"将新的及诶单追加到尾部":["127.6"],"append":["127.6"],"如果还没有头部节点":["127.6"],"让新的节点称为头部节点":["127.6"],"将新的节点添加到链表的末尾":["127.6"],"将当前尾部节点添加到新节点的前驱引用":["127.6"],"设置新节点为链表的尾部节点":["127.6"],"删除具有特定值的节点":["127.6"],"delete":["127.6"],"webpack5对动态导入语法":["129.0"],"提供了更好的支持":["129.0"],"可以更轻松地使用代码分割":["129.0"],"模块联邦":["129.0"],"抽象语法树":["130.0"],"它以树状的形式表现编程语言的语法结构":["130.1"],"树上的每个节点都表示源代码中的一种结构":["130.1"],"之所以说语法是":["130.1"],"init":["130.2"],"arrowfunctionexpression":["130.2"],"expression":["130.2"],"generator":["130.2"],"async":["130.2"],"params":["130.2"],"一系列操作":["130.3"],"transformation":["130.3"],"扫描器":["130.4"],"scanner":["130.4"],"其作用是将一行行的源码拆解成一个个":["130.4"],"所谓":["130.4"],"出错的时候":["131.1"],"开发着工具将直接显示原始代码":["131.1"],"而不是转换后的代码":["131.1"],"随着持续开发所带来的代码量增多":["131.2"],"map功能":["131.3"],"babel":["131.4"],"否则无法定义源文件":["131.4"],"作为":["131.4"],"datauri":["131.4"],"包裹源代码进行执行":["131.5"],"利用字符串可缓存进行提效":["131.5"],"sourcemappingurl":["131.5"],"bundle":["131.5"],"对于":["131.7"],"转换过后的代码":["131.8"],"生产环境":["131.9"],"它是一个引擎":["133.1"],"而非一款框架":["133.1"],"为提交的具体节点":["134.1"],"61ab26":["134.1"],"若另一个":["134.2"],"分支b":["134.2"],"需要临时拥有这个功能":["134.2"],"应用develop分支前的日志如下":["134.3"],"c8b94bb":["134.3"],"origin":["134.3","136.3","140.2"],"应用develop分支后的日志如下":["134.3"],"同时github也已经申请了账号":["135.0"],"ssh":["135.1"],"如果输入命令后无法进入":["135.1"],"则说明还没有在本地机器上绑定你自己github账户的公钥":["135.1"],"那么就需要下边的ssh":["135.1"],"keygen命令进行绑定":["135.1"],"命令如果失效":["135.1"],"跳过该命令":["135.1"],"ls":["135.1"],"看ssh文件夹下有没有":["135.1"],"rsa":["135.1"],"pub":["135.1"],"这两个文件":["135.1"],"fetch区别":["136.0"],"是将远程主机的最新内容拉到本地":["136.1"],"用户在检查了以后决定是否合并到工作本机分支中":["136.1"],"是将e和ｆ的代码合并后的结果":["136.2"],"可能会出现冲突":["136.2"],"而abdf依然属于dev分支":["136.2"],"可以继续在dev的分支上进行开发":["136.2"],"分支":["136.2","136.3"],"最常见的命令如取回":["136.3"],"主机的":["136.3"],"master":["136.3"],"从远程主机的master分支拉取最新内容":["136.4"],"merge":["136.4","137.2"],"delta":["137.2"],"reused":["137.2"],"unpacking":["137.2"],"a1bc60a":["137.2"],"b91f711":["137.2"],"made":["137.2"],"recursive":["137.2"],"strategy":["137.2"],"controllers":["137.2"],"deal":["137.2"],"local":["137.2"],"rtu":["137.2"],"interface":["137.2"],"instrument":["137.2"],"562ec58":["137.3"],"现在在查看一下分支提交历史":["137.3"],"0e80f97":["137.3"],"虽然合并成功":["137.3"],"但是master已经保存了合并历史":["137.3"],"出现开叉了":["137.3"],"对于强迫症患者来说肯定是不能接受的":["137.3"],"通过rebase合并分支":["137.3"],"现在将版本退回到合并前":["137.3"],"也就是回退一个版本":["137.3"],"reset":["137.3"],"hard":["137.3"],"at":["137.3"],"退回去了":["137.3"],"现在是位于master分支的":["137.3"],"提交这里":["137.3"],"先切换回feature分支":["137.3"],"那么就是一个feature分支了":["138.0"],"由于开发中各种修改":["138.0"],"衍合":["138.1"],"77663d6":["138.2"],"执行完命令后":["138.2"],"我们可以看到终端变成如下界面":["138.2"],"rebase操作":["138.2"],"commands表示了可以进行的指令的类型":["138.2"],"即为":["138.2"],"pick":["138.2"],"表示保留这一个commitid":["138.2"],"命令的作用是将更改存储在一个临时区域中":["139.0"],"而只想把某些更改推送到远程仓库":["139.1"],"想要在多个分支之间进行代码重构或实验性开发时":["139.1"],"保存时的描述":["139.3"],"命令":["139.3"],"shell":["139.4"],"如果要显示其它存贮":["139.5"],"后面加":["139.5"],"如果要使用其它个":["139.7"],"从列表中删除这个存储":["139.9"],"这个文件还在":["139.10"],"说明没有被存起来":["139.10"],"说白了就是没有在git":["139.10"],"版本控制中的文件":["139.10"]},{"0":["14.1","14.2","74.12","81.7","81.11","87.17","89.4","102.6","102.9","103.13","110.18","111.3","121.3","123.11","139.4"],"1":["12.8","18.0","21.0","33.0","34.0","58.2","63.47","78.6","81.5","81.10","87.3","87.22","87.25","88.17","88.21","89.9","89.18","89.28","93.1","96.0","102.8","111.3","121.3","123.11","134.1"],"2":["12.8","30.2","31.4","34.0","40.2","42.4","63.22","66.20","67.42","69.5","69.11","69.36","75.6","88.15","88.21","88.23","89.9","89.18","89.28","96.0","97.1","97.6","103.9","110.8","122.2"],"3":["0.0","12.10","14.1","34.0","64.33","66.20","67.2","69.9","74.16","75.7","78.9","78.12","88.6","88.11","88.15","89.28","95.3","96.0","103.7","103.14","105.4","110.8","112.2","121.1","122.2","137.3"],"4":["12.6","31.6","44.9","54.5","63.3","64.21","67.2","69.9","73.14","78.12","87.23","88.16","89.28","103.16","107.1","110.8","113.3","122.2"],"5":["63.42","64.26","67.2","73.15","78.12","88.11","88.15","88.16","89.28","110.3","110.5","110.8","110.19","110.22","110.23","122.2","134.3"],"6":["0.0","63.51","64.25","67.2","74.18","110.23"],"7":["110.12","110.22","110.23","137.2"],"8":["16.2","16.4","21.0","33.0","66.5","76.0","87.14","88.9","110.23"],"9":["17.0","110.22","110.23"],"10":["17.0","88.15","110.23"],"11":["87.14"],"13":["102.7"],"14":["102.6"],"15":["88.3","102.6"],"16":["102.6"],"18":["88.20","103.11"],"20":["102.12"],"21":["137.2"],"26":["3.0"],"28":["130.2"],"30":["89.13"],"32":["130.2"],"38":["121.4"],"47":["130.2"],"50":["81.14"],"100":["59.3","81.4"],"200":["63.3","74.14","119.7"],"201":["119.7"],"255":["76.0"],"301":["63.4"],"400":["119.7"],"444":["74.18"],"600":["44.10","112.4"],"1000":["82.0"],"1998":["106.4"],"2019":["102.15"],"2526":["14.2"],"1411572969":["102.8"],"n":["0.0","58.2"],"result":["2.0","63.18","78.12","87.23","122.4"],"if":["2.0","5.0","54.6","75.4","75.16","111.4","115.4"],"return":["2.0","7.0","44.8","66.10","67.33","67.40","73.10","75.8","75.16","88.21","97.1","103.8","103.12","111.4","123.6","127.4"],"sort":["2.0","50.5"],"for":["2.0","6.0","8.0","12.4","27.0","50.5","83.0","106.3","122.4"],"let":["2.0","4.0","5.0","8.0","9.0","87.12","113.4","122.4","122.5"],"j":["2.0"],"break":["2.0"],"console":["3.0","7.0","54.7","66.8","73.10","87.2","87.6","87.15","87.22","87.27","87.28","89.7","89.9","97.2","103.12","103.16","104.2","104.5","106.4","110.9","110.10","110.11","110.12","110.19","122.3","123.4"],"log":["3.0","7.0","54.7","66.8","73.10","87.6","87.15","87.22","87.27","87.28","89.7","89.9","97.2","103.12","104.2","104.5","106.4","110.9","110.10","110.11","110.12","110.13","110.19","122.3","123.4","137.2"],"利用map的特性去处理":["3.0"],"新建一个":["3.0"],"map":["3.0","44.10","131.7"],"然后遍历数组":["3.0"],"将差值记录在":["3.0"],"中":["3.0","66.5","66.18","69.9","75.15","76.0","103.14","110.14"],"最后通过":["3.0"],"的前五个元素被修改为":["4.0"],"求解":["4.0"],"通过判断与前一项是否相等":["4.0"],"在通过指针重新指向":["4.0"],"typescript":["4.0","123.7"],"removeduplicates":["4.0"],"number":["4.0","8.0","98.0","106.0","119.7","122.5","125.0"],"len":["4.0","8.0"],"index1":["5.0"],"index2":["5.0"],"tail":["5.0"],"while":["5.0","127.6"],"k":["6.0","8.0"],"length":["6.0","8.0","57.1","89.4"],"leftindex":["6.0"],"i":["6.0","11.0"],"target1":["7.0"],"target2":["7.0"],"target3":["7.0"],"removeele":["8.0"],"index":["8.0","34.2","34.3","137.3"],"isinit":["9.0"],"false":["9.0","75.8","87.29","88.5","89.10","89.31"],"res":["9.0"],"中心下标是0":["10.0"],"左侧数之和是":["10.0"],"下标":["10.0"],"左侧不存在元素":["10.0"],"右侧数之和是":["10.0"],"of":["11.0","75.16","137.2"],"有任何疑问或者发现错误":["12.1"],"可联系":["12.1"],"作者":["12.1","88.22"],"github地址":["12.2"],"filter":["12.3","13.0","21.5"],"样式选择器":["12.3","13.0"],"class":["12.3","13.0","26.2"],"style":["12.3","13.0","17.0","33.0","95.2"],"下拉列表选项":["12.3","17.0"],"如果您没有php经验":["12.4"],"这本书也可以阅读":["12.4"],"javascript":["12.4","53.4","53.9","63.30","64.44","66.19","67.35","75.12","102.2","106.1","107.2","114.0"],"php":["12.4","117.1"],"developers":["12.4"],"在制作网站前端时":["12.5"],"我也希望采用类似的方法":["12.5"],"我不喜欢直接在php代码中直接嵌入html模板的方案":["12.5"],"以静态网站的方式部署":["12.6"],"这样页面部分不再占用服务器的流量和空间":["12.6"],"便于之后的扩展":["12.6"],"其实有一个调侃的说法":["12.7"],"写java的写不来javascript的用angularjs":["12.7"],"但是基于angularjs的版本提供了一些如单页应用":["12.8"],"在同一个界面直接刷新部分界面而不是整页刷新":["12.8"],"的特性":["12.8"],"然后便是一系列的在网上搜索了解angularjs的过程":["12.8"],"看完它基本的tutorial":["12.8"],"phonecat":["12.8"],"之后":["12.8"],"我马上被它的特性震惊了":["12.8"],"因为":["12.8","119.17"],"angularjs的整个结构体系非常符合我的思路":["12.8"],"双向绑定的特性实在是太和我胃口了":["12.8"],"我现在正在重新学习angularjs":["12.9"],"写这本书":["12.9"],"一方面是为了记录学到的angularjs的技术":["12.9"],"便于我日后查询":["12.9"],"即使在我评估angular":["12.10"],"2时已经是beta版本":["12.10"],"但是官网仍然推荐不要将其用于生产环境":["12.10"],"我的网站运行的是对公业务":["12.10"],"且对合作方使用的浏览器有一定的影响能力":["12.10"],"但是我没有信心让所有客户都安装上chrome的最新版本":["12.10"],"copyright":["12.11"],"this":["12.11","50.2","69.17","88.13","115.2","127.3"],"过滤器":["13.0"],"cnpm":["14.0"],"国内用户推荐":["14.0"],"淘宝的npm加速服务":["14.0"],"npm":["14.0"],"node":["14.0"],"直接下载安装即可":["14.1"],"30天的时间对于学习angularjs和进行一些初级的开发尝试完全足够了":["14.1"],"本书写作时使用的webstorm版本是11":["14.1"],"webstorm自8":["14.1"],"chrome完整版本下载链接":["14.2"],"本书写作时使用的chrome版本是47":["14.2"],"x都有对应的安装包":["14.3"],"本书使用的node":["14.3"],"new":["15.0","63.31","87.27","89.29","98.0","106.4","111.4","113.4","122.5","123.2"],"然后选择empty":["15.0"],"创建目录":["15.1"],"大家对于":["15.1"],"的配置文件":["15.2"],"测试文档":["15.2"],"这些文件我们是绝对不希望用户可以直接访问到的":["15.2"],"也可以跳过下面命令行创建的部分":["15.3"],"即可启用":["15.4"],"图2":["15.4"],"private":["15.5"],"which":["15.5"],"prevents":["15.5"],"it":["15.5","137.3"],"from":["15.5","57.3","67.34","73.25","74.10","75.1"],"being":["15.5"],"accidentally":["15.5"],"published":["15.5"],"registry":["15.5"],"以下是生成的配置文件的预览":["15.5"],"并在其中加入如下内容":["15.6"],"json":["15.6","32.6"],"现在项目看起来应该长这个样子":["15.7"],"我们将进入正式的学习使用angularjs的过程":["16.0"],"meta":["16.2","21.0","30.0","63.51"],"charset":["16.2","16.4","21.0","30.0","33.0"],"utf":["16.2","16.4","21.0","33.0"],"title":["16.2","16.4","21.0","33.0","36.0"],"学习angularjs":["16.2","16.4","21.0","33.0"],"min":["16.3"],"js":["16.3","55.4"],"148kb":["16.3"],"hello":["16.5","20.2","21.3","58.2","63.30"],"看不到":["16.5"],"和":["16.5","52.0","55.3","63.22","64.5","64.36","64.44","67.11","67.56","69.22","73.2","78.5","104.3","115.5","119.6","119.12","121.5","123.1","123.9"],"就说明angularjs已经成功运行起来了":["16.5"],"options":["17.0","52.0"],"引入":["17.0","102.2"],"include":["17.0"],"和模板":["17.0"],"template":["17.0","19.1","51.4","51.6","67.26","67.30","69.7","74.17","78.10"],"网页会显示2":["18.0"],"a":["18.0","33.2","50.5","63.30","67.27","87.7","89.1","110.22"],"bc":["18.0"],"网页会显示abc":["18.0"],"是定义和使用html代码碎片的功能":["19.0"],"用于将html切碎分别存储":["19.0"],"并根据需求再去获取对应的代码块":["19.0"],"geturl":["19.1"],"从上面的例子可以看出":["19.1"],"autoscroll":["19.2"],"的属性":["19.2"],"id":["19.3","34.0","69.3","69.7"],"这个":["19.3"],"就是这段html代码被引用时的名称":["19.3"],"使用":["19.3","64.28","64.33","67.13","73.4","74.2","82.0","87.16","106.1","110.22"],"在现在阶段":["20.0"],"我们并不会用到":["20.0"],"lang":["20.1","30.0","32.7"],"zh":["20.1","30.0","32.7"],"head":["20.1","21.0","30.0","75.6","134.1","136.3","137.2"],"app被放置在了这里":["20.2"],"h1":["20.2","22.0","25.2","35.0","64.34"],"world":["20.2","21.4","22.0","66.10"],"以上代码的运行结果如下":["20.2"],"图4":["20.2"],"文件呼唤":["20.3"],"网页的标题":["21.0"],"我们在这里使用了angularjs的基本表达式":["21.0"],"controller的名称":["21.2"],"function":["21.2","54.6","63.35","64.20","87.12","89.28","119.8","119.12"],"scope":["21.2","33.2","34.4"],"controller的实体":["21.2"],"传入了":["21.3"],"data":["21.3","22.0","22.2","26.4","78.8","78.12","131.5"],"message":["21.3","22.0","52.5"],"对象":["21.3","105.6"],"并在html代码中直接使用了":["21.3"],"为什么不推荐这样做呢":["21.5"],"因为在我们后续会学习应用":["21.5"],"firstctrl":["22.0","25.2","27.4","32.0","32.1","32.5","32.6"],"这里增加了一个input输入框":["22.0"],"input":["22.1","22.2","25.3","25.4","26.5","44.10"],"type":["22.1","22.2","25.3","25.4","26.1","26.5","113.4"],"text":["22.1","22.2","25.3","25.4","34.5"],"model":["22.1","22.2","25.3","25.4","27.0"],"if中的文字":["23.0"],"中包含的内容":["23.1"],"会被全部从html中移除掉":["23.1"],"而如果使用":["23.1"],"true":["23.2","42.10","53.5","88.8","113.1","113.6"],"但是请":["23.2"],"注意":["23.2","53.10","63.21","88.21","119.17"],"在":["23.2","69.11","69.25","110.14"],"in":["24.0","24.1","27.0","27.1","81.3","98.0","119.4","121.4","134.3"],"td":["24.0","24.1","44.10"],"x":["24.1","33.0","64.18","88.10","93.1","102.8","110.2","110.3"],"list":["24.1"],"name":["24.1","69.13","88.18","89.13","90.0","119.11"],"以上都是angularjs的常用用法":["25.0"],"具体的系统自带的":["25.0"],"的列表":["25.0"],"我们可以从官方网站上获取":["25.0"],"这里对管网提供的功能进行一个简要列表":["25.0"],"filter名称":["25.0"],"示例用法":["25.0","97.1"],"说明":["25.0"],"传入自定义的函数作为过滤器":["25.0"],"结果为":["25.1","105.3"],"代码如下":["25.2"],"html":["25.2","27.4","31.2","32.4","32.5","32.7","34.2","34.3","59.1","64.38","97.6"],"div":["25.2","26.1","27.4","29.0","30.4","32.0","32.4","32.5","52.5","64.12","64.34","66.10","69.18","69.20"],"ng":["25.2","30.0"],"controller":["25.2","27.4","29.1","32.0","32.3","32.5","32.6"],"link":["26.1","33.0","34.4"],"rel":["26.1"],"stylesheet":["26.1"],"href":["26.1","33.0","92.0"],"body":["26.1","32.0","91.0"],"此处放置了ng":["26.1"],"并设定了每个样式激活时的条件":["26.1"],"对应下方3个复选框":["26.1"],"p":["26.1","26.2","30.3","35.0","52.5","67.26","69.13","119.4"],"直接使用字符串作为样式":["26.2"],"warning":["26.3","119.17"],"同时应用两种样式":["26.3"],"button":["26.4","26.5","50.4","69.7"],"value":["26.4","26.5","64.30","66.9","89.7","89.8","106.3","110.4","110.5","110.6","110.7","122.4","127.3"],"开始动画":["26.4"],"click":["26.4","26.5","69.7","69.19"],"br":["26.4"],"imagepath":["26.5"],"下面":["26.5"],"我们通过官网的示例来看看如何传入文本":["26.5"],"设置字体颜色为红色":["26.5"],"mystyle":["26.5"],"label":["27.0","27.4"],"选择一个颜色":["27.0"],"无空选项":["27.0"],"select":["27.0","71.5"],"colors":["27.1"],"blue":["27.2"],"黄色":["27.2","27.3"],"yellow":["27.2","27.3"],"然后修改":["27.3"],"而angularjs需要解析这段文本":["27.4"],"因此提出了对格式的要求":["27.4"],"选择一个国家":["27.4"],"有空选项":["27.4"],"并将印象不深的地方多浏览几遍":["28.0"],"如果可能":["28.0"],"直接作为标签名":["29.0"],"people":["29.0","32.0","32.3"],"直接作为标签属性":["29.0"],"可能会对directive的学习或者使用价值感到困难":["29.2"],"doctype":["30.0","32.7"],"第一个参数是directive的命名":["30.1"],"这里是":["30.1","50.3"],"第二个参数是这个directive的功能":["30.1"],"directive生效后的html代码":["30.2"],"姓名":["30.3"],"attribute":["30.4"],"在实际应用场景中":["31.0"],"我们的命名通常不止1个单词":["31.0"],"这时候我们就需要注意directive的命名和使用规则":["31.0"],"并且不使用连接符号":["31.1"],"驼峰式命名的例子":["31.1"],"array":["31.2","75.1","75.4","122.4","123.9"],"实际使用举例":["31.2"],"为了保证html和javascript都能按原有模式正常工作":["31.3"],"下划线":["31.5"],"则可以通过html5的验证":["31.6"],"有data前缀":["31.6"],"第一个人的信息":["32.0"],"harry":["32.1"],"这段配置":["32.2"],"告诉directive从html标签中":["32.2"],"获取名为":["32.2"],"张三":["32.4"],"sex":["32.5"],"peoplelist":["32.6"],"span":["32.6","86.1"],"repeat":["32.6"],"person":["32.6"],"clickbtncallback":["32.7"],"msg":["32.7"],"alert":["32.7","63.35","63.36","107.4"],"点击了按钮":["32.7"],"信息是":["32.7"],"对应的html代码":["32.7"],"css":["33.0","59.1","64.40","64.44","74.17","76.0"],"这里":["33.1"],"我们保留了上个例子中的":["33.1"],"所有":["33.1"],"文件":["33.1","131.4"],"包括独立的part":["33.1"],"对javascript也未进行任何修改":["33.1"],"运行效果如下":["33.1"],"图5":["33.1"],"restrict":["33.2"],"在chrome的":["34.0"],"开发者工具":["34.0"],"的控制台中":["34.0"],"我们可以看到如下结果":["34.0"],"childtail":["34.0"],"null":["34.0","53.16","63.18","73.11","87.12","88.5","106.0","110.16","111.4","119.8"],"这里才是整个directive中的":["34.1"],"同时":["34.2"],"如果你希望在angularjs中直接使用完整的jquery也是非常容易的":["34.2"],"只需要安装jquery":["34.2"],"并在":["34.2","69.11"],"中引入":["34.3"],"attrs":["34.4","36.0"],"鼠标移过来了":["34.5"],"mouseleave":["34.5"],"这里是放置原有代码的地方":["35.0"],"标题":["35.0"],"这里是段落文字":["35.0"],"第四个参数是获取到的directive":["36.0"],"element":["36.0","104.6"],"tabcontainer":["36.0"],"调用了上方gqtabcontainer的addpane":["36.0"],"方法":["36.0","69.5","69.46","73.4","73.16","73.22","78.8","87.13","110.16"],"注意参数命名":["36.0"],"不需要和上方directive一致":["36.0"],"在html代码中":["36.0"],"我们直接使用了":["36.0"],"gq":["36.0"],"tab":["36.0"],"container":["36.0","113.1"],"思路更清晰更有条理":["37.0"],"learning":["38.0"],"angular":["38.0"],"首屏渲染快":["40.1"],"首屏渲染是node发送过来的字符串":["40.1"],"开发条件受限":["40.2"],"inject":["42.1","69.1"],"而react中我们通过hoc":["42.1"],"higher":["42.1"],"而是通过修改数据":["42.2"],"state":["42.2"],"或":["42.2","74.14","75.7","117.1"],"props":["42.2","53.8","66.4","66.5","67.37","73.9"],"componentwillunmount":["42.3","66.6"],"卸载":["42.3"],"并且更贴合原生js写法":["42.4"],"dom":["42.5","67.10","69.25","73.24"],"app":["42.5","44.9","73.23"],"检测意外的副作用":["42.6"],"检测过时的":["42.6"],"跳转页面后获取":["42.7"],"sessionstorage":["42.7"],"存入sessionstorage初始化时查询":["42.7"],"有数据就加载":["42.7"],"jsx需要":["42.8"],"babel":["42.8"],"createelement":["42.9"],"component":["42.9","55.4"],"caught":["42.10"],"by":["42.10"],"这个依据就是标签的首字母":["42.11"],"能够让一个组件返回多个元素":["42.12"],"应该使用受控组件":["42.13"],"适用于需要对表单元素的值进行实时操作和处理的情况":["42.13"],"uselayouteffect":["43.0"],"执行时机是在react的提交阶段之后":["43.0"],"那么使用":["43.1"],"可能会导致可见的布局跳动或闪烁":["43.2"],"例如动画的启动或某些可见的快速dom更改":["43.2"],"模拟生命周期方法":["43.2"],"ssr":["43.3"],"中出现问题":["43.3"],"一样":["44.0"],"都是帮我们去管理组件的状态的":["44.0"],"但是与":["44.0"],"第二个参数是":["44.3"],"action":["44.3","44.8"],"如果编写了init函数":["44.5"],"则默认值使用init函数的返回值":["44.5"],"如果没有init函数":["44.7"],"增加1":["44.9"],"如果是":["44.9"],"则count":["44.9"],"减少1":["44.9"],"type不匹配任何已定义的情况":["44.9"],"则抛出一个错误":["44.9"],"tsx":["44.9","73.25","74.10","134.3"],"cellspacing":["44.10"],"width":["44.10","63.36","73.13"],"border":["44.10","64.35","81.9"],"thead":["44.10"],"tr":["44.10"],"th":["44.10"],"物品":["44.10"],"价格":["44.10"],"操作":["44.10"],"tbody":["44.10"],"key":["44.10","114.0","135.1"],"align":["44.10"],"center":["44.10"],"onblur":["44.10"],"e":["44.10","138.2"],"onchange":["44.10","73.9"],"export":["45.1","73.11","90.0"],"default":["45.1","55.4","57.3","66.7","73.11"],"父组件与子组件的加载顺序":["45.1"],"danger":["45.1"],"加载顺序":["45.1"],"父子组件初始化":["45.1"],"父组件":["45.1","69.3"],"constructor":["45.1","107.1","113.5"],"getderivedstatefromprops":["45.1"],"render":["45.1","69.24","73.20","73.22","73.23"],"子组件":["45.1","73.9"],"从而提高性能":["46.0"],"断点看到真实dom中挂载了很对属性和方法":["46.1"],"我们并不需要去关心":["46.1"],"是将所有的操作聚集在一块计算出所有变化后统一更新一次虚拟dom":["46.2"],"将所有的dom":["46.5"],"手机起来":["46.5"],"一起去改变真是的dom":["46.5"],"对于跨平台react和":["46.6"],"连接到":["47.0"],"react":["47.0","69.0","69.26","70.0","73.20"],"组件":["47.0"],"使组件可以访问和更新":["47.0"],"store中的状态":["47.0"],"timer":["47.1"],"time":["47.1","93.2"],"settime":["47.1"],"intervaild":["47.1"],"setinterval":["47.1"],"usestate的值在每一个render中都是独立存在的":["47.2"],"而useref":["47.2"],"current则更像是相对于render函数的一个全局变量":["47.2"],"每次它会保持render的最新状态":["47.2"],"usestate异步更新值":["47.2"],"useref则同步更新":["47.2"],"数组":["49.0","63.37","63.45","127.1"],"或者正则表达式":["49.0"],"名称匹配的组件则":["49.0"],"不会被缓存":["49.0"],"settimeout":["50.0","115.2"],"vue3":["50.0"],"如果有代码需要进去执行的话":["50.1"],"就进行push操作":["50.1"],"任务队列":["50.1"],"任务队列使用到的是数据结构中的队列结构":["50.1"],"它用来保存异步任务":["50.1"],"先进先出":["50.1"],"原则":["50.1"],"它主要负责将新的任务发送到队列中进行处理":["50.1"],"执行顺序":["50.1"],"先执行同步任务":["50.1"],"执行完接着执行微任务":["50.1"],"主线程任务的行完成后就会执行这个函数":["50.2"],"对watcher队列排序":["50.2"],"遍历执行watcher对应的run方法":["50.2"],"然后render":["50.2"],"更新视图":["50.2"],"也就是说":["50.2","89.30"],"我的胃来食":["50.2"],"使用settmmediate":["50.3"],"虽然也是宏任务":["50.3"],"但是比settimeout更好":["50.3"],"以上都不支持的情况下":["50.3"],"使用settimeout":["50.3"],"环境判断结束就会得到一个延迟回调函数":["50.3"],"然后进入核心的":["50.3"],"nexttick":["50.3","50.6"],"nexttick方法":["50.3"],"这里的主要逻辑是":["50.3"],"把传入的回调函数放入回调队列":["50.3"],"执行保存的异步任务":["50.3"],"就会遍历":["50.3"],"执行相应的回调函数了":["50.3"],"这三行是使用了":["50.3"],"typescript中的":["50.3"],"函数重载":["50.3"],"方法的函数重载定义":["50.3"],"用于在异步更新":["50.3"],"就可以跳过":["50.5"],"b":["50.5","89.1"],"getid":["50.5"],"try":["50.5"],"遍历主任务队列":["50.5"],"批量执行更新任务":["50.5"],"active":["50.5"],"checkrecursiveupdates":["50.5"],"continue":["50.5"],"callwitherrorhandling":["50.5"],"errorcodes":["50.5"],"scheduler":["50.5"],"finally":["50.5"],"队列任务执行完":["50.5"],"重置队列索引":["50.5"],"flushpostflushcbs":["50.5"],"的":["50.6","73.16","75.14","130.1"],"会作为一个javascript的表达式被动态执行":["51.1"],"计算得到的值会被用作最终的参数":["51.1"],"举例来说":["51.1"],"如果你的足见实例有一个数据属性":["51.1"],"其值为":["51.1"],"那么这个绑定就等价于":["51.1"],"相似地":["51.1"],"还可以将一个函数绑定到动态事件名称上":["51.1"],"eventname":["51.1"],"dosonething":["51.1"],"是无论初始条件如何":["51.3"],"它都会被渲染":["51.3"],"只有css":["51.3"],"display":["51.3","64.25","74.17","74.22","78.10"],"会被切换":["51.3"],"来改变元素的可见性":["51.3"],"比":["51.4"],"的优先级更高":["51.4"],"并且不推荐在同一元素上使用这两个指令":["51.4"],"因为同时使用时会抛出一个错误":["51.4"],"ul":["51.4"],"li":["51.4","83.0"],"user":["51.4","97.5","105.5"],"users":["51.4"],"isactive":["51.4"],"isb":["51.5"],"classc":["51.5"],"isc":["51.5"],"fontsize":["51.5"],"size":["51.5","74.14"],"px":["51.5","67.29"],"styleobjecta":["51.5"],"styleobjectb":["51.5"],"绑定对象形式的":["51.5"],"缩写":["51.7"],"使用缩写的动态事件":["51.7"],"停止传播":["51.7"],"阻止默认事件":["51.7"],"api":["52.0"],"composition":["52.0"],"在生命周期上也有一些小的不同":["52.0"],"conposition":["52.0"],"beforedestroy":["52.1"],"组件实例销毁之前":["52.1"],"destroy":["52.1"],"组件实例销毁之后":["52.1"],"选项上":["52.2"],"mounted":["52.2"],"完成挂载":["52.2"],"生成的":["52.2"],"替换了":["52.2"],"选项所对应的":["52.2"],"两者的相同点":["52.3"],"都能拿到实例对象的属性和方法":["52.3"],"讨论这个问题本质就是触发的时机":["52.3"],"放在":["52.3"],"它们是使用es6类定义的":["52.4"],"生命周期钩子":["52.4"],"描述":["52.4"],"替代了vue2中的":["52.4"],"的作用":["52.4"],"需要注意的是":["52.5","69.26"],"钩子":["52.5"],"钩子需要在":["52.5"],"函数中使用":["52.5"],"onbeforeupdate":["52.5"],"onupdated":["52.5"],"更新":["52.5"],"钩子函数会在数据重新渲染之前运行":["52.5"],"可以用来在组件更新前执行一些操作":["52.5"],"即仅在侦听源发生变化时才执行回调函数":["53.1"],"一个响应式对象":["53.3"],"分别对应来源数组中的新值和旧值":["53.4","67.50"],"watch":["53.4"],"当侦听一个":["53.5"],"getter函数时":["53.5"],"回调只在此函数的返回值变化时才触发":["53.5"],"如果想让深层对象变化是":["53.5"],"也被侦听调用":["53.5"],"可以加":["53.5"],"强制侦听器进入深层级模式":["53.5"],"会在":["53.8"],"变化时打印":["53.8"],"watcheffect":["53.9","53.16"],"watcheffect仅会在其同步执行期间":["53.10"],"会避免在发生副作用时追踪依赖":["53.12"],"因此":["53.12","63.23","105.7","135.1"],"我们能更加":["53.12"],"精确地控制回调函数的触发时机":["53.12"],"stopwatcheffect":["53.15"],"时":["54.1","63.3","67.19","73.4","75.6","110.16"],"的状态":["54.2"],"那么就相当于我们把":["54.2"],"业务逻辑层":["54.3"],"viewmodel":["54.3"],"对所有数据的属性进行监听":["54.4"],"解析器":["54.4"],"会更新函数":["54.5"],"由于":["54.5","89.19","89.25","112.4"],"的某个":["54.5"],"选项执行响应具体化操作":["54.6"],"obj":["54.6","88.20","89.10","98.0"],"typeof":["54.6"],"object":["54.6","63.31","74.3","88.6","89.1"],"编译元素":["54.7"],"nodename":["54.7"],"else":["54.7","127.6"],"isinterpolation":["54.7"],"判断是否为插值文本":["54.7"],"由dep调用":["54.8"],"update":["54.8","69.11"],"call":["54.8","105.1"],"声明dep":["54.8"],"deps":["54.8","78.8"],"依赖管理":["54.8"],"adddep":["54.8"],"动态装在适当的资源并添加到页面":["55.2"],"页面在任何时间点":["55.2"],"都不会重新加载":["55.2"],"也不会将控制转移到其它页面":["55.2"],"举个例子":["55.2"],"或者":["55.3","63.18","111.4"],"svg":["55.3"],"时才被算作":["55.3"],"details":["55.3"],"fcp的区别":["55.3"],"fcp这两个指标之间的主要区别是":["55.3"],"fp是当浏览器开始绘制内容到屏幕上时":["55.3"],"只要在视觉上发生变化":["55.3"],"无论是什么内容触发的视觉变化":["55.3"],"import":["55.4","66.19","67.35","73.25","74.10","102.4"],"插件":["55.4"],"async":["55.4"],"resolve":["55.4"],"asynccomponent":["55.4"],"then":["55.4","73.16"],"如果是多个参数求和":["57.1"],"getsums":["57.1"],"args":["57.1","87.12"],"readfile":["57.3"],"从":["57.3"],"导入":["57.3"],"模块":["57.3"],"as":["57.3","73.25","75.5","123.6"],"trim":["58.2"],"known3":["58.2"],"类型可以复制给任意其它类型":["58.3"],"更新了es6新特性":["59.2"],"原型与原型链相关":["59.4"],"变量类型有很多种":["63.1"],"比如":["63.1"],"int":["63.1"],"并通过":["63.3"],"status":["63.3"],"属性判断服务器响应的状态码":["63.3"],"当":["63.3"],"等于":["63.3"],"并且":["63.3"],"表示请求成功":["63.3"],"并可以通过":["63.3"],"客户端请求的网页已经永久移动到新位置":["63.4"],"当链接发生变化时":["63.4"],"返回":["63.4","69.24","75.16"],"代码告诉客户端链接的变化":["63.4"],"闭包就是就是函数的":["63.6"],"堆栈":["63.6"],"其内部变量无需维护":["63.7"],"就可以使用闭包":["63.7"],"结果缓存":["63.7"],"我们在开发中会遇到很多情况":["63.7"],"循环引用":["63.8"],"当两个或多个对象相互引用时":["63.8"],"如果它们之间没有被正确断开引用关系":["63.8"],"就会形成循环引用":["63.8"],"这种情况下":["63.8"],"这些对象所占用的内存就无法被垃圾回收器回收":["63.8"],"从而导致内存泄漏":["63.8"],"定时器未被清除":["63.8"],"称为事件代理":["63.9"],"是js中很常用的绑定事件的技巧":["63.9"],"动态绑定事件处理程序":["63.10"],"由于事件委托是基于事件冒泡机制实现的":["63.10"],"因此可以动态地添加或删除子元素":["63.10"],"而无需重新绑定事件处理程序":["63.10"],"处理未来元素的事件":["63.10"],"由于事件委托是基于父元素的事件处理程序实现的":["63.10"],"标准浏览器使用":["63.11"],"目标阶段":["63.12"],"从目标节点触发":["63.12"],"存储的数据会在会话结束时失效":["63.13"],"即浏览器标签关闭":["63.13"],"安全性":["63.13"],"cookie存在一些安全性问题":["63.13"],"因为它可以被跨站脚本":["63.13"],"xss":["63.13"],"攻击":["63.13"],"key1":["63.16"],"value1":["63.16"],"key2":["63.16"],"prototype指向一个对象":["63.17"],"当函数作为构造函数时":["63.17"],"prototype就起到类似":["63.17"],"执行结果保存起来作为":["63.18"],"判断执行函数的结果是不是":["63.18"],"undefuned":["63.18"],"如果是则返回之前的新对象":["63.18"],"如果不是则返回result":["63.18"],"手写实现一个":["63.18"],"代码难以维护":["63.20"],"常常第一个的函数的输出是第二个函数的输入这种现象":["63.20"],"意思就是等这个异步操作执行":["63.21"],"执行完成之后再往下走":["63.21"],"️":["63.21"],"协议未规定":["63.22"],"的长度限制":["63.22"],"例如鼠标点击事件":["63.24"],"onclick":["63.24"],"要处理的事件名":["63.25"],"作为事件处理程序的函数和一个布尔值":["63.25"],"这个布尔值代表了什么阶段调用事件处理程序":["63.25"],"具体可见":["63.27"],"offsety":["63.28","91.0"],"来标识元素的初始坐标":["63.28"],"移动的距离应该是":["63.28"],"鼠标移动时的坐标":["63.28"],"鼠标按下去时刻的坐标":["63.28"],"例如":["63.30","100.0","106.0"],"var":["63.30","63.31","63.32","81.12","87.12","88.6","89.7","100.0","113.5"],"obj1":["63.31","88.6","88.18"],"obj2":["63.31","88.6"],"someotherobject":["63.31"],"anotherobject":["63.31"],"proxy":["63.32"],"来实现":["63.32"],"图片的宽度为":["63.35","63.36"],"图片的高度为":["63.36"],"方法对于":["63.37"],"如果存在任意元市值":["63.37"],"它就默认将对象转换为标示它的原始值":["63.37"],"对象是符合值":["63.37"],"而且大多数对象无法真正表示为一个原始值":["63.37"],"因此默认的":["63.37"],"方法简单地返回对象本身":["63.37"],"而不是一个原始值":["63.37"],"函数和正则表达式简单地继承了这个默认方法":["63.37"],"调用这些类型的实例的":["63.37"],"方法只是简单地返回这个对象本身":["63.37"],"对原始值或者包装类":["63.37"],"baseclone":["63.37"],"base":["63.37"],"在右侧子串的每个位置插入左侧字符":["63.38"],"生成新的排列":["63.38"],"并加入结果数组":["63.38"],"tmp":["63.38"],"javascript的同源策略":["63.40"],"即":["63.40","119.14","136.1"],"协议":["63.40"],"端口相同":["63.41"],"浏览器处于安全方面考虑":["63.41"],"目录":["63.42"],"会判断这个目录是什么文件类型":["63.42"],"cdn托管":["63.42"],"标明高度与宽度":["63.42"],"如果浏览器没有找到这两个参数":["63.42"],"对象中的":["63.43"],"或者扩展运算符":["63.44"],"symbol":["63.45"],"浅拷贝":["63.45"],"只是简单的指针赋值":["63.45"],"map会返回一个新数组":["63.46"],"方法创建":["63.47"],"继承有六种":["63.47"],"原型继承":["63.47"],"身份认证的网络协议":["63.50"],"具有安全性的":["63.50"],"解密传输协议":["63.50"],"gizp":["63.51"],"压缩网站的js和css文件":["63.51"],"等到满足条件的时候再加载对应资源":["63.52"],"两者主要区别是一个提前加载":["63.52"],"比较流行的是":["64.1"],"色彩丰富":["64.2"],"适合存储真实照片":["64.2"],"适合存储简单图形和带有透明背景的图像":["64.3"],"缺点":["64.3","64.4","78.6"],"色彩表现不如":["64.4"],"和模型有两种":["64.5","73.2"],"标准盒模型":["64.5","73.2"],"ie盒模型":["64.5","73.2"],"这两者的区别主要在于宽高的包含范围":["64.5","73.2"],"表示标准盒子模型":["64.7"],"controls":["64.9","64.10"],"是否显示进度条":["64.9"],"poster":["64.9"],"没有播放之前现实的展位图片":["64.9"],"wav":["64.10"],"autoplay":["64.10"],"是否自动播放":["64.10"],"表单事件":["64.11"],"section":["64.12"],"英译为":["64.12"],"部分":["64.12"],"相当于":["64.12"],"figure":["64.12"],"边框图片的路径":["64.14"],"slice":["64.14","75.5"],"图片边框向内偏移":["64.14"],"属性相对于什么位置定位":["64.15"],"clip":["64.15"],"线性渐变":["64.16"],"overflow":["64.17"],"指定当文本溢出包含它的元素":["64.17"],"转换方法":["64.18"],"rotate":["64.18"],"旋转":["64.18"],"translate":["64.18","64.26"],"完成过渡效果需要花费的时间":["64.19"],"timing":["64.19"],"动画如何完成一个周期":["64.20"],"但增加了新标签":["64.21"],"不利于页面优化":["64.21"],"相对于浏览器窗口定位":["64.22"],"static":["64.22"],"默认值":["64.22","88.6"],"元素出现在正常的文档流中":["64.22"],"父元素设置text":["64.24"],"algin":["64.24"],"让隐藏节点的":["64.25"],"height":["64.25","64.32"],"为剩余高度的一半":["64.25"],"给父元素":["64.25"],"table":["64.25"],"transform":["64.26","81.7"],"子元素相对父元素绝对定位":["64.26"],"分别固定于页面的左右两侧":["64.27"],"中间的主体栏用左右":["64.27"],"值撑开距离":["64.27"],"webkit":["64.28"],"查找唯一类型":["64.30"],"attr":["64.30"],"属性选择器":["64.30","64.31"],"root":["64.30","73.20"],"行高":["64.32"],"line":["64.32"],"字体颜色":["64.32"],"color":["64.32","74.14","81.13"],"font":["64.32","74.14"],"字体种类":["64.32"],"将当前展示图片的前一张和后一张优先下载":["64.33"],"可以设置宽高等属性":["64.34"],"h6":["64.34"],"hr":["64.34"],"外侧添加空白时用":["64.35"],"是":["64.36","78.11","119.14"],"根元素的":["64.38"],"1em":["64.38"],"1rem":["64.38"],"达到自适应的目的":["64.39"],"表现":["64.40"],"会导致":["64.41"],"html文档以混杂模式出现":["64.41"],"dragover":["64.42","71.3"],"在被拖放在某元素内移动时触发":["64.42"],"用户交互的这段过程":["64.43"],"影响的主要是":["64.43"],"压缩":["64.44"],"资源":["64.44"],"降低请求量":["64.45"],"合并资源":["64.45"],"减少":["64.45"],"主要负责传送0和1的电信号":["64.48"],"由此我们可得知internet通信的前提必须是知道双方的ip地址和mac地址":["64.48"],"以太网的物理地址":["64.48"],"ip地址负责确定接收方的子网":["64.48"],"mac地址负责确定接收方的主机地址":["64.48"],"tcp协议":["64.48"],"transmission":["64.48"],"control":["64.48","69.50"],"protocol":["64.48"],"传输控制协议":["64.48"],"是一种面向连接的":["64.48"],"可靠的":["64.48"],"基于字节流的":["64.48"],"传输层协议":["64.48"],"tcp协议的主要功能是当应用层向tcp层发送用于网间传输的":["64.48"],"用8位字节表示的数据流":["64.48"],"tcp则把数据流分割成适当长度的报文段":["64.48"],"最大传输段大小":["64.48"],"miss":["64.48"],"通常受该计算机连接的网络的数据链路层的最大":["64.48"],"传送单元":["64.48"],"mtu":["64.48"],"限制":["64.48"],"之后tcp把数据包传给ip层":["64.48"],"scalable":["64.49"],"no":["64.49"],"采用border":["64.49"],"image的方式":["64.49"],"进行下一步操作":["64.50"],"需要特别注意的是":["64.50"],"如果改变":["64.50"],"两者相邻的外边距皆为正数时":["64.51"],"折叠结果是比较它们两者之间较大的值":["64.51"],"将计算逻辑和函数绑定在一起":["66.1","78.4"],"从而在依赖项不变时只计算一次":["66.1","78.4"],"用于缓存计算值":["66.1","78.4"],"称为":["66.2"],"差异":["66.2"],"过程":["66.2"],"而":["66.3","117.1","119.17"],"不同":["66.3"],"当应用的状态被改变时":["66.3"],"全部组件都会重新渲染":["66.3"],"所以":["66.3","89.25"],"中用":["66.3"],"shouldcomponentupdate":["66.3"],"这个生命周期的钩子函数来控制":["66.3"],"组件写法不一样":["66.3"],"另一方面":["66.4"],"不受控制的组件使用refs":["66.4"],"或其它方法在内部管理自己的状态":["66.4"],"它们独立存储和更新其状态":["66.4"],"而不依赖于":["66.4"],"或回调":["66.4"],"父组件对不受控制的组件的状态的控制较少":["66.4"],"jsx":["66.4"],"useref":["66.4"],"功能组件被定义为简单的javascript函数":["66.5"],"它们将":["66.5"],"作为参数并直接返回jsx":["66.5"],"功能组件无权访问生命周期方法或状态":["66.5"],"然而随着":["66.5"],"react16":["66.5"],"hooks":["66.5"],"的引入":["66.5"],"它允许执行副作用":["66.6"],"根据更改更新组件或触发其它api调用":["66.6"],"此方法在从dom中删除组件之前调用":["66.6"],"它用于清理":["66.6"],"在初始呈现期间":["66.7"],"loading":["66.8"],"something":["66.8","97.3"],"当数组中有参数时":["66.8"],"setvalue":["66.9"],"someapi":["66.9"],"child":["66.10","69.7","73.9","73.10","81.9","81.11"],"当时用本地状态并在组件之间传递它时":["66.11"],"由于组件深度潜逃的可能性":["66.11"],"代码可能会变得复杂":["66.11"],"但是":["66.12"],"通常会查看":["66.13"],"来决定发生了什么":["66.13"],"switch":["66.13"],"payload":["66.14"],"为了更改状态":["66.14"],"必须调用函数":["66.14"],"这是一种可以预测的应用程序状态管理模式":["66.15"],"聚合和其它操作":["66.16"],"通过flux":["66.16"],"相对于ajax更加强大和灵活":["66.17"],"支持流式数据":["66.17"],"cors和其它现代特性":["66.17"],"axios是一个基于promise的http客户端":["66.17"],"可以用于浏览器和node":["66.17"],"js环境":["66.17"],"由于它们的执行次数是动态的":["66.18"],"可能会导致hook的调用顺序发生改变":["66.18"],"比较两个虚拟dom树":["66.20"],"对两棵虚拟dom树进行深度优先的便利":["66.20"],"比较相应节点的差异":["66.20"],"找出差异":["66.21"],"vue的核心只关注视图层":["67.1"],"从而实现业务逻辑的重用":["67.2"],"这允许在不同的视图之间共享共同的viewmodel":["67.2"],"团队协作":["67.2"],"mvvm模式的分层结构可以使不同的团队成员在不同层次上独立工作":["67.2"],"减少了彼此的依赖性":["67.2"],"由于数据逻辑与展示逻辑分开":["67.2"],"所以对逻辑的修改和调试不影响用户界面的呈现":["67.2"],"mvvm模式通常具有双向数据绑定的功能":["67.2"],"使视图与数据保持同步":["67.2"],"从而实现了更实时的用户体验":["67.2"],"响应式编程":["67.2"],"mvvm模式通常设计响应式编程范式":["67.2"],"使数据的变化能够自动传播到相关的视图中":["67.2"],"只能单向绑定":["67.3"],"子组件内部不能直接修改父组件传递过来的数据":["67.3"],"只执行一次":["67.4"],"passive":["67.4"],"一般触摸事件的修饰符":["67.4"],"常用于改善移动端设备的滚屏性能":["67.4"],"键盘修饰符":["67.4"],"enter":["67.4"],"回车键":["67.4"],"delete":["67.4","89.16","89.21"],"捕获":["67.4"],"叫模版插值":["67.7"],"是它的另一种写法":["67.7"],"事件类型":["67.9"],"节点":["67.10"],"就会对内容清空并赋新值":["67.10"],"每个计算属性都包括一个":["67.11"],"getter":["67.11","67.49"],"view":["67.12"],"路由出口":["67.12"],"路由模版显示的位置":["67.12"],"http":["67.13","76.0","112.0"],"api的浏览器":["67.15"],"依赖":["67.15"],"模式监听":["67.16"],"pushstate":["67.16"],"所以它不需要在服务器里面进行任何特殊处理":["67.18"],"对后端没啥影响":["67.18"],"改变hash值不会重新加载页面":["67.18"],"因为浏览器可以通过":["67.18"],"onhashchange":["67.18"],"事件监听hash的辩护":["67.18"],"url":["67.19","98.0"],"服务器接收请求并解析":["67.19"],"然后进行相应的逻辑处理":["67.19"],"当使用这种模式时":["67.19"],"会导致一个问题":["67.19"],"stateobject":["67.20"],"参数添加任意类型的数据到记录中":["67.20"],"而hash只能添加短字符串":["67.20"],"router":["67.22","67.35"],"push":["67.22","89.4","113.3"],"q":["67.23"],"vue":["67.23","67.35","71.0"],"category":["67.23"],"framework":["67.23"],"当需要传递筛选条件":["67.24"],"搜索关键字":["67.24"],"分页信息等非标识性信息时":["67.24"],"类名":["67.28"],"也可以使用数组语法":["67.28"],"样式信息":["67.29"],"dosomething":["67.31"],"me":["67.31","69.19","69.21"],"path":["67.33","98.0"],"login":["67.33"],"to":["67.34","89.7","89.9"],"重定向到一个不同的地址":["67.35"],"error":["67.35","121.4","123.2","134.3","137.3"],"将会把导航终止":["67.35"],"并把错误传递给":["67.35"],"onerror":["67.35"],"注册过的回调":["67.35"],"show":["67.36"],"default属性设置默认值":["67.37"],"在当前属性没有值传入时调用":["67.37","67.38"],"props也可以定义为":["67.37"],"为了开启":["67.37"],"对props类型的推导":["67.37"],"可通过":["67.38"],"进行解构":["67.38"],"父组件中使用自定义时间接收":["67.40"],"自定义事件名称必须与子组件传递的一致":["67.40"],"即登号前面名称一致":["67.40"],"等号后面的事件名称可自行定义":["67.40","67.41"],"事件中通过默认参数接收使用子组件传递的值":["67.40","67.41"],"setup函数中的时间必须":["67.40"],"setup语法糖中组件引入后使用":["67.41"],"无需注册":["67.41"],"子组件中的":["67.42"],"就是父组件放在子组件中的内容":["67.42"],"如果不传值":["67.43"],"orange":["67.44","67.45"],"apple":["67.44"],"slotname":["67.45"],"你不懂吗喽":["67.45"],"也可以通过解构来获取数据":["67.46"],"子组件child":["67.47"],"并在数据源变化时调用所给的回调函数":["67.48"],"ref":["67.49","73.8"],"回调函数接收两个数组":["67.50"],"第三个参数是可选的":["67.50"],"是一个对象":["67.50"],"支持下面这些选项":["67.50"],"当直接侦听一个响应式对象时":["67.51"],"侦听器会自动启用深层模式":["67.51"],"深层级变更状态所触发的回调":["67.51"],"调试选项与刷新时机":["67.51"],"每次监听的值发生变化时都会调用回调":["67.52"],"是否调用return":["67.52"],"必须有":["67.52"],"首页白屏":["67.53"],"等方法":["67.54"],"用于改变url":["67.54"],"以及":["67.54"],"currentroute":["67.54"],"matched":["67.54"],"等属性":["67.54"],"userouter":["67.54"],"函数或来获取路由器实例":["67.54"],"createrouter":["67.54"],"createwebhashhistory":["67.54"],"contact":["67.55"],"功能":["67.56"],"去除无用的代码":["67.56"],"减少包的大小":["67.56"],"fragment":["67.56"],"teleprot":["67.56"],"teleport":["67.56"],"中数据的过滤":["67.57"],"放置了所有的处理数据逻辑的方法":["67.57"],"当触发事件想改变":["67.57"],"数据的时候使用":["67.57"],"变量":["69.3","88.15","105.3"],"它是通过父组件传递过来的":["69.3"],"parent":["69.3","69.7","88.14","107.2"],"触发父组件中的自定义事件":["69.5"],"然后使用":["69.5"],"defineemits函数定义了一个名为":["69.5"],"changeparentcount的自定义事件":["69.5"],"然后通过":["69.5","78.8"],"emit方法触发名为":["69.5"],"的自定义事件":["69.5"],"childref":["69.7"],"将数据":["69.9"],"提供给所有子组件":["69.9"],"在子组件":["69.9"],"我们使用":["69.9"],"获取来自父组件的数据":["69.9"],"此时":["69.9"],"在子组件内部":["69.11"],"通过":["69.11","72.26","78.8","78.10","89.6"],"defineemits":["69.11"],"我们定义了两个事件":["69.11"],"这样":["69.11"],"父组件可以监听并处理这两个事件":["69.11"],"然后我们":["69.11"],"中定义了一个按钮":["69.11"],"script":["69.11","98.0"],"中实现":["69.11"],"emitevent":["69.13"],"更新name和age":["69.13"],"组件second":["69.13"],"second":["69.13"],"通过定义":["69.15"],"store":["69.15","73.20"],"counter":["69.17"],"正确的方式":["69.19","69.21"],"错误的方式":["69.20"],"condition":["69.20"],"每个阶段都对应着一系列的生命周期方法":["69.23"],"用于在不同的时机执行特定的逻辑":["69.23"],"但在新版的":["69.23"],"时都会调用":["69.24"],"必选方法":["69.24"],"更新之前获取当前":["69.25"],"的快照":["69.25"],"在新版的":["69.26"],"中已经被标记为不推荐使用":["69.26"],"可以配合":["69.32"],"usememo":["69.32","78.5"],"用于管理状态":["69.35"],"根据滚动条的位置":["69.36"],"计算出可视区域的起始索引和结束索引":["69.36"],"它将针对此页面运行一连串的测试":["69.37"],"first":["69.38","119.11","137.3"],"contentful":["69.38"],"paint":["69.38"],"首次有效绘制":["69.38"],"meaningful":["69.38"],"平均值":["69.39"],"橙色":["69.39"],"然后在目标页面中读取这些参数":["69.42"],"然后在另一个页面中读取这些数据":["69.43"],"实现跨页面通信":["69.43"],"与local":["69.44"],"storage相比":["69.44"],"并且会随着每个http请求发送到服务器":["69.45"],"不受同源策略的限制":["69.47"],"因此可以用于跨域通信":["69.47"],"这样的请求就称为跨域请求":["69.48"],"虽然":["69.49","82.0"],"access":["69.50"],"allow":["69.50"],"由代理服务器去请求目标资源":["69.51"],"可以使用服务器端代理向目标服务器发起请求":["69.52"],"并将结果返回给客户端":["69.52"],"nginx":["69.53"],"反向代理":["69.53"],"可以使用":["69.53","139.1"],"在微前端架构中":["69.54"],"通常会涉及多个独立的前端应用":["69.54"],"它们可以是由不同团队开发":["69.54"],"使用不同技术栈构建的":["69.54"],"以下是实现微前端的一些常见方式":["69.54"],"组合式架构":["69.54"],"基于组件的架构":["69.54"],"将前端应用程序拆分为可复用的组件":["69.54"],"每个组件负责自己的":["69.54"],"ui":["69.54"],"和业务逻辑":["69.54"],"然后":["69.54","119.14"],"通过组合这些组件来构建整个应用程序":["69.54"],"模块化的架构":["69.54"],"将前端应用程序划分为独立的模块":["69.54"],"每个模块负责特定功能或页面":["69.54"],"共享的代码可以更容易地被复用和维护":["69.55"],"同时也有助于保持一致性":["69.55"],"统一构建和部署":["69.55"],"所有项目的构建和部署流程可以集中在一个仓库中管理":["69.55"],"便于统一配置和管理":["69.55"],"这样可以减少重复的配置工作":["69.55"],"是一个与":["69.56"],"生命周期相关的":["69.56"],"和一个用于更新":["69.60"],"的函数":["69.60"],"使用自定义":["69.60"],"来管理本地存储中的数据":["69.60"],"examplecomponent":["69.60"],"remove":["70.7"],"在拖动元素在可放置区域内移动时触发":["71.3"],"dragleave":["71.3"],"用于设置元素是否可拖动":["71.4"],"datatransfer":["71.4"],"等":["71.6"],"在事件处理函数中实现拖拽操作的逻辑":["71.6"],"对":["71.9"],"tree":["71.9","137.3"],"replace":["72.26"],"mycontext":["73.11"],"然后在组件文件中引入定义的":["73.11"],"并引入react包":["73.11"],"usecontext":["73.11"],"skew":["73.13"],"30deg":["73.13"],"倾斜":["73.13"],"transition":["73.13"],"过渡":["73.13"],"用于在不同状态之间平滑地过渡css属性的值":["73.13"],"2s":["73.13"],"animation":["73.13"],"动画":["73.13"],"用于创建自定义的动画效果":["73.13"],"然后使用网格行和列的属性来定义布局":["73.14"],"响应式布局":["73.14"],"使用媒体查询":["73.14"],"media":["73.14"],"queries":["73.14"],"可以根据不同的设备尺寸和屏幕宽度应用不同的样式":["73.14"],"可以使用相对单位":["73.14"],"垂直和水平居中":["73.15"],"和伪元素":["73.15"],"before":["73.15"],"after":["73.15"],"微任务通常是在当前任务执行结束后立即执行的任务":["73.16"],"它们相对于宏任务来说执行顺序更早":["73.16"],"常见的微任务包括":["73.16"],"promise":["73.16"],"mutationobserver":["73.16"],"这些变量的集合称之为闭包":["73.17"],"颗粒":["73.18"],"strictmode":["73.20","73.23"],"provider":["73.20"],"您可能需要立即获取更新后的状态":["73.21"],"为了实现此目的":["73.21"],"提供了":["73.21"],"是一个新的入口函数":["73.22"],"用于创建根react组件":["73.22"],"它可以替代原先的":["73.22"],"reactdom":["73.22","73.24"],"使得开发者可以将多个根节点渲染到一个页面上":["73.22"],"usestate":["73.25"],"useeffect":["73.25"],"unstable":["73.25"],"concurrentmode":["73.25"],"const":["73.25","74.10","87.10","87.34","88.6","88.17","121.5","123.7","123.8"],"默认返回":["74.2"],"的变量":["74.3"],"返回值是":["74.3"],"总的来说":["74.3"],"会产生一个新的":["74.5"],"当一个变量希望传入某种类型时":["74.6"],"可以考虑使用联合类型":["74.6"],"上面":["74.7"],"求模法":["74.7"],"按照":["74.7"],"用1000求模取末尾3位":["74.7"],"然后用除法判断是否还有剩余位数":["74.7"],"性能比较好":["74.7"],"则不会重新渲染组件":["74.10"],"而是直接使用之前的渲染结果":["74.10"],"从而提升性能":["74.10"],"定义一个普通的函数组件":["74.10"],"的引用指向新创建的对象":["74.11"],"但由于之前":["74.11"],"已经被赋值为":["74.11"],"fff":["74.14","74.18"],"grid布局":["74.14"],"容器和项目":["74.14"],"我们通过在元素上声明":["74.14"],"inline":["74.14","74.15","131.5","131.8"],"来创建一个网格容器":["74.14"],"一旦我们这样做":["74.14"],"这个元素的所有直系子元素将成为网格项目":["74.14"],"比如上面":["74.14"],"所在的元素为一个网格容器":["74.14"],"其直系子元素将成为网格项目":["74.14"],"网格轨道":["74.14"],"fill关键字":["74.16"],"fr关键字":["74.16"],"布局还引入了一个另外的长度单位来帮助我们创建灵活的网格轨道":["74.16"],"fr":["74.16"],"单位代表网格容器中可用空间的一等份":["74.16"],"1fr":["74.16"],"2fr":["74.16"],"表示第一个列宽设置为":["74.16"],"后面剩余的宽度分为两部分":["74.16"],"宽度分别为剩余宽度的":["74.16"],"实现的效果是一样的":["74.17"],"wrapper":["74.17","74.22"],"columns":["74.17"],"200px":["74.17","74.20","74.22"],"100px":["74.17","74.20","74.22"],"上面代码表示划分出":["74.18"],"个单元格":["74.18"],"其中值得注意的是":["74.18"],"符号代表空的单元格":["74.18"],"也就是没有用到该单元格":["74.18"],"dense":["74.19"],"gap":["74.20","74.21"],"5px":["74.20","74.21"],"auto":["74.20","74.21"],"rows":["74.20","74.21","78.10"],"50px":["74.20","74.21","81.14"],"只设置了两行":["74.22"],"但实际的数量会超出两行":["74.22"],"超出的行高会以":["74.22"],"three":["74.24"],"d1ba74":["74.24"],"four":["74.24"],"的值并且返回这个新数组":["75.2"],"第三步":["75.2"],"新数组开始执行reduce方法":["75.2"],"目标reduce方法中没有传入第二个参数":["75.2"],"所以是默认从0开始计算的":["75.2"],"运行顺序为下面的顺序":["75.2"],"函数":["75.3"],"所以先打印的项按顺序为":["75.3"],"在异步任务中":["75.3"],"分为宏任务和微任务":["75.3"],"微任务先执行":["75.3"],"属于微任务的是":["75.3"],"foreach":["75.4"],"item":["75.4","75.16"],"处理hash":["75.5"],"split":["75.5"],"content":["75.6","134.3"],"是否安全":["75.7"],"访问控制":["75.7"],"的返回值组成一个数组":["75.11"],"当有一个":["75.11"],"我们就希望决定最终新":["75.13"],"都是":["75.14"],"reject":["75.14"],"我们是获取不到对应的结果的":["75.15"],"在es11":["75.15"],"es2020":["75.15"],"查找children节点上是否包含目标用户":["75.16"],"deepuserid":["75.16"],"undefined":["75.16","87.30","106.0","110.16","123.6"],"设置边界条件":["75.16"],"找到目标用户名称后终止":["75.16"],"返回对应的userid":["75.16"],"的用户id为":["75.16"],"如果未找到匹配的用户名":["75.16"],"未匹配到目标用户":["75.16"],"服务端可以通过":["76.0"],"请求头获取用户浏览器中":["76.0"],"cookie":["76.0"],"的内容":["76.0"],"localstorage":["76.0"],"可以存储":["76.0"],"blob":["76.0"],"数据":["76.0"],"只能存储字符串数据":["76.0"],"因此存储对象之前需要进行序列化":["76.0"],"除了":["76.0"],"其他的存储机制都没有跨域限制":["76.0"],"关于网页样式和布局":["76.0"],"rgba":["76.0"],"来缓存该计算结果或者对象":["78.2"],"避免在每次渲染时都重新计算":["78.2"],"在组件内部使用":["78.2"],"接收两个参数":["78.2"],"一个产生计算结果的函数和一个依赖数组":["78.2"],"只有当依赖数组中的值发生改变时":["78.2"],"传入的函数才会重新执行":["78.2"],"computedvalue":["78.2"],"他的主要作用是避免在每次渲染时都进入复杂的计算和重新创建对象":["78.3"],"通过记住上一次的计算结果":["78.3"],"只有在依赖项发生变化的时候才重新计算":["78.3"],"这个函数返回需要记住的值":["78.3"],"一个依赖数组":["78.3"],"当数组中的依赖项发生变化时候":["78.3"],"才会重新计算函数的返回值":["78.3"],"usecallback":["78.5"],"handleclick":["78.5"],"vue2的diff算法":["78.6"],"主要是使用了":["78.6"],"双端diff算法":["78.6"],"遍历每一个虚拟节点":["78.6"],"进行虚拟节点对比":["78.6"],"并返回一个patch对象":["78.6"],"用来存储两个节点不同的地方":["78.6"],"用patch记录的消息去更新dom":["78.6"],"比较每一个节点":["78.6"],"而对于一些不参与更新的元素":["78.6"],"进行比较是有点消耗性能的":["78.6"],"特点":["78.6"],"特别要提一下vue的patch是即时的":["78.6"],"并不是打包后所有修改最后一起操作dom":["78.6"],"也就是在vue中边记录边更新":["78.6"],"react则是将更新放入队列后集中处理":["78.6"],"流程":["78.6"],"对比头头":["78.6"],"尾尾":["78.6"],"头尾":["78.6"],"尾头是否可以复用":["78.6"],"如果可以复用":["78.6"],"就进行节点的更新或移动操作":["78.6"],"更好的响应式系统":["78.7"],"替换真实":["78.8"],"属性":["78.8","89.1"],"来触发":["78.8"],"get":["78.8"],"satck":["78.8"],"对象和key形成对应的":["78.8"],"将负责渲染的":["78.8"],"存入":["78.8"],"这个过程还有其他的":["78.8"],"元组":["78.9"],"interface只能声明对象":["78.9"],"基本类型":["78.9"],"arritem":["78.9"],"arr":["78.9","123.12"],"grid":["78.10"],"通过给父级元素设置":["78.10"],"并且设置网格容器纵向高度为":["78.10"],"不会立即执行":["78.11"],"值改变后才会执行":["78.11"],"运行后可以立即执行":["78.11"],"这一点可以通过":["78.11"],"部门2":["78.12"],"部门3":["78.12"],"部门4":["78.12"],"部门5":["78.12"],"interface":["78.12","119.11","122.3"],"treenode":["78.12"],"children":["78.12"],"buildtree":["78.12"],"先遍历数组":["78.12"],"将每个元素的id作为键":["78.12"],"将元素本身放在map中":["78.12"],"原文链接":["79.0"],"boxshadow":["80.0"],"1s":["81.1","81.8"],"0s":["81.1","81.8"],"rotatex":["81.2"],"0deg":["81.2"],"out":["81.3"],"delay":["81.3","81.5","81.6","81.8"],"0px":["81.4","81.5","81.11"],"270deg":["81.4"],"360deg":["81.4"],"bottom":["81.5","81.11","81.12"],"fill":["81.6"],"mode":["81.6"],"both":["81.6"],"32s":["81.6"],"keyframes":["81.7"],"scale":["81.7"],"9s":["81.8"],"465efb":["81.9","81.13"],"moz":["81.9"],"radius":["81.9"],"nth":["81.9","81.11"],"2n":["81.9","81.11"],"right":["81.9","81.11","81.12"],"linear":["81.12"],"infinite":["81.12"],"20px":["81.13"],"background":["81.13"],"absolute":["81.14"],"left":["81.14"],"top":["81.14","137.3"],"150px":["81.14"],"25px":["81.14"],"75px":["81.14"],"无穷大":["82.0"],"优先生效":["82.0"],"例外规则":["82.0"],"当在一个样式声明中使用一个":["82.0"],"规则时":["82.0"],"此声明将覆盖任何其它声明":["82.0"],"从技术上讲":["82.0"],"与优先级无关":["82.0"],"但它与最终的结果直接相关":["82.0"],"是一个坏习惯":["82.0"],"应该尽量避免":["82.0"],"v":["83.0"],"实现跳动的方块动画":["84.0"],"touppercase":["87.3"],"foo":["87.5","88.10","89.5"],"the":["87.8"],"is":["87.8"],"located":["87.8"],"at":["87.8"],"str":["87.10","98.0"],"c":["87.10","87.23","135.1"],"es5":["87.12"],"写法":["87.12"],"fun":["87.12"],"z":["87.12","119.1"],"es6":["87.12","110.14","113.8"],"func":["87.12"],"该方法还可以接收第二个参数":["87.13"],"作用类似于数组的":["87.13"],"用来对每个元素进行处理":["87.13"],"将处理后的值放入返回的数组":["87.13"],"上面代码中":["87.14","89.1","119.5"],"方法没有参数":["87.14"],"一个参数":["87.14"],"三个参数时":["87.14"],"返回的结果不一样":["87.14"],"填充":["87.16"],"从下标为1到下标为3的区间":["87.16"],"将索引为3及其之后的元素复制到索引为0的位置":["87.17"],"除了属性简写":["87.20"],"方法也可以简写":["87.20"],"abc":["87.21"],"es6中":["87.21"],"对象定义属性名的方式也有了变化":["87.21"],"prototype":["87.24","110.13"],"d":["87.31"],"y":["87.31","88.10"],"内部调用转为调用regexp实例对应的":["87.32"],"regexp":["87.32"],"即直接写在参数定义的后面":["87.34"],"多个指数运算符连用时":["87.36"],"是从最右边开始计算的":["87.36"],"操作符":["88.0"],"对象和函数等基本组件":["88.0"],"而不会被提升到函数作用域":["88.2"],"这意味着在使用":["88.2"],"正常运行":["88.3","88.10"],"报错":["88.3","88.5","88.6","119.12"],"如果等号的右边不是数组":["88.5"],"或者严格地说":["88.5"],"不是可遍历的结构":["88.5"],"那么将会报错":["88.5"],"nan":["88.5"],"对于数据结构具有":["88.5"],"iterator":["88.5","89.24","89.25"],"接口":["88.5"],"那么都可以采用数组的形式进行解构赋值":["88.5"],"对象的解构赋值可以取到继承的属性":["88.6"],"setprototypeof":["88.6","89.2"],"对象的解构也能指定默认值":["88.6"],"默认值生效的条件是":["88.6"],"对象的属性值严格等于":["88.6"],"l":["88.7","89.29"],"syntaxerror":["88.10"],"duplicate":["88.10"],"parameter":["88.10"],"not":["88.10"],"函数表达式示例":["88.11"],"multiply":["88.11"],"该对象在函数体内不存在":["88.12"],"如果要用":["88.12"],"可以用":["88.12"],"箭头函数没有原型属性":["88.13"],"箭头函数的":["88.13"],"插入dom标签":["88.14"],"参数代替":["88.15"],"对象不是数组":["88.15"],"而是一个类数组的对象":["88.15"],"numbers":["88.17"],"alex":["88.18"],"可以提高代码的可读性和可维护性":["88.19"],"h":["88.21"],"ello":["88.21"],"hi":["88.21"],"属性名表达式与简洁表示法":["88.21"],"不能同时使用":["88.21"],"会报错":["88.21","119.10","119.17"],"属性名表达式如果是一个对象":["88.21"],"默认情况下会自动将对象转为字符串":["88.21"],"创建":["88.22"],"area":["88.23"],"r":["88.23","136.2","138.2"],"main":["88.23"],"是一个空对象":["89.1"],"没有任何拦截效果":["89.1"],"访问":["89.1","127.2"],"就等同于":["89.1"],"一个技巧是将":["89.1"],"设置到":["89.1"],"从而可以在":["89.1"],"上调用":["89.1"],"isextensible":["89.2"],"proto":["89.2","98.0"],"如果目标对象是函数":["89.2"],"string":["89.4","119.8","121.2"],"reflect":["89.4"],"只要读写的属性名的第一个字符是下划线":["89.5"],"一律报错":["89.5"],"从而达到禁止读写内部属性的目的":["89.5"],"方法传入四个参数":["89.5"],"receiver":["89.5","89.7"],"bar":["89.5"],"上面示例中":["89.5","119.2","119.15"],"方法的第四个参数":["89.5"],"指的是原始的操作行为所在的那个对象":["89.5"],"一般情况下是":["89.5"],"ser":["89.5"],"方法拦截":["89.6"],"返回一个字符串":["89.6"],"函数调用":["89.6"],"twice":["89.6"],"怎么修改默认行为":["89.7"],"你总可以在":["89.7"],"上":["89.7"],"获取默认行为":["89.7"],"set":["89.7","89.8"],"on":["89.7"],"has":["89.9"],"been":["89.9"],"updated":["89.9"],"observer2":["89.9"],"可以作为对象的属性名来定义对象的私有成员":["89.10"],"包括对象和函数":["89.12"],"而对象只能使用字符串作为键":["89.12"],"john":["89.13","97.5"],"age":["89.13"],"weakmap中的键是弱引用的":["89.14"],"这意味着如果键对象都没有其它引用":["89.14"],"部署私有属性":["89.15"],"返回实例":["89.16"],"不会重复":["89.17"],"那么这个对象将会被垃圾回收机制回收":["89.19"],"只要这些对象在外部消失":["89.20"],"删除值":["89.21"],"任何数据结构只要内部有":["89.23"],"循环":["89.24"],"函数可以简写下面的形式":["89.25"],"只是把接口规格加到数据结构之上":["89.25"],"typedarray":["89.26"],"函数的":["89.26"],"提前退出调用":["89.27"],"yield":["89.28"],"后面跟的是一个可遍历的结构":["89.28"],"它会调用该结构的遍历器接口":["89.28"],"后面跟着一个星号表示这个yield也是可迭代的":["89.28"],"可以被遍历":["89.28"],"generator":["89.28"],"o":["89.29","105.5","117.0"],"遍历set和map的元素":["89.29"],"generator函数除了状态机":["89.30"],"文件的blob数据":["90.0"],"文件名":["90.0","131.4"],"urlobject":["90.0"],"window":["90.0","105.6"],"webkiturl":["90.0"],"随滚动条滚动而改变":["91.0"],"pagey":["91.0"],"screenx":["91.0"],"鼠标相对于显示器屏幕左上角x轴的坐标":["91.0"],"screeny":["91.0"],"鼠标相对于显示器屏幕左上角y轴的坐标":["91.0"],"offsetx":["91.0"],"鼠标相对于事件源左上角x轴的坐标":["91.0"],"鼠标相对于事件源左上角y轴的坐标":["91.0"],"网页部分":["91.0"],"网页可见区域宽":["91.0"],"document":["91.0","97.5","104.6"],"location":["92.0"],"n1":["92.0"],"recv状态":["93.1"],"established":["93.1"],"客户端与服务端发送同步标识syn后":["93.1"],"对方确认后进入tcp建立状态":["93.1"],"三次握手详细过程":["93.1"],"建立连接时":["93.1"],"客户端向服务端发syn包":["93.1"],"该数据包假设syn为j":["93.1"],"随机产生一个值seq":["93.1"],"发送确认包":["93.2"],"此时客户端进入":["93.2"],"此时tcp连接还没有释放":["93.2"],"必须经过两个":["93.2"],"msl":["93.2"],"才会进入":["93.2"],"closed状态":["93.2"],"可以看出服务端结束tcp连接的时间要比客户端早一些":["93.2"],"为什么建立连接时需要握手三次":["93.2"],"关闭连接时需要四次呢":["93.2"],"把某些层进行合并了":["94.0"],"本质上还是相同的":["94.0"],"太过细化":["94.0"],"有一定的参考意义":["94.0"],"但实现起来比较繁琐":["94.0"],"相比较而言":["94.0"],"使其在用户的浏览器上运行":["95.1"],"利用这些恶意脚本":["95.1"],"攻击者可获取用户的敏感信息":["95.1"],"包含":["95.2"],"伪协议":["95.2"],"等可执行代码":["95.2"],"dom型":["95.3"],"将攻击脚本写在url中":["95.3"],"诱导用户点击该url":["95.3"],"lt":["95.4"],"gt":["95.4"],"xsrf":["95.5"],"是一种挟制用户在当前已经登陆的web应用程序上执行非本意":["95.5"],"有效":["95.6"],"因为服务器并不是什么时候都能取到":["95.6"],"referer":["95.6"],"xss是内容没有过滤导致浏览器将攻击者的输入当代码执行":["95.7"],"csrf则是因为浏览器在发送http请求时候自动带上":["95.7"],"call与apply函数的差别":["96.0"],"就是后面传入的参数格式不同":["96.0"],"call传入的是每个单纯的元素":["96.0"],"而apply传入的是一个数组":["96.0"],"bind":["96.1","105.1"],"方法可以让对应的函数想什么时候调就什么时候调用":["96.1"],"登录后":["97.0"],"服务器在响应中使用":["97.0"],"parsedcookies":["97.1"],"将cookie编码为":["97.2"],"20name":["97.2"],"20smith":["97.2"],"下都是可见的":["97.3"],"但是在":["97.3"],"home":["97.3"],"当在":["97.4"],"设置cookie时":["97.4"],"我们应该明确地将":["97.4"],"选项设置为根域":["97.4"],"那么":["97.4"],"所有子域都可以访问到这样的cookie":["97.4"],"expries":["97.5"],"如果我们将":["97.5"],"rfc6265":["97.6"],"不能用多余的空格":["98.0"],"字符串不能用":["98.0"],"换行":["98.0"],"multiple":["98.0"],"lines":["98.0"],"max":["98.0"],"空行最多不能超过2行":["98.0"],"reassign":["98.0"],"不能重写native对象":["98.0"],"negated":["98.0"],"lhs":["98.0"],"操作符的左边不能有":["98.0"],"nested":["98.0"],"ternary":["98.0"],"禁止使用嵌套的三目运算":["98.0"],"禁止在使用new构造一个实例后不赋值":["98.0"],"禁止使用new":["98.0"],"require":["98.0","102.2"],"wrappers":["98.0"],"禁止使用new创建包装实例":["98.0"],"calls":["98.0"],"不能调用内置的全局对象":["98.0"],"比如math":["98.0"],"octal":["98.0"],"禁止使用八进制数字":["98.0"],"escape":["98.0"],"禁止使用八进制转义序列":["98.0"],"param":["98.0"],"禁止给参数重新赋值":["98.0"],"concat":["98.0","103.8"],"node中不能使用":["98.0"],"dirname或":["98.0"],"filename做路径拼接":["98.0"],"plusplus":["98.0"],"process":["98.0"],"禁止使用process":["98.0"],"exit":["98.0"],"redeclare":["98.0"],"禁止重复声明变量":["98.0"],"禁止在正则表达式字面量中使用多个空格":["98.0"],"restricted":["98.0"],"如果禁用了指定模块":["98.0"],"使用就会报错":["98.0"],"语句中不能有赋值表达式":["98.0"],"禁止使用javascript":["98.0"],"void":["98.0","119.8"],"self":["98.0"],"compare":["98.0"],"不能比较自身":["98.0"],"sequences":["98.0"],"禁止使用逗号运算符":["98.0"],"外部作用域中的变量不能与它所包含的作用域中的变量或参数同名":["98.0"],"严格模式中规定的限制标识符不能作为声明时的变量名使用":["98.0"],"cjs是同步导入模块":["100.0"],"可以从node":["100.0"],"modules中引入一个库或者从本地目录引入一个文件":["100.0"],"mylocalmodule":["100.0"],"some":["100.0","104.6"],"local":["100.0"],"file":["100.0"],"都会生效":["100.0"],"当cjs导入时":["100.0"],"它会给你一个导入对象的副本":["100.0"],"方法对数组的每个元素执行一次给定的函数":["101.1"],"设置时间":["102.0"],"格式化时间":["102.0"],"方式":["102.2"],"获取月份":["102.6"],"january":["102.6"],"december":["102.6"],"获取一个月中的某一天":["102.6"],"date":["102.6"],"获取一个星期中的某一天":["102.6"],"日期":["102.7"],"days":["102.7","102.15"],"星期":["102.7"],"weeks":["102.7"],"小时":["102.7"],"分钟":["102.7"],"0到12":["102.8"],"没有前导零的分钟数":["102.8"],"0到59":["102.8"],"有前导零的分钟数":["102.8"],"00到59":["102.8"],"s":["102.8","121.2"],"没有前导零的秒数":["102.8"],"1到59":["102.8"],"ss":["102.8"],"有前导零的描述":["102.8"],"01到59":["102.8"],"unix时间戳":["102.8"],"格式化年月日":["102.8"],"xxxx年xx月xx日":["102.8"],"months":["102.9"],"todate":["102.10"],"mmm":["102.11"],"yy":["102.11"],"5月":["102.11"],"startof":["102.12"],"day":["102.12"],"小时前":["102.12"],"昨天晚上7点49分":["102.13"],"今天晚上7点49分":["102.13"],"本年的的开始日期":["102.15"],"不存在":["103.1"],"上一次计算结果":["103.1"],"如果需要回调函数从数组索引为0的":["103.1"],"则为array":["103.3"],"初始":["103.4"],"化为数组中的第一个值":["103.4"],"回调函数从数组中的第二个值作为":["103.4"],"sum":["103.6","103.7"],"reduce":["103.6","103.11"],"cur":["103.8","103.13"],"第二种写法":["103.9","103.10"],"只是实现方法不同":["103.9"],"rings":["103.11"],"shining":["103.11"],"allbooks":["103.11"],"输出结果为":["103.12"],"newarr":["103.13"],"acc":["103.13"],"将由":["103.14"],"包装在已解决的":["103.14"],"f3":["103.14"],"输出为7":["103.15"],"multiply6":["103.17"],"multiply9":["103.17"],"示例":["104.1"],"延迟一秒后执行":["104.1"],"浏览器和node":["104.3"],"js环境通常将":["104.3"],"cleartimeout":["104.4","115.5"],"示例使用":["104.5"],"stopinterval":["104.5"],"执行动画操作":["104.6"],"例如移动元素":["104.6"],"getelementbyid":["104.6"],"可以更好的利用浏览器的优化":["104.7"],"一般通过":["105.1"],"apply":["105.1"],"方法显式调用函数时":["105.1"],"函数体内的":["105.1"],"this打印出来为":["105.2"],"bar打印出来为":["105.2"],"上述示例中的":["105.2"],"函数返回了":["105.3"],"的调用":["105.3"],"此时已经执行完成":["105.3"],"所以o2":["105.3"],"打印":["105.3"],"第三个例子中":["105.3"],"通过把o1":["105.3"],"赋值给":["105.3"],"的值时":["105.3"],"执行fn函数":["105.3"],"此时this指向window":["105.3"],"复杂类型":["105.5"],"则":["105.5","112.6"],"指向被返回的对象":["105.5"],"输出":["105.6"],"如果想要this指向":["105.6"],"这个对象":["105.6"],"箭头函数捕获的是其外部作用域的":["105.7"],"值":["105.7"],"而不是在调用时绑定的":["105.7"],"无论如何调用":["105.7"],"它始终会打印":["105.7"],"函数所在作用域的":["105.7"],"而不会受到":["105.7"],"方法的影响":["105.7"],"这一步打印结果为":["105.7"],"foo函数体":["105.7"],"所有原始类型都有它们相应的对象包装类型":["106.0"],"这为处理原始值提供可用的方法":["106.0"],"bigint类型":["106.1"],"类型在":["106.1"],"中是一个数字的原始值":["106.1"],"它可以表示任意大小的整数":["106.1"],"通过属性访问其获取值":["106.3"],"可以是任意的":["106.3"],"javascript的值":["106.3"],"writable":["106.3"],"一个布尔值":["106.3"],"表示是否可以通过赋值来改变属性":["106.3"],"enumerable":["106.3"],"表示是否可以通过":["106.3"],"honda":["106.4"],"accord":["106.4"],"expected":["106.4","123.2"],"是构造函数":["107.0"],"原型对象":["107.1"],"有一个默认的":["107.1"],"继续引用上面的代码":["107.2"],"当我们想要为":["107.2"],"实例化的所有实例添加一个共享的属性时":["107.2"],"万物继承自":["107.3"],"这也就是为什么":["107.3"],"我们可以实例化一个对象":["107.3"],"并且可以调用该对象上没有的属性和方法了":["107.3"],"我们并没有在parent中定义任何方法和属性":["107.3"],"但是我们可以调用":["107.3"],"tostring":["107.3"],"hasownproperty":["107.3"],"等等一些方法":["107.3"],"我们可以调用很多我们没有定义的方法":["107.3"],"这些方法从哪里来的呢":["107.3"],"现在引出":["107.3"],"原型链":["107.3"],"那么我们再回来看一下":["107.4"],"再次打印":["107.4"],"此时的a才会打印1":["108.0"],"这个a":["108.0"],"也会打印1":["108.0"],"为什么会这样呢":["108.0"],"由于函数的局部作用域的问题":["108.0"],"全局变量访问不到函数内部的变量":["108.0"],"所以会打印":["108.0"],"就拿这个例子来说":["108.0"],"由于在下面var了一个变量":["108.0"],"但是由于变量的提升":["108.0"],"它会先赋值为":["108.0"],"并且提升到函数体内部的顶端":["108.0"],"也就是说此时的":["108.0"],"虽然全局作用域里边已经声明了变量":["108.0"],"但是由于函数体内部的变量的提升":["108.0"],"从先后顺序来讲":["108.0"],"它会现访问到全局的作用域里的":["108.0"],"渲染树":["109.1"],"什么是":["109.2"],"render树":["109.2"],"在了解":["109.2"],"之前":["109.2","117.0"],"我们先了解一下浏览器在页面加载完成后到页面显示的中间过程":["109.2"],"首先将得到的代码解析生成":["109.2"],"dom树":["109.2"],"这个dom树里边包括了所有的html的标签":["109.2"],"包括":["109.2","109.4"],"或者元素的子孙元素继承了":["109.3"],"改变":["109.4"],"浏览器窗口":["109.4"],"resize":["109.4"],"当你查询布局信息":["109.4"],"offsetleft":["109.4"],"offsettop":["109.4"],"属性都会引起重绘":["109.5"],"做动画的时候要注意":["109.5"],"尽量使用这两个属性":["109.5"],"使用csstext来替代要多次修改的style属性":["109.6"],"重绘的操作放入这个队列":["109.7"],"等队列中的操作到了一定的数量或者到了一定的时间间隔":["109.7"],"满足条件的下标":["110.1","110.20"],"x2":["110.2"],"num":["110.3","139.5","139.6"],"isbigenough":["110.5"],"islessthan4":["110.6","110.7"],"我们可以使用解构的方式也可以合并两个或者多个数组":["110.14"],"方法时":["110.16"],"如果调用方法的元素是":["110.16"],"会返回报错":["110.16"],"因为这些类型的数据没有":["110.16"],"而在使用":["110.16"],"表示从下标为1的元素开始删除":["110.18"],"删除0个元素":["110.18"],"生成字母表":["110.22"],"并将其序列排序":["110.22"],"charcodeat":["110.22"],"筛选出奇数项":["110.23"],"引用数据类型保存在堆内存中":["111.1"],"如果属性是引用类型":["111.2"],"拷贝的就是内存地址":["111.2"],"循环递归":["111.4"],"deepclone":["111.4"],"hash":["111.4"],"weakmap":["111.4"],"如果对象是":["111.4"],"深拷贝会另外创造一个一模一样的对象":["111.5"],"新对象跟原对象不共享内存":["111.5"],"修改新对象不会改到原对象":["111.5"],"深拷贝":["111.5"],"深拷贝是递归拷贝深层次":["111.6"],"都是通过发出":["112.0"],"如果其用户界面是从缓存中获取的":["112.1"],"如果命中":["112.2"],"直接从缓存中获取资源":["112.2"],"如果没有命中":["112.2"],"则进入下一步":["112.2"],"如果前两步都没有命中":["112.2"],"但结果已失效":["112.3"],"从上述示例中可以看到":["112.4"],"http响应报文中":["112.4"],"的时间值":["112.4"],"是一个绝对值":["112.4"],"http响应报文中的":["112.4"],"为":["112.4"],"是相对值":["112.4"],"优先级高于":["112.4"],"那么直接根据":["112.4"],"cashe":["112.4"],"返回304":["112.5"],"的字段值":["112.6"],"重新返回该资源":["112.6"],"状态码为200":["112.6"],"否则返回304":["112.6"],"代表资源无更新":["112.6"],"可继续使用缓存文件":["112.6"],"返回当前资源文件的一个唯一标识":["112.6"],"由服务器生成":["112.6"],"etag":["112.7"],"就把这个b称为":["113.0"],"a的子类":["113.0"],"货箱":["113.1"],"minicar":["113.1"],"原型式继承":["113.2"],"s2":["113.3","113.5"],"s1":["113.5"],"可以看到":["113.8"],"打印出来的结果":["113.8"],"属性得到了继承":["113.8"],"方法也没有问题":["113.8"],"文章一开头":["113.8"],"我们使用的是":["113.8"],"中的":["113.8"],"extends":["113.8","119.10","122.3"],"最后的寄生组合式继承方式是通过组合继承改造之后的最优的继承方式":["113.9"],"中的参数":["114.0"],"getsearchstring":["114.0"],"结果":["114.0"],"需要检索的键":["114.0"],"传入的需要分割的url地址":["114.0"],"例":["114.0"],"getsearchstr":["114.0"],"为了优化体验":["115.0"],"需要对这类事件进行调用次数限制":["115.0"],"对此我们就可以采用":["115.0"],"则只生效一次":["115.1"],"两者结合":["115.2"],"throttled":["115.2"],"只需要在窗口完成调整后":["115.6"],"再计算窗口大小":["115.6"],"使用事件驱动":["117.0"],"非阻塞i":["117.0"],"模型而得以轻量和高效":["117.0"],"非常适合在分布式设备上运行数据密集型的实时应用":["117.0"],"在理解":["117.0"],"先明确几个概念":["117.0"],"终端":["117.0"],"终端指的是设备终端终端设备":["117.0"],"会为每一个客户端链接创建一个线程":["117.1"],"而每个线程需要大约2mb的内存":["117.1"],"在一个8gb的服务器上":["117.1"],"大约能同时为4000左右的用户服务":["117.1"],"通过非阻塞i":["117.1"],"上面的示例中":["119.1"],"从对象类型":["119.1"],"会从对象类型":["119.2"],"中挑选出指定的键名":["119.2"],"组成一个新的对象类型":["119.2"],"指定的键名":["119.2"],"必须是对象键名":["119.2"],"keyof":["119.4"],"上述代码中":["119.4"],"符号":["119.4"],"表示去除属性的只读标志":["119.5"],"相应地":["119.5"],"就表示增加只读标志":["119.5"],"等同于":["119.5"],"第一个参数是联合类型":["119.6"],"展开成两个键名":["119.6"],"如果参数":["119.6"],"是联合类型":["119.6"],"t6":["119.7","119.9","119.12"],"t7":["119.7","119.12"],"boolean":["119.7"],"any":["119.8","119.12"],"t5":["119.8","119.9"],"t8":["119.10"],"u":["119.10"],"如果类型不是函数":["119.10"],"t9":["119.10"],"info":["119.11","133.1","137.3"],"引申":["119.11"],"主要用于从外部模块提供的函数类型中":["119.11"],"获取参数类型":["119.11"],"irequest":["119.11"],"last":["119.11"],"ireponse":["119.11"],"就会报错":["119.12","119.14"],"参数":["119.13"],"则返回":["119.13"],"unknown":["119.13","123.12"],"的构造方法类型":["119.14"],"就能获得实例类型":["119.14"],"本身":["119.14"],"如果类型参数不是构造方法":["119.14"],"t1":["119.14"],"类型参数是一个联合类型":["119.15"],"其中的":["119.15"],"会原样返回":["119.15"],"所以最终返回的是":["119.15"],"实现如下":["119.15"],"参数删除":["119.16"],"如果函数没有":["119.16"],"则返回原始函数类型":["119.16"],"可以正确调用":["119.17"],"里面没有这个方法":["119.17"],"使用这个类型工具时":["119.17"],"深入理解typescript":["120.0"],"enum":["121.0"],"关键字":["121.0"],"反向映射":["121.1"],"以免发生不必要的错误":["121.2"],"手动赋值可以不是数字":["121.2"],"这个时候需要通过类型断言来跳过tsc的类型检查编译出来的js仍是可用的":["121.2"],"编译结果":["121.2"],"在这种情况下":["121.3"],"当前枚举成员的值为上一个枚举成员的值加":["121.3"],"但第一个枚举元素是个例外":["121.3"],"如果它没有初始化方法":["121.3"],"那么它的初始值为":["121.3"],"枚举成员使用常数枚举表达式初始化":["121.3"],"ts2474":["121.4"],"declarations":["121.4"],"member":["121.4"],"initializer":["121.4"],"must":["121.4"],"be":["121.4"],"constant":["121.4"],"常出现在声明文件中":["121.5"],"同时使用":["121.5"],"也是可以的":["121.5"],"灵活和类型安全的代码":["122.1"],"泛型允许我们在定义函数":["122.1"],"loggingidentity":["122.3"],"arg":["122.3"],"ts泛型类型不明确":["122.3"],"我们可以在函数参数类型上加上一些限制":["122.3"],"只能让它穿入那些包含":["122.3"],"属性的变量":["122.3"],"这个限制操作就是":["122.3"],"lengthwise":["122.3"],"mygenericnumber":["122.5"],"使用交叉类型进行接口混入":["123.1"],"初始时的":["123.1"],"answer":["123.1"],"定义":["123.1"],"iquestionrecord":["123.1"],"throw":["123.2"],"or":["123.2"],"got":["123.2"],"变量的技术":["123.3"],"通常与联合类型与交叉类型一起使用":["123.3"],"操作符将":["123.5"],"的类型收窄到":["123.5"],"类上":["123.5"],"之后调用":["123.5"],"getsmallpet":["123.6"],"分支的类型细化为有一个可选的或不存在属性":["123.7"],"move":["123.7"],"nameorresolver":["123.8"],"这个写法会报错":["123.9"],"如果需要使用类型注解的层次结构":["123.9"],"请使用接口":["123.9"],"它能使用":["123.9"],"implements":["123.9"],"extedns":["123.9"],"为一个简单的对象类型使用类型别名":["123.9"],"只需要一个与异化的名字就可以":["123.9"],"另外":["123.9"],"当想给联合类型和交叉类型提供一个语义化的名称时":["123.9"],"类型别名是一个好的选择":["123.9"],"请注意":["123.9"],"类型别名在":["123.9"],"interfaced":["123.10"],"在旧版本的":["123.10"],"substr":["123.11"],"ok":["123.11"],"否则返回":["123.12"],"shiftarr":["123.12"],"否":["125.0"],"调用成功回调":["125.0"],"调用失败回调":["125.0"],"complete":["125.0"],"调用完成回调":["125.0"],"不管成功失败都会回调":["125.0"],"人脸核验交互方式":["125.0"],"默认":["125.0"],"见表1":["125.0"],"表1":["125.0"],"与":["127.1"],"可以直接":["127.2"],"通过索引":["127.2"],"来访问":["127.2"],"成本就很低":["127.2"],"单向链表与数组各个操作时间复杂度对比":["127.2"],"链表操作":["127.2"],"最大时间复杂度":["127.2"],"search":["127.2"],"获取指定位置节点的值":["127.4"],"getat":["127.4"],"既可以":["127.5"],"向前查询":["127.5"],"也可以":["127.5"],"向后查询":["127.5"],"deletenode":["127.6"],"currentnode":["127.6"],"deletednode":["127.6"],"如果要删除的是头部节点":["127.6"],"将头部节点设置为第二个节点":["127.6"],"它将成为新的头部节点":["127.6"],"将新头部节点的前驱设置为":["127.6"],"如果链表中的所有节点的值都和传入的参数相同":["127.6"],"那么所有节点都会被删除":["127.6"],"因此需要更新尾部节点":["127.6"],"如果要删除的是尾部节点":["127.6"],"将尾部节点设置为倒数第二个节点":["127.6"],"它将成为新的尾部节点":["127.6"],"如果要删除的是中间节点":["127.6"],"previousnode":["127.6"],"nextnode":["127.6"],"fedration":["129.0"],"这是webpack5的一项重大功能":["129.0"],"允许多个独立的webpack构建连接在一起":["129.0"],"实现模块共享":["129.0"],"从而更好地支持微服务架构":["129.0"],"缓存组":["129.0"],"groups":["129.0"],"抽象":["130.1"],"是因为这里的语法并不会表示出真实语法中出现的每个细节":["130.1"],"blockstatement":["130.2"],"expressionstatement":["130.2"],"callexpression":["130.2"],"callee":["130.2"],"memberexpression":["130.2"],"转化过程":["130.3"],"这个过程就是将上一步解析后的内容":["130.3"],"按照编译器指定的规则进行处理":["130.3"],"指的是语法上不可能再分的":["130.4"],"最小的单个字符或字符串":["130.4"],"是编译过程的一个逻辑阶段":["130.4"],"解决了开发代码与实际运行代码不一致时帮助我们debug到原始开发代码的技术":["131.1"],"实际运行的代码与开发环境的代码不一致":["131.2"],"导致进行debug越来越困难":["131.2"],"如果被关闭可以手动开启":["131.3"],"下图所示":["131.3"],"嵌入":["131.4"],"不单独生成":["131.4"],"性能最好":["131.4"],"生成文件":["131.4"],"然后在末尾添加模块来源":["131.4"],"sourceurl":["131.4"],"依靠sourceurl找到原始代码的位置":["131.4"],"错误追踪":["131.4"],"源码行和列位置":["131.4"],"定位最全":["131.5"],"但":["131.5"],"map文件最大":["131.5"],"性能最低":["131.5"],"处理后结果":["131.5"],"base64":["131.5"],"字符串":["131.5"],"source":["131.7"],"而言":["131.7"],"此时页面":["131.7"],"一般情况下":["131.9"],"我们并不希望其它人都可以在浏览器直接看到我们未编译的源码":["131.9"],"所以我们不应该直接提供sourcemap给浏览器":["131.9"],"但我们又需要sourcemap来定位我们的错误信息":["131.9"],"一方面":["131.9"],"因为它并未提供核心工具类":["133.1"],"所有功能可以通过预设和内联配置提供":["133.1"],"需要注意":["134.1"],"需要保证工作区是干净的":["134.1"],"没有对head提交的修改":["134.1"],"当不清楚如何应用更改时":["134.1"],"会发生以下情况":["134.1"],"当前的分支和":["134.1"],"将该功能转移到":["134.2"],"解决冲突":["134.2"],"当多个开发者在不同分支上工作时":["134.2"],"如果在应用更改时出现冲突":["134.3"],"git会暂停":["134.3"],"的动作":["134.3"],"并提示解决冲突":["134.3"],"conflict":["134.3"],"merge":["134.3"],"想通过git把github上别人的代码clone到本地":["135.0"],"如果没有那么就需要绑定ssh":["135.1"],"需要输入命令":["135.1"],"keygen":["135.1"],"t":["135.1"],"则是将远程主机的最新内容拉下来后直接合并":["136.1"],"branch":["136.2","137.2","140.2"],"的基本操作":["136.2"],"查看本地所有分支":["136.2"],"查看远程所有分支":["136.2"],"查看本地和远程的所有分支":["136.2"],"branchname":["136.2"],"取回更新后":["136.3"],"会返回一个":["136.3"],"将拉取下来的最新内容合并到当前所在的分支中":["136.4"],"即将远程主机的某个分支的更新取回":["136.4"],"并与本地指定的分支合并":["136.4"],"完整格式可表示为":["136.4"],"pull成功":["137.2"],"现在使用git":["137.2"],"log看下一提交历史":["137.2"],"oneline":["137.2"],"graph":["137.2"],"f63ecbf":["137.2"],"修正bug":["137.2"],"优化内置通道配置":["137.2"],"完善日报接口":["137.2"],"9f73b5e":["137.2"],"增加内置通道设置功能":["137.2"],"a0d464e":["137.2"],"竟然分叉了":["137.2"],"由于我本地master的提交历史和远端的master分支的提交历史不一致":["137.2"],"所以git为我进行了自动合并":["137.2"],"然后生成了一个新的提交历史":["137.2"],"对于部分强迫症来说这个不能接受的":["137.2"],"不想看到分叉":["137.2"],"在feature分支上执行":["137.3"],"rebase":["137.3"],"这句命令的意识是":["137.3"],"以master为基础":["137.3"],"将feature分支上的修改增加到master分支上":["137.3"],"并生成新的版本":["137.3"],"rewinding":["137.3"],"replay":["137.3"],"work":["137.3"],"applying":["137.3"],"using":["137.3"],"reconstruct":["137.3"],"falling":["137.3"],"back":["137.3"],"patching":["137.3"],"way":["137.3"],"changes":["137.3"],"patch":["137.3"],"本feature分支多次commit":["138.0"],"最后提交master后":["138.0"],"到另一个分支上":["138.1"],"使得目标分支上的提交历史变得整洁和线性":["138.1"],"reword":["138.2"],"表示保留着一个commitid":["138.2"],"但是需要修改commit的注释":["138.2"],"edit":["138.2"],"但是要停止rebase操作来进行这次提交的修改":["138.2"],"即修改变更的代码与commit与注释":["138.2"],"squash":["138.2"],"表示将这个commitid与前一个commitid合并":["138.2"],"f":["138.2"],"fixup":["138.2"],"使得该工作目录变成一个干净的工作状态":["139.0"],"但又不想创建新的分支来存储每个实验性更改":["139.1"],"只是要保存的描述为空":["139.3"],"执行存储时":["139.3"],"添加备注":["139.3"],"比如查看第二个stash详情":["139.5"],"如果要应用并删除其它":["139.8"],"命令":["139.8"],"是不能被":["139.10"],"存起来的":["139.10"],"那要怎么办呢":["139.10"]},{"0":["34.0","57.1","73.25","76.0","81.12","88.5","114.0","122.5"],"1":["16.2","16.4","20.1","30.0","32.7","36.0","59.2","69.13","69.17","73.9","73.16","74.17","74.26","81.3","87.9","88.6","88.10","89.4","103.3","114.0","123.12","125.0"],"2":["63.31","63.47","69.13","74.7","74.26","78.6","87.6","88.17","89.6","93.1","102.8","123.10","123.12","134.1"],"3":["15.4","63.44","63.47","69.11","69.36","78.6","87.30","88.17","89.18","123.12","134.1"],"4":["14.3","64.27","73.22","74.11","74.16","78.6","88.12","103.14","105.1","113.5","122.3","123.2"],"5":["64.21","69.5","73.14","74.24","78.11","88.6","96.0","122.3"],"6":["73.15","110.1","110.6","110.7","110.20"],"7":["24.0","34.0","96.0","123.10"],"8":["20.1","30.0","32.7","36.0"],"9":["76.0","96.0"],"10":["96.0"],"11":["33.1","74.7"],"12":["102.15"],"14":["87.12","102.7"],"17":["87.12"],"19":["102.11"],"20":["88.18"],"27":["0.0"],"39":["95.4","130.2"],"40":["130.2"],"43":["130.2"],"50":["81.15"],"75":["81.10"],"80":["81.6","81.12"],"85":["81.12"],"90":["69.39","81.12"],"95":["81.12"],"98":["87.9"],"100":["64.31","81.15"],"106":["14.2"],"123":["67.22","105.7"],"180":["81.2"],"200":["119.8"],"201":["119.8"],"400":["119.8"],"403":["63.4"],"404":["63.4"],"1000":["47.1","74.7","104.1","104.2","104.5"],"1234":["110.15"],"1999":["90.0"],"3600":["97.5"],"result":["0.0","87.3"],"continue":["2.0","134.3","137.3"],"left":["2.0","73.13","89.6","109.4"],"right":["2.0","89.6"],"双指针夹逼":["2.0"],"while":["2.0","6.0","88.5"],"sum":["2.0","89.6"],"的":["3.0","78.6","97.0"],"get":["3.0","89.7","106.3","137.3"],"方法得到下标":["3.0"],"length":["4.0","34.0","114.0"],"index":["4.0","75.2","75.5","76.0","78.6","89.25"],"for":["4.0","27.4","57.1","114.0"],"if":["4.0","8.0","9.0","53.16","103.9","103.10","103.13","123.5","123.7","123.8"],"else":["5.0","9.0","63.38"],"rightindex":["6.0"],"寻找左边递减序列":["6.0"],"寻找右边递减序列":["6.0"],"使用二分法查找":["7.0"],"return":["8.0","42.10","54.6","74.10","87.20","88.11","89.7","103.6","103.7","103.11","119.17"],"true":["9.0","15.5","87.4","87.22","87.31","88.5","89.27","106.4","110.13"],"求解":["10.0"],"typescript":["10.0"],"const":["10.0","66.5","66.8","67.35","88.22","103.14"],"pivotindex":["10.0"],"number":["10.0","73.9","73.25","75.8","119.17","123.9"],"reduce":["10.0"],"cur":["10.0","75.2","103.7","103.11"],"tar":["10.0"],"求和":["10.0"],"k":["11.0","27.4","57.1","122.4"],"harry":["12.1","25.1","29.0","32.3"],"options":["12.3","13.0"],"引入ng":["12.3","13.0"],"include和模板ng":["12.3","13.0"],"template":["12.3","13.0","74.25"],"本章总结":["12.3"],"中文版":["12.4"],"stoyan":["12.4"],"stefanov":["12.4"],"著":["12.4"],"李强":["12.4"],"那样做感觉上比较混乱":["12.5"],"难以管理":["12.5"],"前端网站可以使用阿里云的cdn直接进行访问加速":["12.6"],"后端在使用api模式通讯的情况下":["12.6"],"本来就可以极大的提高负载能力":["12.6"],"虽然这个说法比较武断":["12.7"],"但是其中也体现出来一个明显的信息":["12.7"],"这让我完全不用再操心dom":["12.8"],"因为这两点特性":["12.8"],"我义无反顾的加入了使用angularjs的大军":["12.8"],"题外话":["12.8"],"国外网站购买的这种模板":["12.8"],"都是由专业的前端人员开发":["12.8"],"提供的功能都非常丰富完整":["12.8"],"它们对管理工具的使用也很正规":["12.8"],"使用bower或其它工具来管理第三方库等":["12.8"],"代码结构和注释也非常完善":["12.8"],"对我而言":["12.8"],"这笔投资绝对物有所值":["12.8"],"另一方面也是为了给自己一点压力":["12.9"],"让自己沉下心来掌握这门技术":["12.9"],"我在angularjs方面也是一名菜鸟":["12.9"],"与我技术构想不符则是对我本人来说更重要的一个原因":["12.10"],"因为我无法认同angular":["12.10"],"2的优化方向":["12.10"],"同时":["12.10","52.5"],"根据我的工作经验来看":["12.10"],"这样革命性的优化通常是内部一群理念不合的人另起炉灶":["12.10"],"结果可能喜忧参半":["12.10"],"work":["12.11"],"is":["12.11"],"licensed":["12.11"],"under":["12.11"],"the":["12.11","100.0","134.3"],"creative":["12.11"],"commons":["12.11"],"下拉列表选项":["13.0"],"js的包管理软件":["14.0"],"js":["14.0","34.2","34.3","66.3"],"基于chrome":["14.0"],"v8引擎的本地":["14.0"],"x版本起就可以正确的开发angularjs网站":["14.1"],"再往前的版本没有评估":["14.1"],"使用最新的11":["14.1"],"3版本是在准备本书内容过程中":["14.1"],"m":["14.2","21.3"],"chrome的版本对于应用angularjs并不关键":["14.2"],"本书特意安装目前的最新版本":["14.2"],"js版本是5":["14.3"],"所有命令后面都跟上了一个":["14.4"],"在右边的location设置好项目的位置":["15.0"],"然后点击界面右下角的create即可":["15.0"],"三个目录的设置应该比较熟悉":["15.1"],"它们分别用于存放对应的文件":["15.1"],"通过设置一个public目录":["15.2"],"并在部署时将网站的根目录直接指向到":["15.2"],"目录":["15.2"],"直接在下方生成的文件解析的部分":["15.3"],"moduletype":["15.5"],"node":["15.5"],"test":["15.5"],"tests":["15.5"],"looks":["15.5"],"good":["15.5"],"命令运行完毕后":["15.5"],"会在项目的根目录生成一个":["15.5"],"directory":["15.6"],"components":["15.6","16.1","69.54"],"图2":["15.7"],"首先":["16.0"],"public":["16.1"],"命令解释":["16.1"],"这行命令告诉":["16.1"],"在这个项目中安装":["16.1"],"x":["16.2","16.4","21.0","25.3","30.0","32.7","36.0","75.6","87.13","110.22","119.17","123.9","138.2"],"body":["16.2","21.0","33.0","64.38"],"小贴士":["16.3"],"将js文件放在head部分和body部分有何区别":["16.3"],"如果angularjs没有成功运行":["16.5"],"那么您看到的应该是如下内容":["16.5"],"txt":["16.5"],"深入学习":["17.0"],"directive":["17.0","21.5"],"数据获取":["17.0"],"http":["17.0","64.45","64.48","90.0"],"如何使用第三方的angularjs扩充库":["17.0"],"ui":["17.0"],"route":["17.0"],"从上我们可以看出":["18.0"],"双括号":["18.0"],"内的内容":["18.0"],"其实是一个javascript表达式":["18.0"],"达到加速访问和代码复用的效果":["19.0"],"下面":["19.0"],"我们将分别介绍":["19.0"],"支持直接传入静态文本":["19.1"],"传入变量":["19.1"],"传入函数":["19.1"],"返回网页地址":["19.1"],"的方式来进行调用":["19.1"],"另外":["19.1","88.10"],"的用法也可以直接作为标签名使用":["19.1"],"但是我目前不清楚具体的使用方法和效果":["19.2"],"代码片段的方法就是上诉的":["19.3"],"include":["19.3"],"方法":["19.3","70.7","73.21","75.3","123.5"],"的扩展功能":["20.0"],"只需要在独立的javascript文件中将":["20.0"],"meta":["20.1","32.7","36.0"],"charset":["20.1","32.7","36.0"],"utf":["20.1","30.0","32.7","36.0"],"title":["20.1","30.0","32.7","63.51","123.1"],"学习angularjs":["20.1","30.0","32.7","36.0"],"app在body时的运行结果":["20.2"],"我们可以看到":["20.2"],"网页标题中的angularjs表达式并没有执行":["20.2"],"这是因为网页的":["20.2"],"标签中的内容":["20.2"],"并不在angularjs的管理之下":["20.2"],"如果我们将":["20.2"],"那么网页将不能正常的展示":["20.3"],"并且我们可在chrome的":["20.3"],"将firstctrl绑定到这个div标签上":["21.0"],"这个标签中的内容将可以使用firstctrl中的数据":["21.0"],"div":["21.0","22.2","33.0","34.4","35.0","74.10"],"h1":["21.0"],"并注入":["21.2"],"下文详解":["21.2"],"来调用":["21.3"],"命名并不是固定用法":["21.3"],"我们也可以使用":["21.3"],"shuju":["21.3"],"在":["21.4","64.38","67.12","113.1"],"scope":["21.4"],"或":["21.5","87.14","97.3","119.14"],"等功能时":["21.5"],"或者将数据在多个":["21.5"],"并使用ng":["22.0","22.1"],"model绑定了data":["22.0"],"input":["22.0","24.1","25.2","26.1","26.2","51.7","69.60"],"type":["22.0","24.1","25.2","26.2","30.0","33.1","66.13","69.60"],"text":["22.0","26.2","30.0","33.1","69.60","86.1"],"model":["22.0","23.2","26.1","27.2","27.3","27.4","29.1","69.1"],"这里我们放置一个按钮":["22.1"],"click绑定了":["22.1"],"onclick事件":["22.1"],"button":["22.1","24.1","44.9","44.10","52.5","69.9"],"style":["22.2","27.0","36.0","66.3","104.6"],"class":["22.2","30.4","113.8"],"示例文本":["22.2"],"可输入strike":["22.2"],"show中的文字":["23.0"],"false":["23.0","87.5","89.28"],"angularjs只是使用css控制将内容隐藏起来":["23.1"],"这两者可以应用于不同的场景":["23.1"],"如果内容较多":["23.1"],"ng":["23.2","36.0"],"运行结果":["24.0"],"图4":["24.0"],"repeat运行结果":["24.0"],"为了更好的查看具体的运行效果":["24.0"],"我们可以查看下最终生成的html代码":["24.0"],"value":["24.1","27.1","44.10","54.6","66.8","73.11","78.6","78.8","89.4","89.28","89.29","100.0"],"我是第":["24.1"],"click":["24.1","50.4","52.5","69.9"],"可选货币单位和保留小数位数":["25.0"],"将数字转化为文本":["25.0"],"自动加逗号":["25.0"],"可选设置小数位数":["25.0"],"date":["25.0","102.10","111.4"],"data":["25.2","30.3","67.3"],"message":["25.2","51.6","67.26","88.6"],"table":["25.3","25.4","64.34"],"tr":["25.3","25.4"],"repeat":["25.3","25.4","32.5"],"in":["25.3","32.5","32.6","83.0","88.10","103.9","106.3","122.3"],"示例文字":["26.1"],"checkbox":["26.1"],"选中后上方文字将加上删除线":["26.1"],"style中加上strike类":["26.1"],"br":["26.1","27.0"],"此示例可举一反三":["26.3"],"比如加入多个文本输入":["26.3"],"恢复原始":["26.4"],"设置背景颜色":["26.5"],"blue":["26.5"],"当前选中的颜色":["27.0"],"border":["27.0"],"solid":["27.0"],"1px":["27.0"],"height":["27.0","63.35","63.36","73.15","81.15","109.4"],"20px":["27.0"],"background":["27.0","81.14","95.2"],"option":["27.1"],"选择一个颜色":["27.1"],"然后修改ng":["27.2"],"options的语法":["27.2"],"html":["27.2","27.3","34.4","35.0","36.0","66.3","76.0"],"select":["27.2","27.3","27.4"],"colorchosen":["27.2","27.3"],"的语法":["27.3"],"as":["27.4","137.3"],"v":["27.4","69.1"],"也请尽量的实际的运行一下示例":["28.0"],"作为类属性":["29.0"],"学习directive可能会多花您一些时间":["29.2"],"link":["30.0","32.7","90.0"],"css":["30.0","32.7","36.0","64.49","66.3","81.15"],"在实例中":["30.1"],"我们直接在第二个参数的函数中返回了一个对象":["30.1"],"可以看到":["30.2"],"angularjs在":["30.2"],"name":["30.3","53.8","69.60","74.10","87.3","105.4","107.2","140.1","140.2"],"性别":["30.3"],"c":["30.4","89.4","110.22","122.2"],"对directive的命名":["31.0"],"angularjs是有特殊的规则需求的":["31.0"],"people":["31.1"],"angularjs提出了这套解决方法":["31.3"],"将字段中的连接符号去除":["31.4"],"并将第二个单词开始改为首字母大写":["31.4"],"其它字母小写":["31.4"],"但是实际使用中":["31.5"],"推荐使用":["31.5"],"所以":["31.6"],"如果你的项目需要使用html5的验证工具":["31.6"],"那么就需要在字段前加上data":["31.6"],"secondctrl":["32.0"],"第二个人的信息":["32.0"],"这样做":["32.0"],"无法实现动态化的列表":["32.0"],"是无法实现我们期望的功能的":["32.0"],"我们理想中的情况应该是什么样子呢":["32.0"],"男":["32.1"],"注意":["32.1","88.9"],"这里我将restrict从":["32.1"],"e":["32.1","53.9","69.60"],"element元素":["32.1"],"改变成为了":["32.1"],"attribute":["32.1"],"属性":["32.1","73.15"],"这样它的使用方法有了一些变化":["32.1"],"的属性":["32.2","109.3"],"并将它的值存储在":["32.2"],"info":["32.3","87.12","112.4","121.4","138.2"],"span":["32.4","32.5","44.10"],"person":["32.4","32.5","113.7"],"peoplelist":["32.5"],"json":["32.5"],"注意此处的数据传入方法":["32.6"],"head":["32.7","36.0"],"rel":["33.0"],"stylesheet":["33.0"],"form":["33.0","51.7","75.6","88.15","112.4"],"templateurl的使用":["33.1"],"要使用这个功能":["33.1"],"我们需要在":["33.1"],"script":["33.1"],"标签中":["33.1"],"首先声明":["33.1"],"并给这段代码进行命名":["33.1"],"示例代码中的":["33.1"],"templateurl":["33.2"],"childhead":["34.0"],"prevsibling":["34.0"],"nextsibling":["34.0"],"ng339":["34.0"],"attr":["34.0"],"核心部分":["34.1"],"中":["34.2","66.3","78.8","127.5"],"保证在":["34.2"],"引入之前引入":["34.2"],"children":["34.4","42.9"],"addclass":["34.4"],"strike":["34.4"],"removeclass":["34.5"],"firstctrl":["35.0"],"content":["36.0","88.14","123.1"],"doctype":["36.0"],"lang":["36.0"],"zh":["36.0","97.6"],"href":["36.0","67.27"],"仓库":["38.0"],"并不依赖与js文件了":["40.1"],"这就会使用户更快地看到页面的内容":["40.1"],"尤其是针对大型单页应用":["40.1"],"在服务端渲染中只会执行到":["40.2"],"componentdidmount":["40.2","45.1"],"order":["42.1"],"commponent":["42.1"],"数据驱动视图更新":["42.2"],"虚拟dom":["42.2"],"由浏览器的渲染流水线可知":["42.2"],"dom":["42.2","50.3"],"8版本引入hooks之后":["42.3"],"它提供了一种新的方式来使用状态和其它":["42.3"],"react":["42.3","46.6","69.24"],"业务代码更加聚合":["42.4"],"render":["42.5"],"context":["42.6","88.10"],"无数据就是初始化状态":["42.7"],"history":["42.7"],"api":["42.7","67.19","67.56"],"编译转换为浏览器识别语言":["42.8"],"props":["42.9","51.5"],"捕获全局错误":["42.10"],"window":["42.10","63.10","67.33"],"addeventlistener":["42.10"],"removeeventlistener":["42.10"],"如果标签的首字母是小写就会被认为是原生标签":["42.11"],"等价于":["42.12","75.12"],"一个空标签":["42.12"],"非受控组件不是通过数据控制页面":["42.13"],"而是直接通过dom本身管理":["42.13"],"但在浏览器实际绘制屏幕之前":["43.0"],"这使得你可以同步的读取或更改dom":["43.0"],"足够了":["43.1"],"性能考虑":["43.1"],"如果正在将旧的类组件迁移到功能组件":["43.2"],"并需要模拟":["43.2"],"考虑回退到":["43.3"],"useeffect":["43.3"],"不同的是":["44.0"],"reducer":["44.1"],"initialarg":["44.1"],"否则使用":["44.5"],"mycomponent":["44.8","51.5","74.10"],"state":["44.8","137.3"],"dispatch":["44.9"],"usereducer":["44.9","66.1","78.4"],"onclick":["44.9","44.10"],"target":["44.10","122.3"],"子组件修改自身state":["45.1"],"getderiverstatefromprops":["45.1"],"shouldcomponentupdate":["45.1"],"getsnapshotbeforeupdate":["45.1"],"componentdidupdate":["45.1","69.25"],"父组件修改props":["45.1"],"这些属性和方法":["46.1"],"都是默认的":["46.1"],"但在首次渲染上":["46.5"],"虚拟dom会多了一层计算":["46.5"],"native":["46.6"],"高阶组件是react":["47.0"],"中一种非常强大的模式":["47.0"],"可以帮助我们在组件间复用逻辑":["47.0"],"修改props":["47.0"],"实现条件渲染以及额":["47.0"],"clearinterval":["47.1","104.4"],"usecontext高阶函数":["47.1"],"usecontext":["47.1"],"用于在函数式组件中访问react的上下文":["47.1"],"usestate会触发重新渲染":["47.2"],"useref不触发":["47.2"],"useref不仅用于dom引用":["47.2"],"对象是通用容器":["47.2"],"期当前属性是可变的":["47.2"],"的实现原理基于":["50.0"],"resolve":["50.0","137.3"],"最后执行宏任务":["50.1"],"这个过程会不断重复":["50.1"],"任务执行顺序":["50.1"],"事件循环机制":["50.1"],"宏任务":["50.1"],"microtask":["50.1"],"与":["50.1"],"微任务":["50.1"],"macrotask":["50.1"],"是指在事件循环中两种不同类型的任务":["50.1"],"的时候":["50.2","107.3"],"任务队列可以简单理解成这样":["50.2"],"然后下一行":["50.2"],"console":["50.2","74.11","75.16","87.10","87.17","87.23","87.25","88.20","89.13","89.18","103.8","103.11","104.1","113.4","113.5","113.7"],"log":["50.2","74.11","75.16","87.2","87.17","89.13","89.18","103.8","103.11","103.16","104.1","113.4","113.5","113.7","136.3"],"由于会更新视图的任务":["50.2"],"之后执行回调函数":["50.3"],"这一行表示如果调用nexttick并且不传递任何参数":["50.3"],"它会返回一个promise":["50.3"],"void":["50.3","123.2"],"用于处理异步操作":["50.3"],"这一行表示":["50.3"],"如果调用nexttick并传递一个回调函数和一个上下文":["50.3"],"this":["50.3","78.8","88.10","134.3","137.3"],"那么这个回调函数将以指定的上下文执行":["50.3"],"t":["50.3"],"cb":["50.3"],"args":["50.3","63.18","89.2"],"any":["50.3","119.14"],"ctx":["50.3"],"handleclick":["50.4","52.5"],"重置队列执行状态":["50.5"],"currnetflushpromise":["50.5"],"重置当前微任务为":["50.5"],"如果住任务队列":["50.5"],"前置和后置任务队列还没有被清空":["50.5"],"就继续递归执行":["50.5"],"pendingpreflushcbs":["50.5"],"pendingpostflushcbs":["50.5"],"这个方法负责执行前置任务队列":["50.5"],"parentjob":["50.5"],"如果待处理的队列不为空":["50.5"],"保存队列中去重后的任务为当前活动的队列":["50.5"],"activepreflushcbs":["50.5"],"set":["50.5","88.5"],"遍历执行队列里的任务":["50.5"],"实现原理":["50.6"],"在此示例中":["51.1"],"当":["51.1"],"的值是":["51.1"],"focus":["51.1"],"时":["51.1","111.4"],"就等价于":["51.1"],"动态参数的限制":["51.1"],"动态参数中的表达式的值应该是一个字符串":["51.1"],"或者":["51.1"],"null":["51.1","54.6","66.4","119.15"],"特殊值":["51.1"],"意为显式移除该绑定":["51.1"],"其它非字符串的值会触发警告":["51.1"],"动态参数语法限制":["51.1"],"动态参数表达式因为某些自负的缘故有一些语法限制":["51.1"],"比如":["51.1","74.7","78.8","130.1"],"空格":["51.1"],"通过设置内联样式的":["51.3"],"css属性来触发工作":["51.3"],"当元素可见时将使用初始的":["51.3"],"的值":["51.3"],"warning":["51.3","78.2","88.9","98.0","105.3"],"总结":["51.3"],"上述示例中":["51.4","119.11"],"会抛出一个错误":["51.4"],"因为":["51.4","63.37"],"会先被执行":["51.4"],"而":["51.4","67.56","74.3","113.9"],"的条件表达式中的":["51.4"],"此时不存在":["51.4"],"这个问题可以通过迭代计算属性来解决":["51.4"],"id":["51.5","66.9"],"someprop":["51.5"],"other":["51.5"],"otherprop":["51.5"],"必须在子组件中已声明":["51.5"],"something":["51.5","88.6"],"传递子父组件共有的":["51.5"],"placeholder":["51.6"],"编辑我":["51.6"],"不带表达式地阻止默认事件":["51.7"],"submit":["51.7"],"链式调用修饰符":["51.7"],"按键用于":["51.7"],"keyup":["51.7"],"提供了":["52.0"],"setup":["52.0"],"函数作为入口函数":["52.0"],"替换了":["52.0"],"activated":["52.1"],"keep":["52.1"],"alive":["52.1"],"缓存的组件激活时":["52.1"],"完成挂载与渲染":["52.2"],"此刻打印":["52.2"],"发现之前的挂载点及内容已被替换成新的dom":["52.2"],"beforeupdate":["52.2"],"更新的数据必须是被渲染在模版上的":["52.2"],"中的请求有可能导致页面闪动":["52.3"],"因为此时页面":["52.3"],"组件挂载之前":["52.4"],"组件挂载到实例上去之后":["52.4"],"组件数据发生变化":["52.4"],"更新之前":["52.4"],"count":["52.5","73.25"],"增加":["52.5"],"在上面的示例中":["52.5"],"我们通过":["52.5"],"钩子注册了":["52.5"],"一个函数":["52.5"],"在每次组件更新之前输出计数器数据的值":["52.5"],"在方法中添加了一个按钮点击事件":["52.5"],"用于修改计数器的值":["52.5"],"钩子函数会在数据重新渲染后运行":["52.5"],"通常用于更新":["52.5"],"执行动画或获取最新的状态等操作":["52.5"],"或是由以上类型的值组成的数组":["53.3"],"fooref":["53.4"],"barref":["53.4"],"post":["53.9","67.51"],"才追综艺来":["53.10"],"使用异步回调时候":["53.10"],"则会在副作用发生期间追踪依赖":["53.12"],"它会在同步执行过程中":["53.12"],"有个别名":["53.13"],"也可以":["53.13"],"后置刷新":["53.13"],"watchposteffect":["53.13"],"就会自动更新":["54.1"],"但改变":["54.1"],"和":["54.2","63.31","63.50","64.4","64.48","66.3","67.4","74.14","74.16","96.0","106.3","119.10","119.14"],"框架封装的核心":["54.3"],"它负责将数据与视图关联起来":["54.3"],"compiler":["54.4"],"对每个元素节点的指令进行扫描跟解析":["54.4"],"key":["54.5","78.6","83.0"],"在一个视图中可能出现多次":["54.5"],"所以每个":["54.5"],"都需要一个管家":["54.5"],"dep":["54.5"],"来管理多个":["54.5"],"observer":["54.6"],"编译插值文本":["54.7"],"textcontent":["54.7"],"判断是否有子元素":["54.7"],"push":["54.8","63.38","78.12","113.5","136.2"],"notify":["54.8"],"foreach":["54.8","78.12","97.1"],"创建":["54.8"],"时触发getter":["54.8"],"一个杯子":["55.2"],"早上装的牛奶":["55.2"],"中午装的是开水":["55.2"],"晚上装的是茶":["55.2"],"在这一刻":["55.3"],"这个时间点":["55.3"],"叫做fp":["55.3"],"相比之下":["55.3"],"fcp指的是浏览器首次绘制来自dom的内容":["55.3"],"例如文本":["55.3"],"canvas元素等":["55.3"],"这个时间点叫fcp":["55.3"],"quicklink":["55.4"],"google":["55.4"],"开源的一个脚本插件":["55.4"],"可以置顶浏览器在空闲的时候去指定需要加载的数据":["55.4"],"使用gzip压缩":["55.4"],"减少文件体积":["55.4"],"加快首屏页面打开速度":["55.4"],"服务器需要开启gzip":["55.4"],"我们可以通过使用webpack插件来实现这个功能":["55.4"],"shell":["55.4"],"pnpm":["55.4"],"install":["55.4"],"vite":["55.4"],"compression":["55.4"],"arr":["57.1","89.4","96.0","114.0","122.3"],"let":["57.1","58.3","63.18","74.12","107.1","114.0","123.9"],"中导入使用":["57.3"],"导出的模块":["57.3"],"filesystem":["57.3"],"所有导出模块":["57.3"],"引用对象名为":["57.3"],"类型变量能够进行的运算是有限的":["58.2"],"只支持比较运算":["58.2"],"运算符":["58.2"],"取反运算":["58.2"],"typeof":["58.2","74.2","75.8","111.4"],"运算符和":["58.2"],"instance":["58.2"],"运算符这几种":["58.2"],"aa":["58.2","58.3"],"fun1":["58.3"],"throw":["58.3","89.27","98.0"],"new":["58.3","63.32","67.35","75.12","87.14","88.5","88.22","89.7","102.10","114.0"],"error":["58.3","98.0","123.11"],"浏览器相关":["59.1"],"更新了一部分":["59.2"],"更新了面试相关的vue相关":["59.3"],"char":["63.1"],"float":["63.1"],"boolean":["63.1"],"responsetext":["63.3"],"responsexml":["63.3"],"属性获取服务器返回的数据":["63.3"],"示例":["63.3","89.7","105.4"],"var":["63.3","63.10","81.9","81.13","102.2"],"xhr":["63.3"],"function":["63.3","63.10","63.18","64.19","88.5","88.11","105.4","119.10"],"客户端保存新的链接":["63.4"],"并向新的链接发起请求":["63.4"],"一返回请求结果":["63.4"],"表示客户端请求的资源没有权限查看":["63.4"],"在函数返回后并不释放":["63.6"],"设想我们有一个处理过程很耗时的函数对象":["63.7"],"每次调用都会花费很长时间":["63.7"],"那么我们就需要把计算出来的值储存起来":["63.7"],"当调用就这个函数的时候":["63.7"],"首先在缓存中查找":["63.7"],"在使用":["63.8"],"javascript":["63.8","63.10","63.18","102.8","107.1"],"定时器时":["63.8"],"如果没有及时清除已经失效的定时器":["63.8"],"就会导致定时器所占用的内存无法被释放":["63.8"],"从而造成内存泄漏":["63.8"],"闭包":["63.8"],"脱离dom的引用":["63.8"],"事件委托就是把原本需要绑定在子元素上的响应时间委托给父元素":["63.9"],"因此可以处理未来添加到页面上的元素的事件":["63.10"],"onload":["63.10"],"ie浏览器使用":["63.11"],"冒泡阶段":["63.12"],"从目标节点传回到window对象":["63.12"],"也可能被窃取":["63.13"],"本地存储相对来说更安全":["63.13"],"因为它不会随着http请求被发送到服务器":["63.13"],"减少了被窃取的风险":["63.13"],"但仍然需要注意防范xss攻击":["63.13"],"用途":["63.13"],"cookie主要用户客户端与服务端传递信息":["63.13"],"value2":["63.16"],"直接删除键值对":["63.16"],"delete":["63.16"],"的作用":["63.17"],"特点":["63.17"],"封装":["63.17"],"隐藏对象的属性和实现细节":["63.17"],"手写一个new":["63.18"],"mynew":["63.18"],"fn":["63.18"],"创建一个空对象":["63.18"],"obj":["63.18","114.0","119.17"],"使空对象的隐式原型":["63.18"],"obj对象的":["63.18"],"支持多并发请求":["63.20"],"await只能在async中运行":["63.21"],"否则会报错":["63.21","119.2"],"当运行返回报错时候":["63.21"],"通过":["63.21","121.4","129.0","134.2"],"的最大长度显示是因为浏览器和":["63.22"],"不同的浏览器和":["63.22"],"请求更适合请求缓存":["63.23"],"页面滚动事件":["63.24"],"onscroll":["63.24"],"如果为true":["63.25"],"表示是在捕获阶段调用事件处理程序":["63.25"],"js中的元素尺寸与布局信息":["63.27"],"也就是说定位信息为":["63.28"],"鼠标移动的坐标":["63.28"],"鼠标按下去的坐标":["63.28"],"元素初始情况下的":["63.28"],"world":["63.30","123.2"],"b":["63.30","72.26","78.2","89.4","110.8","110.22","122.2","123.9"],"在这个例子里面":["63.31"],"通过各自的属性相互引用":["63.31"],"这样的话":["63.31"],"两个对象的引用次数为":["63.31"],"在采用引用计数的策略中":["63.31"],"由于函数执行之后":["63.31"],"这两个对象都离开了作用域":["63.31"],"bound":["63.33"],"width":["63.35","64.14","81.15","109.4"],"图片的高度为":["63.35"],"document":["63.35","63.36","73.23","88.14"],"getelementbyid":["63.36","73.23"],"mypic":["63.36"],"innnerhtml":["63.36"],"其实对于包装类":["63.37"],"完全可以用":["63.37"],"号来进行克隆":["63.37"],"其实没有深度克隆一说":["63.37"],"这里用":["63.37"],"语法上比较符合规范":["63.37"],"对于":["63.37"],"类型":["63.37"],"日期定义的":["63.37"],"方法会返回它的一个内部表示":["63.37"],"主机名":["63.40"],"端口号":["63.40"],"相同":["63.40"],"只允许本域名下的借口交互":["63.41"],"不同元的客户端脚本":["63.41"],"它需要一遍下载图片一遍计算大小":["63.42"],"如果图片很多":["63.42"],"浏览器会不断调整页面":["63.42"],"这不但影响速度":["63.42"],"也影响体验":["63.42"],"当浏览器知道了宽高":["63.42"],"指向其本身":["63.43"],"事件中的":["63.43"],"sort":["63.44"],"如果是数组":["63.45"],"可以使用数组的一些方法实现":["63.45"],"slice":["63.45"],"不会对原数组产生影响":["63.46"],"借用构造函数继承":["63.47"],"组合继承":["63.47"],"我就先自己去吃了":["63.48"],"你忙完了再去吃饭":["63.48"],"比":["63.50"],"安全":["63.50"],"标签优化":["63.51"],"description":["63.51"],"keywords":["63.51"],"一个迟缓甚至不加载":["63.52"],"格式":["64.1","75.16"],"缺点":["64.2"],"文件大小通常比":["64.3"],"jpeg":["64.3","64.4"],"标准盒模型的宽高指的是":["64.5","73.2"],"内容区域":["64.5","73.2"],"的宽高":["64.5","73.2"],"loop":["64.9","64.10"],"是否循环播放":["64.9","64.10"],"perload":["64.9","64.10"],"预加载视频":["64.9"],"是否显示进度条":["64.10"],"多媒体标签":["64.11"],"加载独立内容":["64.12"],"上图下字":["64.12"],"figcaption":["64.12"],"figure的标题":["64.12"],"hgroup":["64.12"],"标题组合标签":["64.12"],"图片边框的宽度":["64.14"],"outset":["64.14"],"规定背景的绘制区域":["64.15"],"padding":["64.15"],"box":["64.15","67.40","79.0"],"radial":["64.16"],"shadow":["64.17"],"文字阴影":["64.17"],"水平位移":["64.17"],"y":["64.18","122.4"],"指定元素在二维空间的位移":["64.18"],"scale":["64.18","64.28"],"n":["64.18"],"定义缩放转换":["64.18"],"3d":["64.18"],"指定切换效果的速度":["64.19"],"delay":["64.20"],"动画启动前的延迟间隔":["64.20"],"iteration":["64.20"],"auto":["64.21","74.17","78.10"],"但内部宽高超过父级时":["64.21"],"会出现滚动条":["64.21"],"给塌陷元素添加微对象":["64.21"],"这个写法固定":["64.21"],"sticky":["64.22"],"粘性定位":["64.22"],"元素先按照普通文档流进行相对定位":["64.22"],"center":["64.24"],"子元素设置display":["64.24"],"inline":["64.24","66.3"],"cell":["64.25"],"flex":["64.27","73.13"],"左右固定宽":["64.27"],"中间":["64.27"],"transform":["64.28","64.49","81.3","81.5","81.11","104.6"],"查找根元素html标签":["64.30"],"empty":["64.30"],"查找空标签":["64.30"],"目标伪类选择器":["64.30"],"表单":["64.30"],"enabled":["64.30"],"id选择器":["64.31"],"family":["64.32"],"字体大小":["64.32"],"size":["64.32"],"字体样式":["64.32"],"csssprite":["64.33"],"css精灵图":["64.33"],"p":["64.34","69.9","136.3"],"ul":["64.34"],"ol":["64.34"],"address":["64.34"],"简写形式":["64.36"],"align":["64.36"],"item":["64.36","75.5","83.0","110.23"],"16px":["64.38"],"中加入":["64.38"],"样式表":["64.40"],"不仅会降低解析效率":["64.41"],"而且会在解析过程中产生一些难以预料的bug":["64.41"],"dragleave":["64.42"],"在被拖放元素移出目标元素是触发":["64.42"],"drop":["64.42","71.3","138.2"],"关闭阶段":["64.43"],"minify":["64.44"],"gzip":["64.44"],"webp图片压缩":["64.44"],"http次数":["64.45"],"缓存":["64.45"],"协议缓存请求":["64.45"],"由它来通过将包传送给接收端实体的tcp层":["64.48"],"tcp三次握手":["64.48"],"tcp三次握手与四次挥手":["64.48"],"发送http":["64.48"],"https请求":["64.48"],"建立连接后就可以停过":["64.48"],"进行数据传输了":["64.48"],"如果使用了":["64.48"],"https":["64.48"],"会在":["64.48","89.1"],"之间多添加一层协议作为加密和认证的服务":["64.48"],"使用":["64.48","69.54","74.10","109.5"],"ssl":["64.48"],"tls":["64.48"],"协议":["64.48"],"保证了信息的安全":["64.48"],"协议的作用是认证客户端和服务端":["64.48"],"确保数据发送到正确的客户端和服务器":["64.48"],"加密数据防止数据中途被窃取":["64.48"],"维护数据的完整性":["64.48"],"确保数据在书参数过程中不被改变":["64.48"],"是不会layout或者paint的":["64.50"],"区别":["64.50"],"功能涵盖方面":["64.50"],"js动画比css动画功能强大":["64.50"],"实现":["64.50"],"重构难度":["64.50"],"两者相邻的外边距都是负数时":["64.51"],"折叠结果是两者绝对值的较大的值":["64.51"],"类似于":["66.1","78.4"],"但是它缓存的是普通数值而不是回调函数":["66.1","78.4"],"用于使用reducer函数的管理状态":["66.1","78.4"],"一旦确定了差异":["66.2"],"react就会有效地只更新真实dom的必要部分以反映这些变化":["66.2"],"这种方法最大限度的减少了实际dom操作次数":["66.2"],"jsx":["66.3"],"就是把":["66.3"],"全写进":["66.3"],"则是":["66.3"],"inputref":["66.4"],"classname":["66.4"],"功能组件现在可以管理状态并使用其它功能":["66.5"],"例如上下文当中的效果展示":["66.5"],"import":["66.5","73.21","88.23"],"usestate":["66.5","66.18"],"from":["66.5","66.19","73.13","73.21","88.23"],"setvalue":["66.5","73.9"],"中设置的任何资源":["66.6"],"例如删除事件侦听器或取消计时器":["66.6"],"某些生命周期方法":["66.6"],"如":["66.6","75.16","95.1","130.4"],"componentwillmount":["66.6"],"componentwillreceiveprops":["66.6"],"返回的状态与作为第一个参数传递的值匹配":["66.7"],"该函数用于更新状态":["66.7"],"它将新的状态值作为参数":["66.7"],"参数更改一次":["66.8"],"useeffect执行一次":["66.8"],"undofunction":["66.9"],"这里这个return":["66.9"],"的函数就是清理副作用的函数":["66.9"],"通过拥有全局存储":["66.11"],"我们可以访问和修改来自任何组件的数据":["66.11"],"如果组件分解涉及嵌套组件":["66.12"],"并且数据在层次结构中向下传递":["66.12"],"基于不同的action类型做一些不同的事情":["66.13"],"如果这个":["66.13"],"我们将操作传递给该函数":["66.14"],"它通过引入单向数据流和应用程序状态的集中存储来帮助管理应用程序的状态":["66.15"],"用户可以构建复杂的数据处理管道":["66.16"],"处理实时的数据流或者批处理数据":["66.16"],"并支持并行处理和分布式计算":["66.16"],"axios提供了更多的功能和配置选项":["66.17"],"如拦截器":["66.17"],"取消请求":["66.17"],"csrf防护等":["66.17"],"axios兼容更多的浏览器":["66.17"],"并提供了更好的错误处理机制":["66.17"],"从而引发问题":["66.18"],"例如":["66.18","95.5","121.0"],"在某个循环中使用":["66.18"],"hook":["66.18"],"由于循环次数是不固定的":["66.18"],"标记差异":["66.20"],"在比较过程中":["66.20"],"标记处需要进行更新的节点和操作":["66.20"],"例如插入":["66.20"],"删除或更新":["66.20"],"并标记需要更新节点和操作":["66.21"],"将dom进行局部更新":["66.21"],"mvvm缺点":["67.2"],"复杂性":["67.2"],"mvvm模式引入了额外的层次和概念":["67.2"],"可能会增加项目的初始学习成本":["67.2"],"特别是对于初学者来说":["67.2"],"性能":["67.2"],"在某些情况下":["67.2"],"mvvm模式可能引入额外的性能开销":["67.2"],"特别是实现数据绑定和观察者模式时":["67.2"],"虽然现在前端框架会优化这些问题":["67.2"],"但仍然需要注意这些问题":["67.2"],"过度工程":["67.2"],"在小型应用中":["67.2"],"采用":["67.2"],"模式可能会导致过度设计":["67.2"],"可以使用":["67.3"],"backspace":["67.4"],"两个键位":["67.4"],"tab":["67.4"],"制表键":["67.4"],"esc":["67.4"],"返回键":["67.4"],"将数据解析成纯文本":["67.7"],"事件名":["67.9"],"如果绑定的是多个相同事件":["67.9"],"如果有":["67.10"],"存在":["67.10"],"setter":["67.11","98.0"],"读取时触发":["67.11"],"路由中name的作用":["67.12"],"proxy":["67.13"],"api和服务器配置":["67.15"],"支持所有":["67.15"],"replacestate":["67.16"],"修改浏览器历史栈后":["67.16"],"url":["67.16","67.27","95.2","123.1"],"改变但不会刷新页面":["67.16"],"不会触发":["67.16"],"从而实现前端路由切换":["67.18"],"浏览器支持度友好":["67.18"],"包括低版本ie浏览器":["67.18"],"已经成为spa标配":["67.18"],"原理":["67.18"],"hash模式的主要原理是":["67.18"],"由于我们是一个单页的客户端应用":["67.19"],"如果没有适当的服务器配置":["67.19"],"用户在浏览器中直接访问没有配置的路由时":["67.19"],"会返回404":["67.19"],"history模式使用":["67.19"],"可以额外设置title属性供后续使用":["67.20"],"url处理":["67.20"],"优点":["67.22","67.23"],"直观":["67.22"],"查询参数可以传递多个键值对":["67.23"],"因此更灵活":["67.23"],"适用于各种场景":["67.23"],"查询参数更合适":["67.24"],"灵活性":["67.24"],"如果需要传递多个键值对或灵活地控制何时传递参数":["67.24"],"也可以使用对象语法":["67.29"],"也可以使用缩写形式":["67.31"],"获取token":["67.33"],"tokenstr":["67.33"],"sessionstorage":["67.33"],"next":["67.34","89.28"],"vuerouter":["67.35"],"use":["67.35","98.0"],"routes":["67.35","67.54","67.55"],"home":["67.35","67.54"],"之外":["67.36"],"还可以注册自定义的指令":["67.36"],"必须使用":["67.37","88.15"],"definecomponent":["67.37"],"输出才能使用":["67.40"],"父组件中使用自定义事件来进行接收":["67.41"],"当然可以放入任何内容":["67.42"],"例如变量":["67.42"],"父组件":["67.42","67.44","69.5"],"那么最终结果就是展示子组件设置的默认内容":["67.43"],"child":["67.43","67.44","69.9"],"如果传值":["67.43"],"是":["67.44","105.2"],"monkey的缩写":["67.44"],"西海龙王敖润之子":["67.45"],"apple":["67.45"],"大萝卜":["67.47"],"extends":["67.49","113.9","119.7","119.15","119.16"],"object":["67.49","88.21","89.5","110.16","114.0","127.6","130.2"],"never":["67.49","74.5","119.7","119.9","119.10","119.12","119.14","123.12"],"响应式对象":["67.49"],"interface":["67.49","123.2"],"watcheffectoptions":["67.49"],"immediate":["67.49","67.50"],"在侦听器创建时立即触发回调":["67.50"],"第一次调用时旧值是":["67.50"],"undefined":["67.50","74.3","98.0","105.3","105.5","119.15","127.6"],"deep":["67.50"],"source":["67.51","122.3"],"callback":["67.51","98.0","125.0"],"flush":["67.51"],"ontrack":["67.51"],"event":["67.51"],"debugger":["67.51"],"ontrigger":["67.51"],"停止侦听器":["67.51"],"stop":["67.51"],"可以没有":["67.52"],"使用场景":["67.52"],"当一个属性受多个属性影响的时候":["67.52"],"例如购物车商品结算":["67.52"],"component":["67.54","67.55"],"about":["67.54"],"contact":["67.54"],"path":["67.55"],"两个新特性":["67.56"],"它们使得组件的渲染更加高效":["67.56"],"允许组件返回多个根节点":["67.56"],"允许将组件的内容渲染到dom树的其它位置":["67.56"],"这两个特性能够减少不必要的dom操作":["67.56"],"提升渲染性能":["67.56"],"composition":["67.56"],"调用时添加一个参数":["67.57"],"就是":["67.57"],"的载荷":["67.57"],"异步操作数据":["67.57"],"字节面试":["69.0"],"将":["69.3"],"变量传递给子组件":["69.3"],"并将参数":["69.5"],"传递给父组件":["69.5"],"parent":["69.5","107.0","107.1"],"getchildpropertyandmethod":["69.7"],"获取子组件对外暴露的属性和方法":["69.7"],"上段代码中":["69.7"],"我们在":["69.7"],"template子组件child身上绑定了一个ref":["69.7"],"然后通过":["69.7"],"在页面中":["69.9"],"我们可以看到子组件获取到的父组件数据":["69.9"],"除了获取数据":["69.9"],"我们也可以修改数据":["69.9"],"子组件1":["69.9"],"parentmessage":["69.9"],"changeparentmessage":["69.9"],"的方法":["69.11"],"当按钮被点击时":["69.11"],"这个方法会调用":["69.11"],"emit":["69.11"],"方法来派发两个事件":["69.11"],"steven":["69.11"],"我们触发了一个名为":["69.11"],"的事件":["69.11"],"并传递了一个参数":["69.11"],"通过这个事件":["69.11"],"我们可以告知父组件更新它的":["69.11"],"值为":["69.11"],"age":["69.13","88.18"],"上面这个例子中":["69.13"],"我们创建了一个名为":["69.13"],"的事件总线对象":["69.13"],"并在两个组件中进行了引用":["69.13"],"状态":["69.15"],"getter":["69.15"],"正确的方式":["69.17","69.18","69.20"],"undefinedvariable":["69.20"],"处理点击事件":["69.21"],"nuxt":["69.22"],"推荐使用函数式组件和":["69.23"],"元素的描述":["69.24"],"会根据此方法的返回值来构建组件的":["69.24"],"通常用于保存一些需要在更新后恢复的状态":["69.25"],"如果使用函数式组件和":["69.26"],"hooks":["69.26"],"编写组件":["69.26"],"处理副作用和重新编辑":["69.35"],"只渲染起始索引和结束索引之间的列表项":["69.36"],"然后生成一个有关页面性能的报告":["69.37"],"首次":["69.38"],"cpu":["69.38"],"空闲":["69.38"],"idle":["69.38"],"green":["69.39"],"快":["69.39"],"绿色":["69.39"],"插件扩展":["69.40"],"但这种方法适用于传递简单的数据":["69.42"],"但要注意":["69.43"],"可能会影响性能":["69.45"],"然后在接收消息的窗口中监听message事件来实现跨页面通信":["69.46"],"通过在客户端和服务器之间建立":["69.47"],"为了解决跨域请求的限制":["69.48"],"能解决部分跨域问题":["69.49"],"但是只支持":["69.49"],"来授权浏览器跨域访问":["69.50"],"支持各种类型的":["69.50"],"并将结果返回给浏览器":["69.51"],"这种方法将跨域问题留给了服务器端处理":["69.52"],"等反向代理服务器来转发请求":["69.53"],"从而实现跨域访问":["69.53"],"通过模块化的方式组合这些模块来构建整个应用程序":["69.54"],"微服务架构":["69.54"],"独立部署的前端应用":["69.54"],"将前端应用程序拆分为多个微服务":["69.54"],"每个微服务都是独立开发":["69.54"],"测试和部署的":["69.54"],"通过服务网关或类似的机制来统一管理这些微服务":["69.54"],"使其能够协同工作":["69.54"],"web":["69.54"],"技术":["69.54"],"是一种标准化的":["69.54"],"并且更容易保持构建和部署的一致性":["69.55"],"跨项目协作":["69.55"],"开发者可以更容易地在不同项目之间进行协作和交流":["69.55"],"因为所有代码都在同一个仓库中":["69.55"],"这有助于促进团队内部的合作和知识共享":["69.55"],"它的计算是在组件":["69.56"],"渲染过程中触发的":["69.56"],"并且它的行为依赖于组件的依赖项数组的变化":["69.56"],"直接在组件之外调用":["69.56"],"setname":["69.60"],"渲染一个输入框":["69.60"],"并将其值与本地存储中的":["69.60"],"绑定":["69.60"],"onchange":["69.60"],"字节二面":["70.0"],"当拖动元素离开可放置区域时触发":["71.3"],"对象":["71.4"],"用于指定用户是否可以选择文本":["71.5"],"包括设置拖动元素的样式":["71.6"],"shaking":["71.9"],"友好":["71.9"],"代码也更容易压缩":["71.9"],"tostring":["72.26"],"需要手动处理异步操作的状态":["73.4"],"即":["73.4","113.8","135.1"],"pending":["73.4"],"父组件传递的参数":["73.7"],"来实现传参效果":["73.8"],"将ref传递给子组件":["73.10"],"子组件":["73.10"],"如果ref是设置在自定义组件上":["73.10"],"则需要用forwardref处理一下":["73.10"],"使用provider传值":["73.11"],"provider":["73.11"],"keyframes":["73.13","81.1","81.3","81.5","81.6","81.11","81.12","81.13"],"slide":["73.13"],"0px":["73.13"],"100px":["73.13"],"infinite":["73.13","81.9","81.13","81.14"],"alternate":["73.13"],"弹性布局":["73.13"],"如百分比":["73.14"],"em":["73.14"],"rem":["73.14"],"等":["73.14","73.16"],"布局来实现响应式设计":["73.14"],"使页面在不同设备上具有良好的显示效果":["73.14"],"流式布局":["73.14"],"使用百分比单位来设置宽度":["73.14"],"使得元素可以根据父容器的大小自动调整大小":["73.14"],"self":["73.15"],"line":["73.15"],"process":["73.16"],"nexttick":["73.16"],"中执行异步操作时":["73.16"],"宏任务和微任务的执行顺序如下":["73.16"],"执行一个宏任务":["73.16"],"例如执行整体代码":["73.16"],"app":["73.20","73.24","73.25"],"可以强制执行同步更新":["73.21"],"tsx":["73.21"],"usedeferredvalue":["73.22"],"可以将某个状态值的更新延迟一段时间后再执行":["73.22"],"从而提高应用程序的性能和用户体验":["73.22"],"类似于防抖":["73.22"],"root":["73.23"],"严格模式主要包含以下几个方面的检查和提示":["73.23"],"识别不安全的生命周期方法":["73.23"],"fc":["73.25"],"setcount":["73.25"],"timer":["73.25"],"操作符检测一个未声明的变量或者一个值为":["74.2"],"表示未定义或未初始化的变量":["74.3"],"当一个值是联合类型对象时":["74.6"],"nums":["74.7"],"temp":["74.7"],"do":["74.7"],"求模的值":["74.7"],"用于获取高三位":["74.7"],"这里可能有小数":["74.7"],"mod":["74.7"],"判断值是不是大于1":["74.7"],"是继续的条件":["74.7"],"高三位":["74.7"],"填充":["74.7"],"循环未结束":["74.7"],"就要填充为三位数":["74.7"],"需要填充为001":["74.7"],"不然temp":["74.7"],"mod的时候":["74.7"],"001":["74.7"],"就会变成":["74.7"],"对象的":["74.11"],"属性值不变":["74.11"],"输出":["74.11"],"因为现在":["74.11"],"已经指向了":["74.11"],"另一种优化方式是使用":["74.12"],"关键字来声明循环变量":["74.12"],"会创建一个块级作用域":["74.12"],"属性来定义网格中的行和列":["74.14"],"容器内部的水平区域称为行":["74.14"],"垂直区域称为列":["74.14"],"上图中":["74.14"],"组成了一行":["74.14"],"则是一列":["74.14"],"行列":["74.14"],"网格单元":["74.14"],"一个网格单元是在一个网格元素中最小的单位":["74.14"],"从概念上来讲其实它和表格的一个单元格很像":["74.14"],"minmax":["74.16"],"我们有时候想给网格元素一个最小和最大的尺寸":["74.16"],"函数产生一个长度范围":["74.16"],"表示长度就在这个范围之中都可以应用到网格项目中":["74.16"],"它接受两个参数":["74.16"],"分别为最小值和最大值":["74.16"],"300px":["74.16","81.15"],"的意思是":["74.16"],"第三个列宽最少也是要":["74.16"],"但是最大不能大于第一第二列宽的两倍":["74.16"],"rows":["74.17"],"50px":["74.17","81.9"],"我们可能想让下面长度合适的填满这个空白":["74.19"],"这个时候可以设置":["74.19"],"表示尽可能填满表格":["74.19"],"先行后列紧凑型":["74.19"],"先列后行":["74.19"],"对齐容器的起始边框":["74.21"],"对齐容器的结束边框":["74.21"],"容器内部居中":["74.21"],"算":["74.22"],"gap":["74.22"],"10px":["74.22"],"bee7e9":["74.24"],"five":["74.24"],"areas":["74.25"],"中回调函数有两个参数":["75.2"],"第一个是累加器":["75.2"],"accumulator":["75.2"],"第二个是当前值":["75.2"],"currentvalue":["75.2"],"累加器acc":["75.2"],"当前值cur":["75.2"],"返回值":["75.2"],"属于宏任务的是":["75.3"],"定时器settimemout":["75.3"],"所以一步任务中先执行":["75.3"],"之后执行":["75.3"],"定时器":["75.3"],"综上":["75.3"],"打印顺序为":["75.3"],"isarray":["75.4"],"concat":["75.4","111.3"],"type并非application":["75.6"],"www":["75.6","90.0"],"urlencoded":["75.6"],"请求也可以用于访问控制":["75.7"],"服务器可以根据请求头信息":["75.7"],"origin":["75.7","136.2"],"access":["75.7"],"reject":["75.11"],"新的":["75.11"],"这是一个promise":["75.12"],"的状态":["75.13"],"那么也会等到所有的":["75.14"],"都变成":["75.14"],"rejected":["75.14"],"添加了新的api":["75.15"],"该方法会在所有的":["75.15"],"targetuserid":["75.16"],"emptyuserid":["75.16"],"测试不存在用户":["75.16"],"test1":["75.16"],"test2":["75.16"],"问题3":["75.16"],"获取最长路径":["75.16"],"由userid组成":["75.16"],"多个最长返回任意一个":["75.16"],"代表的是一个不透明纯白颜色":["76.0"],"选择器不仅可以选择":["76.0"],"元素":["76.0"],"还可以选择":["76.0"],"svg":["76.0"],"中的图形":["76.0"],"关于样式优先级":["76.0"],"important":["76.0"],"内联样式":["76.0"],"样式":["76.0"],"浏览器默认样式":["76.0"],"元素顺序的优先级比":["76.0"],"z":["76.0","110.22"],"的优先级更高":["76.0"],"以下关于图片格式的说明哪些是正确的":["76.0"],"jpg":["76.0"],"格式的图片支持有损压缩":["76.0"],"png":["76.0"],"expensivecalculation":["78.2","78.3"],"a":["78.2","89.4","100.0","110.8","122.2","123.9"],"两者是否可以相互转换":["78.2"],"严格来说":["78.2"],"如果经过四个端点的比较":["78.6"],"都没有可复用的节点":["78.6"],"则将旧的子序列保存为节点":["78.6"],"为":["78.6"],"map":["78.6","110.22"],"拿新的一组子节点的头部节点去":["78.6"],"中查找":["78.6"],"如果可以找到可复用的节点":["78.6"],"则将相应的节点进行更新":["78.6"],"并将其移动到头部":["78.6"],"然后头部指针右移":["78.6"],"然而":["78.6"],"用新的一组子节点中的头部节点去旧的一组子节点中去寻找可复用的节点":["78.6"],"并非总能找到":["78.6"],"这说明这个新的头部节点是新增节点":["78.6"],"watcheffect":["78.8"],"set派发更新阶段":["78.8"],"当我们":["78.8"],"改变属性的时候":["78.8"],"首先通过":["78.8"],"trigger":["78.8"],"teacher":["78.9"],"major":["78.9"],"studentandteacherlist":["78.9"],"元组类型":["78.9"],"list":["78.9"],"1fr":["78.10"],"表示上下两个容器的高度随容器调整":["78.10"],"并且中间的容器按比例分配剩余所有高度":["78.10"],"的配置项":["78.11"],"immeriate":["78.11"],"来改变":["78.11"],"有点像":["78.11"],"再次遍历数组":["78.12"],"构建树形结构":["78.12"],"pid为0的时候是根节点":["78.12"],"否则":["78.12"],"将当前元素添加到其父元素的children数组当中":["78.12"],"reduce实现树形结构":["78.12"],"原文链接":["80.0"],"9s":["81.1"],"8s":["81.1","81.8","81.13"],"1deg":["81.2"],"179deg":["81.4"],"360deg":["81.5","81.11"],"16s":["81.6"],"opacity":["81.7"],"7s":["81.8"],"6s":["81.8"],"5s":["81.8"],"ms":["81.11"],"rotate":["81.11"],"15px":["81.12"],"animate":["81.13","81.14"],"8px":["81.14"],"5px":["81.14"],"color":["81.14"],"465efb":["81.14"],"1s":["81.14"],"position":["81.15"],"relative":["81.15"],"absolute":["81.15"],"top":["81.15","137.2"],"margin":["81.15"],"因为这破坏了样式表中的固有的级联规则":["82.0"],"使得调试找":["82.0"],"bug":["82.0"],"变得更加困难了":["82.0"],"当两条相互冲突的带有":["82.0"],"规则的声明被应用到相同的元素上时":["82.0"],"拥有更大优先级的声明将会被采用":["82.0"],"一些经验法则":["82.0"],"一定要优先考虑使用样式规则的优先级来解决问题而不是直接加":["82.0"],"只有在需要覆盖全占或外部css的特定页面中使用":["82.0"],"不要在你的插件中使用":["82.0"],"不要在全站范围的css代码中使用":["82.0"],"lilist":["83.0"],"我的胃来食":["86.1"],"u0327":["87.10"],"扩展运算符的应用":["87.12"],"下面是扩展运算符取代":["87.12"],"方法的一个实际的例子":["87.12"],"应用":["87.12"],"math":["87.12"],"max":["87.12"],"简化求出一个数组最大元素的写法":["87.12"],"等同于":["87.13","119.4"],"只有当参数不少于两个时":["87.14"],"才会返回由参数组成的新数组":["87.14"],"参数只有一个正整数时":["87.14"],"实际上是指定数组的长度":["87.14"],"基本上可以用来替代":["87.14"],"o":["87.20","88.7"],"method":["87.20"],"es6":["87.21"],"允许字面量定义对象时":["87.21"],"用方法二":["87.21"],"表达式":["87.21"],"作为对象的属性名":["87.21"],"即把表达式放在方括号内":["87.21"],"regexp":["87.27","111.4"],"abc":["87.27","88.21"],"u":["87.29"],"prototype":["87.32","103.16"],"es6是ecmascript的第六个版本":["88.0"],"2015年发布":["88.0"],"引入了许多新的语言特性和改进":["88.0"],"声明的变量之前":["88.2"],"assignment":["88.3"],"to":["88.3","104.6"],"constant":["88.3"],"variable":["88.3"],"这个generator函数是为了生成斐波那契数列":["88.5"],"fibs":["88.5"],"yield":["88.5"],"msg":["88.6"],"wen":["88.6"],"wrong":["88.6"],"类数组都具有length属性":["88.7"],"因此还可以对这个属性进行解构赋值":["88.7"],"下面的写法会有不一样的结果":["88.9"],"allowed":["88.10"],"还有一个比较容易忽略的地方是":["88.10"],"rest":["88.12"],"参数代替":["88.12"],"永远是指向其上下文的":["88.13"],"queryselector":["88.14"],"所以为了使用数组的方法":["88.15"],"array":["88.15","103.16"],"先将其转为数组":["88.15"],"参数则是一个真正的数组":["88.15"],"可以直接使用数组特有的方法":["88.15"],"变量的写法":["88.15"],"obj2":["88.18","111.5"],"fun":["88.20"],"bar":["88.21"],"baz":["88.21"],"报错":["88.21","119.10","119.14"],"book类的实例":["88.22"],"book1":["88.22"],"导入常量和函数":["88.23"],"实例也可以作为其它对象的原型对象":["89.1"],"create":["89.1"],"对象是":["89.1"],"对象的原型":["89.1"],"obj对象本身没有time属性":["89.1"],"所以根据原型链":["89.1"],"对象上读取该属性":["89.1"],"导致被拦截":["89.1"],"同一个拦截器函数":["89.1"],"可以设置拦截多个操作":["89.1"],"对其属性进行访问时":["89.1"],"那么还有两种额外操作可拦截":["89.2"],"apply":["89.2","134.3"],"实例作为函数调用的操作":["89.2"],"call":["89.2","98.0"],"construct":["89.2"],"实现链式操作":["89.4"],"pipe":["89.4"],"funcstack":["89.4"],"oproxy":["89.4"],"pipeobject":["89.4"],"myobj":["89.5"],"setprototypeof":["89.5"],"设置":["89.5"],"属性的值时":["89.5"],"并没有":["89.5"],"因此引擎会到":["89.5"],"的原型链去找":["89.5"],"myobj的原型对象":["89.5"],"是一个":["89.5"],"实例":["89.5"],"设置它的":["89.5"],"上面代码中":["89.7","119.9"],"方法拦截":["89.7"],"对象的属性赋值行为":["89.7"],"它采用":["89.7"],"方法将值赋值给对象的属性":["89.7"],"确保完成原有的行为":["89.7"],"然后再部署额外的功能":["89.7"],"longgedobj":["89.7"],"设置对象的属性值":["89.8"],"deleteproperty":["89.8"],"创建被观察者对象":["89.9"],"observalbe":["89.9"],"修改被观察者对象的数据":["89.9"],"privatemember":["89.10"],"私有成员":["89.10"],"可以通过":["89.10"],"此外":["89.12"],"获取值":["89.13"],"检查是否包含某个键":["89.13"],"会被垃圾回收机制回收":["89.14"],"并且对应的键值对也会对":["89.14"],"内部属性是实例的弱引用":["89.15"],"删除实例时它们也会随之消失":["89.15"],"删除键值对":["89.16"],"返回布尔值":["89.16","89.21"],"set可以存储任意类型的值":["89.17"],"检查是否包含某个值":["89.18"],"的成员是弱引用":["89.19"],"它在weakset结构中的引用就会自动被垃圾回收":["89.20"],"has":["89.21"],"接口":["89.23"],"接口主要提供":["89.24"],"遍历器与它所遍历的那个数据结构":["89.25"],"实际是分开的":["89.25"],"完全可以写出没有对应数据结构的遍历器对象":["89.25"],"或者用遍历器对象模拟出数据结构":["89.25"],"idmaker":["89.25"],"arguments":["89.26","130.2"],"done":["89.28"],"还是一个遍历器独享生成函数":["89.30"],"返回的遍历器对象":["89.30"],"save":["90.0"],"createelementns":["90.0"],"w3":["90.0"],"org":["90.0"],"xhtml":["90.0"],"网页可见区域高":["91.0"],"包括边线的宽":["91.0"],"网页正文全文宽":["91.0"],"地址的总长度":["92.0"],"n2":["92.0"],"取得":["92.0"],"号的位置":["92.0"],"substr":["92.0"],"从":["92.0","123.10"],"号后面的内容":["92.0"],"并将该数据包发送给服务端":["93.1"],"客户端进入syn":["93.1"],"等待server确认":["93.1"],"服务端收到syn包":["93.1"],"必须先确认客户的syn":["93.1"],"发送一个ack值为j":["93.1"],"1的确认数据包":["93.1"],"同时也向客户端发送一个syn包":["93.1"],"在tcp握手的时候":["93.2"],"接收端发送":["93.2"],"syn":["93.2"],"的包是将一个":["93.2"],"和一个":["93.2"],"合并到一个包中":["93.2"],"所以减少了一次包的发送":["93.2"],"完成三次握手":["93.2"],"对于四次挥手":["93.2"],"tcp是全新工程通信":["93.2"],"在主动关闭放发送":["93.2"],"ip模型":["94.0"],"比较简洁":["94.0"],"具有较强的实际应用价值":["94.0"],"将计算机网络分为了四个层次":["94.0"],"cookie":["95.1","95.7"],"属性和标签中":["95.2"],"包含类似":["95.2"],"image":["95.2"],"如果url被解析":["95.3"],"那么攻击脚本就会被运行":["95.3"],"反射型xss根存储型xss的区别":["95.3"],"存储型xss的恶意代码存放在数据库里":["95.3"],"quto":["95.4"],"的操作的攻击方法":["95.5"],"攻击者诱导受害者进入第三方网站":["95.5"],"在第三方网站中":["95.5"],"而且低版本浏览器存在伪造":["95.6"],"referer的风险":["95.6"],"而一般网站的":["95.7"],"session":["95.7","97.0"],"注":["96.0"],"亦可以var":["96.0"],"传入的时候直接传入arr":["96.0"],"需要注意的是":["96.0"],"注意如果":["96.0"],"并且可以将参数在执行的时候添加":["96.1"],"来设置具有唯一":["97.0"],"会话标识符":["97.0"],"identifier":["97.0"],"函数数组":["97.1"],"cookietrimmed":["97.1"],"限制":["97.2"],"编码后的":["97.2"],"对":["97.2"],"大小不能超过":["97.2"],"4kb":["97.2"],"因此":["97.2","119.5"],"我们不能在一个":["97.2"],"中保存大的东西":["97.2"],"adminpage":["97.3"],"下不可见":["97.3"],"在site":["97.4"],"使cookie可以被在任何子域":["97.4"],"访问":["97.4"],"john":["97.4"],"设置为过去的时间":["97.5"],"则cookie将会被删除":["97.5"],"它是":["97.5"],"的替代选项":["97.5"],"指明了cookie的过期时间距离当前时间的秒数":["97.5"],"如果将其设置为0或者负数":["97.5"],"spaced":["98.0"],"函数调用时":["98.0"],"函数名与":["98.0"],"之间不能有空格":["98.0"],"sparse":["98.0"],"arrays":["98.0"],"禁止稀疏数组":["98.0"],"sync":["98.0"],"nodejs":["98.0"],"禁止同步方法":["98.0"],"禁止使用三目运算符":["98.0"],"trailing":["98.0"],"一行结束后面不要有空格":["98.0"],"在调用super":["98.0"],"之前不能使用this或super":["98.0"],"literal":["98.0"],"禁止抛出字面量错误":["98.0"],"undef":["98.0"],"不能有未定义的变量":["98.0"],"init":["98.0"],"变量初始化时不能直接给它赋值为undefined":["98.0"],"不能使用undefined":["98.0"],"unexpected":["98.0"],"避免多行表达式":["98.0"],"underscore":["98.0"],"标识符不能以":["98.0"],"开头或结尾":["98.0"],"unneeded":["98.0"],"禁止不必要的嵌套":["98.0"],"isyes":["98.0"],"answer":["98.0"],"unreachable":["98.0"],"不能有无法执行的代码":["98.0"],"unused":["98.0"],"expressions":["98.0"],"禁止无用的表达式":["98.0"],"vars":["98.0"],"used":["98.0"],"不能有声明后未被使用的变量或参数":["98.0"],"define":["98.0","100.0"],"未定义前不能使用":["98.0"],"useless":["98.0"],"禁止不必要的call和apply":["98.0"],"禁用void操作符":["98.0"],"禁用var":["98.0"],"用let和const代替":["98.0"],"terms":["98.0"],"todo":["98.0"],"fixme":["98.0"],"xxx":["98.0"],"start":["98.0"],"不能有警告备注":["98.0"],"with":["98.0","134.3"],"禁用with":["98.0"],"是否允许非空数组里面有多余的空格":["98.0"],"arrow":["98.0"],"箭头函数用小括号括起来":["98.0"],"的前":["98.0"],"后括号":["98.0"],"在对象中使用getter":["98.0"],"块语句中使用var":["98.0"],"大括号风格":["98.0"],"避免多次调用回调什么的":["98.0"],"cjs不能在浏览器中工作":["100.0"],"它必须经过转换和打包":["100.0"],"amd代表异步模块定义":["100.0"],"dep1":["100.0"],"dep2":["100.0"],"by":["100.0"],"returning":["100.0"],"为数组中每个元素执行的函数":["101.1"],"并会丢弃它的返回值":["101.1"],"比较时间等等":["102.0"],"下面就是我对":["102.0"],"sunday":["102.6"],"saturday":["102.6"],"weekday":["102.6"],"isoweekday":["102.6"],"monday":["102.6"],"秒数":["102.7"],"subtract":["102.7"],"moment":["102.8"],"format":["102.8"],"yyyy年mm月dd日":["102.8"],"xxxx":["102.8"],"xx":["102.8"],"escaped":["102.11"],"endof":["102.12"],"add":["102.13","110.8","134.3"],"明天晚上7点49分":["102.13"],"lll":["102.14"],"2019年5月24日晚上7点50分":["102.14"],"startof":["102.15"],"year":["102.15"],"本年的的结束日期":["102.15"],"元素开始执行":["103.1"],"则需要传入初始值":["103.1"],"currentindex":["103.3"],"在这种情况下":["103.4"],"acc":["103.7","103.11"],"alphabet":["103.11"],"第二种实现方式":["103.12"],"doubled":["103.13"],"p4":["103.14"],"promisearr":["103.14"],"multiply16":["103.17"],"multiply24":["103.17"],"这将在一秒后执行":["104.1"],"这将每隔一秒执行一次":["104.2"],"也接受两个参数":["104.2"],"的最小延迟时间设定为4毫秒":["104.3"],"具体取决于浏览器或者环境":["104.3"],"functional":["104.5"],"interval":["104.5"],"executed":["104.5"],"模拟执行":["104.5"],"you":["104.6","134.3"],"want":["104.6"],"避免不必要的绘制":["104.7"],"会被绑定到指定参数的对象上":["105.1"],"一般通过上下文对象调用函数时":["105.1"],"结果为":["105.2"],"虽然":["105.2"],"函数":["105.2"],"对象中的方法":["105.2"],"但是在赋值给":["105.2"],"window上没有text属性":["105.3"],"所以返回undefined":["105.3"],"拓展":["105.3"],"如果想要让console":["105.3"],"foo":["105.4"],"lucas":["105.4"],"logname":["105.4"],"如果返回的不是一个对象":["105.5"],"则可以使用箭头函数来解决":["105.6"],"这里打印的是":["105.7"],"如果修改了foo函数为箭头函数的形式":["105.7"],"对象提供像":["106.0"],"toexponential":["106.0"],"这样的方法":["106.0"],"当在原始值上访问属性时":["106.0"],"会自动将值包装到相应的包装对象中":["106.0"],"你可以安全地存储和操作巨大的整数":["106.1"],"甚至超过":["106.1"],"的安全整数限制":["106.1"],"symbol类型":["106.1"],"循环来枚举属性":["106.3"],"configurable":["106.3"],"表示该属性是否可以删除":["106.3"],"是否可以更改为访问器属性":["106.3"],"并可以更改其特性":["106.3"],"访问器属性":["106.3"],"将键与两个访问器函数":["106.3"],"output":["106.4"],"用于记录实例是由哪个构造函数创建":["107.1"],"定义一个函数":["107.1"],"我是原型属性":["107.2"],"所有实例都可以读取到我":["107.2"],"的概念":["107.3"],"当我们调用":["107.3"],"先在":["107.3"],"对象本身寻找":["107.3"],"没有找到则通过":["107.3"],"找到了原型对象":["107.3"],"也没有找到":["107.3"],"然后又通过":["107.3"],"可以看到function函数的构造函数就是本身了":["107.4"],"那我们也可以说":["107.4"],"function时所有函数的构造函数":["107.4"],"到这里我们已经对":["107.4"],"属性有了一个初步认识":["107.4"],"它的作用是从一个对象指向一个函数":["107.4"],"在函数体内部又重新给":["108.0"],"赋值了":["108.0"],"所以第一个打印的是":["108.0"],"第二次打印出来一个":["108.0"],"完全是因为在函数体内部声明了一个变量":["108.0"],"直接打印就会打印出":["108.0"],"至于函数体外边的":["108.0"],"那就更简单了":["108.0"],"由于在全局已经声明了变量":["108.0"],"所以在全局作用域中打印出来的就是":["108.0"],"还有一个例子":["108.0"],"中的一部分或者全部因为大小边距等引起结构变化":["109.1"],"display":["109.2"],"none":["109.2","112.7"],"还有js动态添加的元素等":["109.2"],"浏览器把所有的样式解析成样式结构体":["109.2"],"在dom树和样式结构体组合后构建成":["109.2"],"不包括":["109.2"],"那么元素的":["109.3"],"offsetwidth":["109.4"],"offsetheight":["109.4"],"scrolltop":["109.4"],"flexbox":["109.5"],"浏览器就会flush队列":["109.7"],"进行一个批处理":["109.7"],"找不到则返回":["110.1","110.20"],"原数组保持不变":["110.2"],"x2":["110.3"],"newarr":["110.4","110.23"],"islessthan6":["110.6","110.7"],"表示被删除的元素":["110.9"],"新数组的长度":["110.10"],"返回的是删除的那个元素":["110.11"],"方法时候":["110.16"],"如果传入的元素是":["110.16"],"则不会返":["110.16"],"回报错":["110.16"],"并且返回的结果是字符串的":["110.16"],"元素5对应的下标为":["110.17"],"删除一个元素":["110.18"],"还支持传入箭头函数":["110.21"],"可以进行函数操作":["110.21"],"使用箭头函数作为映射函数去操作多个元素":["110.21"],"string":["110.22","119.1","119.6","119.14"],"fromcharcode":["110.22"],"并且获取它们各自的平方的数组":["110.23"],"引用数据类型的变量是一个指向堆内存中实际对象的引用":["111.1"],"即浅拷贝是拷贝一层":["111.2"],"直接返回":["111.4"],"不进行操作":["111.4"],"instanceof":["111.4"],"deepclone":["111.5"],"一个深拷贝方法":["111.5"],"深拷贝是新开栈":["111.6"],"s":["112.0"],"请求来获取的":["112.0"],"pwa通常会更加反应迅速":["112.1"],"则直接从服务端获取资源":["112.2"],"强缓存与协商缓存的区别":["112.2"],"强缓存不会发送到服务器":["112.2"],"资源更新了可能浏览器还不知道":["112.2"],"协商缓存会发送请求给服务器":["112.2"],"则使用协商缓存":["112.3"],"使用协商缓存":["112.3"],"的值进行混存":["112.4"],"意思是在600秒内再次发起这个请求":["112.4"],"则会直接使用缓存结果":["112.4"],"强制缓存生效":["112.4"],"️":["112.4","138.1"],"在无法确定客户端的事件是否与服务端的事件同步的情况下":["112.4"],"相比于":["112.4"],"是更好的选择":["112.4"],"所以同时存在时":["112.4"],"只有":["112.4","139.3"],"生效":["112.4"],"如何在浏览器中判断强制缓存是否生效":["112.4"],"关于chrome网络请求的size":["112.4"],"可能会出现三种情况":["112.4"],"协商缓存失效":["112.5"],"是客户端再次发起请求时":["112.6"],"携带上次请求返回的唯一标识":["112.6"],"值":["112.6"],"通过此字段值告诉服务器":["112.6"],"该资源上起请求返回的唯一标识值":["112.6"],"服务器收到该请求后":["112.6"],"发现该请求头中":["112.6"],"match":["112.7"],"协商缓存由服务器决定是否使用缓存":["112.7"],"若协商缓存失效":["112.7"],"而把a称为":["113.0"],"b的父类别":["113.0"],"trunk":["113.1"],"后备厢":["113.1"],"这样轿车和货车就是不一样的":["113.1"],"但是二者都属于汽车这个类":["113.1"],"汽车":["113.1"],"轿车继承了汽车的属性":["113.1"],"而不需要再次在":["113.1"],"中定义汽车已有的属性":["113.1"],"继承":["113.1"],"寄生式继承":["113.2"],"没问题":["113.4"],"关键字直接实现继承":["113.8"],"constructor":["113.8"],"原型方法":["113.8"],"下面可以简写为":["113.8"],"str":["114.0"],"substring":["114.0"],"获取url中":["114.0"],"之后的字符":["114.0"],"去掉第一位的问号":["114.0"],"以":["114.0"],"分隔字符串":["114.0"],"获得类似name":["114.0"],"xiaoli这样的元素数组":["114.0"],"split":["114.0"],"将每一个数组元素以":["114.0"],"分隔并赋给obj对象":["114.0"],"i":["114.0"],"防抖":["115.0"],"debounce":["115.0"],"starttime":["115.2"],"curtime":["115.2"],"当前时间":["115.2"],"remaining":["115.2"],"不为null":["115.4"],"callnow":["115.4"],"第一次会立即执行":["115.4"],"来实现":["115.5"],"而节流是在一段连续操作中":["115.5"],"每一段时间只执行一次":["115.5"],"防止重复渲染":["115.6"],"节流":["115.6"],"是计算机网络中处于网络最外围的设备":["117.0"],"主要用于用户信息的输入以及处理结果的输出等":["117.0"],"客户端":["117.0"],"客户端与服务段对应":["117.0"],"又称为用户端":["117.0"],"为用户提供本地服务的程序":["117.0"],"用来接收来自服务端的数据或者资源":["117.0"],"也可以理解为软件":["117.0"],"服务端":["117.0"],"为客户端提供服务":["117.0"],"事件驱动机制":["117.1"],"可以同时处理超过4万的用户连接":["117.1"],"缺点就是一个用户造成的线程奔溃会让整个服务器都崩溃":["117.1"],"其它用户也会崩溃":["117.1"],"单线程在同一时刻只能执行一个任务":["117.1"],"也就是说":["117.1"],"执行环境相对更简单":["117.1"],"更高效":["117.1"],"但是在单线程中i":["117.1"],"o设备对其来说是致命的":["117.1"],"因为i":["117.1"],"里删除指定属性":["119.1"],"返回剩下的属性":["119.1"],"指定删除的键名":["119.1"],"keys":["119.1"],"可以是对象类型":["119.1"],"中不存在的属性":["119.1"],"但必须兼容":["119.1"],"中已经存在的键名":["119.2"],"t4":["119.2"],"实现如下":["119.3","119.13","119.16"],"表示去除可选属性的":["119.4"],"问号":["119.4"],"使其变为必选属性":["119.4"],"相对应的":["119.4"],"表示增加可选属性的":["119.4"],"的实现也可以写成下面这样":["119.5"],"表明键值是联合类型":["119.6"],"的类型必须兼容":["119.6"],"的实现如下":["119.7","119.9"],"t6":["119.8"],"如果参数":["119.8"],"不包含在联合类型":["119.8"],"t0":["119.10"],"是两个特殊值":["119.10","119.12"],"分别返回":["119.10","119.12","119.14"],"gift":["119.11"],"export":["119.11"],"getgift":["119.11"],"模块只输出了函数":["119.11"],"没有输出参数":["119.11"],"和返回值":["119.11"],"这时就可以通过":["119.11"],"unknown":["119.12","119.16"],"t8":["119.12"],"t2":["119.14"],"如果类型参数是":["119.14"],"两个特殊值":["119.14"],"thisparametertype":["119.16"],"必须打开noimplicitthis设置":["119.17"],"下面是另一个例子":["119.17"],"getx":["119.17"],"枚举类型被用于取值被限定在一定范围内的取值":["121.0"],"实际上上述例子会被编译成下面这种格式":["121.1"],"当然":["121.2"],"手动赋值也可以是":["121.2"],"小数":["121.2"],"常数枚举表达式是":["121.3"],"表达式的子集":["121.3"],"它可以在编译阶段求值":["121.3"],"当一个表达式满足下面条件之一时":["121.3"],"它就是一个常数枚举表达式":["121.3"],"数字字面量":["121.3"],"expression":["121.4"],"赋值计算项编译报错":["121.4"],"常量枚举与枚举的区别":["121.4"],"声明差异":["121.4"],"常量枚举":["121.4"],"进行声明":["121.4"],"枚举":["121.4"],"则通过":["121.4"],"类或接口时使用类型参数":["122.1"],"这些类型参数在使用时可以被动态地指定具体的类型":["122.1"],"strarr":["122.2"],"num":["122.3","139.7","139.8"],"ts编译错误":["122.3"],"ts泛型约束限制":["122.3"],"多个泛型类型也可以互相约束":["122.3"],"copyfileds":["122.3"],"也可以提前把泛型定义到接口上":["122.4"],"createtime":["123.1"],"username":["123.1"],"useravatar":["123.1"],"picture":["123.1"],"ianswerrecord":["123.1"],"comment":["123.1"],"audio":["123.1"],"通过提取公共部分":["123.1"],"利用联合类型将类型定义简化并且可复用":["123.1"],"iuserbaseinfo":["123.1"],"useavatar":["123.1"],"hello":["123.2"],"bird":["123.2","123.7"],"fly":["123.2"],"类型守卫可以通过一些条件检查来确定变量的确切类型":["123.3"],"touppercase":["123.4"],"else判断体里的逻辑是将":["123.4"],"的类型推断为":["123.4"],"number类型":["123.4"],"pets":["123.6"],"这里":["123.6"],"通过自定义的":["123.6"],"将pets的类型收窄为":["123.6"],"之后调用":["123.6"],"pet":["123.7"],"fish":["123.7"],"swim":["123.7"],"getusername":["123.8"],"中只是给现有类型起了一个别名":["123.9"],"它们并不会创建出不同或独立的类型":["123.9"],"当你使用类型别名时":["123.9"],"实际上就相当于直接使用了被别名的原始类型":["123.9"],"换句话说":["123.9"],"类型别名并不会创建出全新的":["123.9"],"不同的类型":["123.9"],"里":["123.10"],"类型别名不能被继承和实现":["123.10"],"它们也不能继承和实现其它类型":["123.10"],"开始":["123.10"],"类型别名可以被继承并生成新的交叉类型":["123.10"],"restarr":["123.12"],"footarr":["123.12"],"上面这个示例得到的结果是得到一个去掉首位字符的数组":["123.12"],"checkalivetype参数的类型":["125.0"],"解释":["125.0"],"先检查是否为屏幕闪烁":["125.0"],"不可以则自动读数字":["125.0"],"返回参数":["125.0"],"errmag":["125.0"],"错误信息":["125.0"],"错误码":["125.0"],"verifyresult":["125.0"],"本次认证结果凭据":["125.0"],"不同":["127.1"],"中的元素不是按照它们在内存中的的物理顺序存储的":["127.1"],"insert":["127.2"],"remove":["127.2"],"删除":["127.2"],"append":["127.2"],"删除指定位置的节点":["127.4"],"removeat":["127.4"],"在一个":["127.5"],"首节点和末节点被连接在一起":["127.5"],"这种方式在单向和双向链表中皆可实现":["127.5"],"findparams":["127.6"],"funtion":["127.6"],"查找具有特定值或者满足回调函数的节点":["127.6"],"find":["127.6"],"如果指定了回调函数":["127.6"],"那么尝试通过回调函数找到节点":["127.6"],"如果指定了值":["127.6"],"那么尝试通过值找到节点":["127.6"],"commpare":["127.6"],"删除尾部节点":["127.6"],"dealetetail":["127.6"],"没有尾部节点可以删除":["127.6"],"链表中只有一个节点":["127.6"],"deletetail":["127.6"],"新的缓存组概念被引入":["129.0"],"可以更细粒度地控制模块的缓存策略":["129.0"],"内置代码分割优化":["129.0"],"optimization":["129.0"],"splitchunks":["129.0"],"嵌套括号被隐含在树的结构中":["130.1"],"并没有以节点的形式呈现":["130.1"],"而类似于":["130.1"],"property":["130.2"],"computed":["130.2"],"optional":["130.2"],"形成一个新的表现形式":["130.3"],"code":["130.3"],"generation":["130.3"],"的任务是在":["130.4"],"的基础上将单词序列组合成各类语法短语":["130.4"],"程序":["130.4"],"语句":["130.4"],"常见的源码转换":["131.1"],"主要分为三种情况":["131.1"],"压缩":["131.1"],"浏览器中如何设置source":["131.3"],"包含eval关键字的配置项不产生":["131.4"],"eval依靠sourceurl定位原始代码":["131.4"],"其它都是":["131.4"],"map定位":["131.4"],"性能最低":["131.4"],"将map通过dataurl嵌入":["131.5"],"不再生成":["131.5"],"map文件":["131.5"],"减少文件数":["131.5"],"cheap":["131.5"],"展示源码是":["131.7"],"es5":["131.7"],"的代码":["131.7"],"因为已经被":["131.7"],"babal":["131.7"],"转义了":["131.7"],"webpack":["131.9"],"会生成":["131.9"],"sourcemap":["131.9"],"文件以提供给错误收集工具":["131.9"],"比如sentry":["131.9"],"英文官网":["133.1"],"指针保持在最后一次成功提交的位置":["134.1"],"引用被设置为":["134.1"],"指向难以应用的修改的提交":["134.1"],"在索引文件和工作区中":["134.1"],"可能在不同的上下文中解决了相同的问题":["134.2"],"可以将一个开发者修复的解决方案单独应用到其它分支":["134.2"],"could":["134.3"],"not":["134.3"],"hint":["134.3","137.3"],"after":["134.3"],"resolving":["134.3"],"conflicts":["134.3"],"mark":["134.3"],"them":["134.3","137.3"],"rm":["134.3","137.3"],"pathspec":["134.3"],"then":["134.3"],"run":["134.3"],"can":["134.3","137.3"],"instead":["134.3","137.3"],"skip":["134.3","137.3"],"然后一直回车就会提示rsa保存成功":["135.1"],"这样在":["135.1"],"ssh目录就会生成两个文件":["135.1"],"第四步":["135.1"],"cat":["135.1"],"然后复制里边的信息":["135.1"],"在网页登录github账号":["135.1"],"点击个人头像":["135.1"],"进入setting":["135.1"],"然后选择":["135.1"],"merge":["136.1"],"这样可能会产生冲突":["136.1"],"新建分支":["136.2"],"删除本地分支":["136.2"],"删除远程分支":["136.2"],"删除后还需推送到服务器":["136.2"],"删除后推送至服务器":["136.2"],"指的是某个branch在服务器上的最新状态":["136.3"],"我们可以在本地通过它查看刚取回的更新信息":["136.3"],"远程主机名":["136.4"],"远程分支名":["136.4"],"这个时候用":["137.2"],"rebase":["137.2"],"就可以解决":["137.2"],"rewinding":["137.2"],"replay":["137.2"],"your":["137.2"],"on":["137.2","139.4"],"it":["137.2"],"applying":["137.2"],"现在再查看一下提交历史":["137.2"],"2e2b995":["137.2"],"完美解决":["137.2"],"现在再push推送到远端":["137.2"],"0001":["137.3"],"am":["137.3"],"show":["137.3"],"current":["137.3"],"see":["137.3"],"all":["137.3"],"manually":["137.3"],"resolved":["137.3"],"conflicted":["137.3"],"files":["137.3"],"before":["137.3"],"失败了":["137.3"],"原因很简单":["137.3"],"两个分支修改个同一个文件":["137.3"],"产生了冲突":["137.3"],"所以先需要解决冲突":["137.3"],"打开冲突的文件":["137.3"],"解决冲突":["137.3"],"会看到乱七八糟的所有增量修改历史":["138.0"],"其实对别人来说":["138.0"],"danger":["138.1"],"但是不保留该提交的注释信息":["138.2"],"exec":["138.2"],"表示执行shell命令":["138.2"],"d":["138.2"],"表示丢弃这条commitid":["138.2"],"根据我们的需求":["138.2"],"我们需要讲第二三次提交合并到第一次提交上去":["138.2"],"最终只形成一个提交":["138.2"],"提交信息":["138.2"],"从而可以去执行其它操作":["139.0"],"方便查找":["139.3"],"wip":["139.4"],"master":["139.4"],"比如第二个":["139.6","139.7"],"这个文件我也想存起来":["139.10"],"很明显":["139.10"],"先执行下":["139.10"]},{"0":["54.7","64.28","75.2","81.14","89.1","103.12","104.6","110.23","119.11"],"1":["14.3","15.0","63.8","73.25","74.14","74.19","81.13","89.6","103.12","104.6","105.3","105.5","121.2","127.4","136.2","139.6"],"2":["14.1","14.2","63.8","73.16","88.6","97.0","105.3","108.0"],"3":["22.0","31.4","42.1","42.4","63.8","69.7","69.13","72.26","73.16","74.26","87.18","93.1","97.0","135.1"],"4":["15.7","63.44","63.47","66.20","69.11","69.36","81.1","98.0","102.8","102.12","117.1","134.1"],"5":["23.0","49.0","54.5","63.47","64.27","64.28","64.38","74.11","78.6","81.9","81.13","88.5","89.6","104.5","105.1","121.2"],"6":["63.42","64.26","73.14","89.6","103.17","110.2","110.3","121.2"],"7":["64.25","73.14","73.15","89.6","102.9"],"8":["24.0","24.1","64.25","89.6","110.3"],"9":["103.17"],"10":["9.0","98.0","103.14","110.3","123.9"],"11":["98.0"],"16":["102.7"],"17":["102.6","102.7"],"18":["27.0","102.6","102.7","122.3"],"19":["27.1","102.6"],"20":["81.1","97.2"],"22":["89.6"],"25":["81.13"],"30":["59.3","89.29"],"31":["102.15"],"36":["69.11","103.17"],"40":["81.1","81.6"],"42":["123.9"],"44":["130.2"],"46":["130.2"],"50":["81.5","130.2"],"62":["64.38"],"66":["110.18","121.2"],"75":["81.13"],"80":["98.0"],"96":["95.4"],"97":["87.7"],"98":["87.7"],"99":["87.7","88.10"],"394":["137.2"],"500":["63.4"],"502":["63.4"],"1000":["64.31","73.22","73.25"],"1200":["103.14"],"2010":["63.37"],"8080":["76.0"],"push":["2.0","50.3","57.1","75.4","103.10","103.12","127.6"],"j为":["3.0"],"与数组每一项的差值":["3.0"],"判断map中是否包含着这个差值的项":["3.0"],"如果包含":["3.0"],"则这个时候这个差值与nums":["3.0"],"之和等于target":["3.0"],"has":["3.0","89.16"],"通过两个指针一快一慢来限定重复项目":["4.0"],"fast":["4.0"],"console":["5.0","63.3","87.16","87.24","88.22","88.23","103.6","103.7","103.13","103.14","105.4"],"log":["5.0","63.3","87.10","87.16","87.23","87.24","87.25","88.20","88.22","88.23","103.6","103.14","105.4"],"function":["5.0","54.8","78.5","89.1","121.1","122.5"],"len1":["5.0"],"len2":["5.0"],"计算递减序列的长度":["6.0"],"currentlength":["6.0"],"n":["7.0","74.14","110.22"],"left":["7.0","67.4"],"right":["7.0","67.4","81.15"],"ans":["7.0"],"while":["7.0","8.0","74.7"],"let":["10.0","75.16","87.21","88.7","111.4"],"leftsum":["10.0"],"for":["10.0","27.2","27.3","67.37","67.38","89.2"],"k":["10.0","93.1","110.22"],"length":["10.0","11.0","54.7","75.16","88.7","98.0","103.12"],"if":["10.0","11.0","23.2","42.10","63.3","67.35","89.1","123.6","130.1"],"比较左侧数字之和是否等于总和减去左侧数字和当前数字的值":["10.0"],"andtoo":["12.1"],"net":["12.1"],"微信":["12.1"],"深入学习angularjs":["12.3","13.0"],"directive":["12.3","13.0"],"制作一个自定义的directive":["12.3","13.0"],"directive的命名和使用规则":["12.3","13.0"],"让directive支持传入数据":["12.3","13.0"],"使用templateurl获取模板":["12.3","13.0"],"让directive动起来":["12.3"],"译":["12.4"],"这本书只有141页":["12.4"],"定价28元":["12.4"],"网站还有折扣":["12.4"],"阅读起来非常轻松":["12.4"],"如果您有编程经验":["12.4"],"我将angularjs作为一个类似于app的载体":["12.5"],"当网站代码在客户端载入完成后":["12.5"],"网络带宽优化":["12.6"],"如果需要扩展":["12.6"],"可以提高机器配置或者增加机器数量":["12.6"],"如果你之前有java或其它后端语言的编程经验":["12.7"],"angularjs是让你快速上手web前端开发的很好的选择":["12.7"],"当时花费了我19美金":["12.8"],"接下来我所做的事情":["12.8"],"就是拿着这个模板的代码":["12.8"],"修改html和增加controller":["12.8"],"service":["12.8"],"调整ui":["12.8"],"router的配置":["12.8"],"最终完成了网站的第一个版本":["12.8"],"花的时间大约是2个月出头":["12.8"],"前端":["12.8"],"后端":["12.8"],"部署调试":["12.8"],"开发工作全部由我一人完成":["12.8"],"虽然我会尽力保证信息的正确性":["12.9"],"但也还请您在阅读的过程中批判的接收信息":["12.9"],"如果有何问题":["12.9"],"不一定会最终成功":["12.10"],"typescript的引入我不好评价":["12.10"],"但是强类型定义和模型化并不太符合我的业务模式":["12.10"],"api一次性获取界面需要的所有数据":["12.10"],"这些数据已经在服务端进行好了类型定义和完整性处理":["12.10"],"本地主要是实现对crud的调用":["12.10"],"综上":["12.10"],"to":["12.11","69.38"],"view":["12.11","52.2"],"a":["12.11","51.5","58.2","119.16"],"copy":["12.11"],"of":["12.11"],"本章总结":["13.0"],"服务端js运行环境":["14.0"],"txt":["14.0","14.1","64.48"],"以上内容除去webstorm外":["14.0"],"都可以免费获得":["14.0"],"webstorm可以获取免费试用30天的版本":["14.0"],"评估了angular":["14.1"],"而webstorm是从11版本才开始部分支持angular":["14.1"],"2的typescript开发":["14.1"],"是因为要同时评估angular":["14.2"],"而angular":["14.2"],"2必须要在非常新的浏览器上才能正确运行":["14.2"],"目前最新的stable稳定版本":["14.3"],"标志":["14.4","16.1"],"这是使用了淘宝提供的npm镜像服务来安装所需的软件":["14.4"],"这样访问的速度会加快非常多":["14.4"],"如果您优先运行了后面的可选的命令":["14.4"],"那么之前三个命令的此标志项都可以去除":["14.4"],"x的命令和windows类似":["14.4"],"但是前面都加了一个sudo":["14.4"],"用于提权后把这些工具安装到node":["14.4"],"js的公共库中":["14.4"],"安装完成后":["14.4"],"请手动命令确认这几个工具的版本":["14.4"],"如果您安装时不成功":["14.4"],"请先确认node":["14.4"],"js工具的版本是否是最新的":["14.4"],"安装好后":["14.4"],"您的几个工具的版本应该如下":["14.4"],"图2":["15.0"],"创建项目":["15.0"],"用于存放图片文件":["15.1"],"但是":["15.1","78.2"],"为什么要把它们放置到":["15.1"],"即可保证目录外的内容不被暴露到网络当中":["15.2"],"另外":["15.2"],"这样设置的主要原因是为了使用git将整个项目都管理起来":["15.2"],"将文档内容拷贝过去":["15.3"],"命令行工具":["15.4"],"文件":["15.5","16.1"],"里面的内容如下":["15.5"],"以上配置文件会告诉":["15.6"],"将文档下载到":["15.6"],"我们将从安装angularjs开始":["16.0"],"也即是angularjs的1":["16.1"],"0版本":["16.1"],"当前的最新版本":["16.1"],"这个额外的标志":["16.1"],"是告诉":["16.1"],"把我们的安装记录放置入":["16.1"],"json":["16.1"],"这样":["16.1","63.32"],"我们以后可以直接通过":["16.1"],"对此项目使用的angularjs或其它库进行更新":["16.1"],"此时":["16.1","52.5","69.7"],"当我们打开":["16.1"],"我们会发现文档中的内容变多了":["16.1"],"我将":["16.2"],"从":["16.2","49.0"],"en":["16.2"],"改为了":["16.2"],"放在head部分的javascript文件":["16.3"],"会在body渲染完毕后才开始执行":["16.3"],"从angularjs工作的特性来看":["16.3"],"ng":["16.4","34.4"],"h1":["16.4","20.1","33.0","42.10"],"如果出现以上结果":["16.5"],"请您按书的前面内容仔细检查您的代码":["16.5"],"world到此结束":["16.5"],"下面我们将进入angularjs的世界":["16.5"],"页面模板获取和植入":["17.0"],"全局事件监听":["17.0"],"如何调试angularjs代码":["17.0"],"如何使用自动化测试工具":["17.0"],"表单":["17.0"],"数据验证":["17.0"],"界面库的引入":["17.0"],"并将表达式进行计算的结果显示在此处":["18.0"],"这也是angularjs最吸引人的特性":["18.0"],"因为它还支持将javascript中的数据显示在此处":["18.0"],"我们将在后面的内容中介绍如何操作":["18.0"],"并且":["18.0","31.0","52.0"],"和":["19.0","27.0","66.6","67.3","67.19","69.15","73.4","73.7","101.2","115.0"],"如":["19.1","67.15","112.4"],"data":["19.1","25.0","73.10","75.6"],"如果有读者清楚":["19.2"],"可与我联系以便更新上此段内容":["19.2"],"例如":["19.3","73.23","87.18","106.4","117.0"],"div":["19.3","30.0","31.2","32.1","32.7","63.36","73.25","88.14"],"声明好":["20.0"],"x":["20.1","25.4","89.1","96.0","103.16","110.21"],"body":["20.1","30.0","32.7","36.0"],"hello":["20.1","67.43","87.20","89.1"],"world":["20.1","21.0","67.43"],"声明放置在":["20.2"],"元素中":["20.2"],"那么angularjs":["20.2"],"只会":["20.2"],"针对":["20.2"],"元素中的内容进行处理":["20.2"],"开发者工具":["20.3"],"中看到报错信息":["20.3"],"以下表达式不会输出任何内容":["21.0"],"因为它在firstctrl之外":["21.0"],"p":["21.0","36.0","51.6","88.10","119.3","123.1"],"下面的内容不会显示":["21.0"],"这里只是为了表明变量命名的约束":["21.3"],"如果可能":["21.3"],"请不要使用拼音命名的变量":["21.3"],"值得注意的是":["21.3"],"之下除了可以传入数据外":["21.3"],"还可以传入其它函数":["21.3"],"比如我们声明一个":["21.3"],"中传入数据后":["21.4"],"通过表达式可以直接调用":["21.4"],"之间共享时":["21.5"],"如果不对数据进行二次封装":["21.5"],"可能会导致数据互相访问不了的情况":["21.5"],"运行结果":["22.0","23.0","27.3"],"图4":["22.0","23.0","24.1","25.2","27.0","27.1"],"value":["22.1","27.4","51.1","53.16"],"按钮":["22.1","50.4"],"click":["22.1"],"点击按钮":["22.1"],"我们即可看到数据通过弹出框显示了出来":["22.1"],"bold":["22.2"],"red":["22.2"],"来调整样式":["22.2"],"hide中的文字":["23.0"],"if为真时界面":["23.0"],"且之后不会使用到":["23.1"],"那么可以使用":["23.1"],"如果之后还可能会显示出来":["23.1"],"等标签中传入参数时":["23.2"],"是不需要双括号":["23.2"],"从源代码可以看出来":["24.0"],"刷新页面后":["24.1"],"让我们点击第一个按钮":["24.1"],"效果如下":["24.1"],"index字段应用效果":["24.1"],"format":["25.0"],"timezone":["25.0"],"将时间转化到对应的格式和时区":["25.0"],"将对象转化为json格式内容输出":["25.0"],"lowercase":["25.0"],"将文本转化为小写":["25.0"],"uppercase":["25.0"],"将文本转化为大写":["25.0"],"jerry":["25.1"],"model":["25.2","26.2"],"运行效果":["25.2","26.2","32.6"],"td":["25.3","25.4"],"in":["25.4","27.3","27.4","32.4","67.37","67.38","119.3"],"list":["25.4"],"filter":["25.4"],"选中后上方文字将变化为粗体":["26.1"],"style中加上bold类":["26.1"],"选中后上方文字将变红":["26.1"],"背景变黄":["26.1"],"style中加上has":["26.1"],"error类":["26.1"],"对应多个来源":["26.3"],"以及多个设定好的样式开关":["26.3"],"此示例就不进行具体的运行效果展示了":["26.3"],"span":["26.4"],"示例文本":["26.4"],"清除样式":["26.5"],"br":["26.5"],"运行页面":["27.0"],"我们可以看到下拉列表中有列表中的五种颜色":["27.0"],"并且选中不同颜色后":["27.0"],"下方方框内的颜色":["27.0"],"会根据选择变化":["27.0"],"options运行效果":["27.0"],"颜色根据选中状态变化":["27.0"],"利用到了":["27.0"],"group":["27.3"],"by":["27.3"],"option":["27.4"],"修改修改代码":["28.0"],"观察具体的运行情况":["28.0"],"class":["29.0","55.3"],"还有一种比较特殊的放置在注释中生效的表达方式":["29.0"],"if等使用方法":["29.1"],"如果您现在再仔细看下它们的使用方法":["29.1"],"但是相信我":["29.2"],"这些付出是非常有价值的":["29.2"],"rel":["30.0","32.7","36.0"],"stylesheet":["30.0","32.7","36.0"],"href":["30.0","32.7"],"style":["30.0","32.7"],"people":["30.2"],"sex":["30.3","122.3"],"具体的效果":["30.3"],"是会去除掉":["30.3"],"eac":["30.4"],"以上三种都可使用":["30.4"],"在javascript中的命名":["31.0"],"与在html对应使用时的名称":["31.0"],"peoplelist":["31.1","32.4"],"peoplelistarray":["31.1"],"作为连接符":["31.5"],"其它的两种符号":["31.5"],"另":["31.6"],"的存在":["31.6"],"可能是针对xhtml的支持":["31.6"],"注意":["31.6","67.46","87.34","88.6","89.5","103.14","105.7","135.1"],"当然是能够并列放置这些directive":["32.0"],"通过传入不同的数据来让directive展示不同的内容":["32.0"],"peopleoneinfo":["32.0"],"html":["32.1","33.2","63.36","64.48","67.7","82.0","97.2"],"中":["32.2","109.2"],"运行效果如下":["32.3"],"info":["32.4","46.3","67.42","75.3","97.6","112.6"],"注意这里绑定btn":["32.7"],"btnclick中传入的参数的命名":["32.7"],"同时":["33.0","67.18","67.56"],"我们还要加入一个新的html文档":["33.0"],"为了演示":["33.0"],"我们将新建的文档放置在和index":["33.0"],"html同一个目录":["33.0"],"命名为part":["33.0"],"id":["33.1","67.51","69.18","98.0"],"part":["33.1","33.2"],"即是这部分html代码片段的命名":["33.1"],"使用时":["33.1"],"直接使用":["33.1"],"即可":["33.1"],"这样进行封装":["33.1"],"与函数封装调用的概念类似":["33.1"],"当默认html进行展示时":["33.1"],"运行效果与上面的图片一致":["33.2"],"angularjs会自动将":["34.2"],"绑定到jquery上":["34.2"],"保证在angular":["34.3"],"js之前引入jquery":["34.3"],"controller":["34.4"],"firstctrl":["34.4"],"form":["34.4","35.0"],"鼠标移开了":["34.5"],"运行时":["34.5"],"当鼠标移动到标题上":["34.5"],"则标题文字会变化成":["34.5"],"并加上删除线效果":["34.5"],"当鼠标移开":["34.5"],"则文字会变为":["34.5"],"这段文字是放置在directive中间的":["35.0"],"标签1":["36.0"],"h4":["36.0"],"标题1":["36.0"],"这是第一个标签下的内容":["36.0"],"标签2":["36.0"],"打包后文件体积比较大":["40.1"],"普通客户端渲染加载所有所需文件的时间较长":["40.1"],"之前的生命周期":["40.2"],"因此有些第三方库会受到影响":["40.2"],"高阶组件来执行":["42.1"],"react是jsx渲染模板":["42.1"],"操作是一个非常昂贵的操作":["42.2"],"很耗费性能":["42.2"],"所以就有了虚拟dom":["42.2"],"虚拟dom是对真实dom的映射":["42.2"],"特性而无需编写类组件":["42.3"],"hooks并没有完全取代生命周期的方法":["42.3"],"但是可以在函数组件中完成类似的功能":["42.3"],"常用的hooks有":["42.3"],"usestate":["42.3","66.8"],"逻辑代码方便复用":["42.4"],"stricemode":["42.5"],"未来的":["42.6"],"react":["42.6","55.2"],"使用":["42.7","67.12","67.56","107.3","134.2"],"pushstate":["42.7","67.19"],"函数可以支持临时储存":["42.7"],"zustand":["42.7"],"jsx是js语法扩展允许在html中写js":["42.8"],"js是原生写法需要通过script标签引入":["42.8"],"的语法糖":["42.9"],"因此使用jsx可以完成的任何事情都可以通过原生js来完成":["42.9"],"something":["42.10"],"went":["42.10"],"反之就是react组件":["42.11"],"两者的区别就是":["42.12"],"fragment可以使用key":["42.12"],"当需要快速地继承已有的html表单元素或访问dom元素时":["42.13"],"可以考虑使用非受控组件":["42.13"],"然后让浏览器在下一次绘制时立即体现这些更改":["43.0"],"从而避免不必要的闪烁或布局跳动":["43.0"],"通常对性能影响较少":["43.1"],"componentdidmount":["43.2","69.24"],"componentdidupdate":["43.2"],"componentwillunmount":["43.2"],"在服务器端渲染时不会运行":["43.3"],"可能会引发警告或错误":["43.3"],"是":["44.0"],"集中式":["44.0"],"init":["44.1"],"会返回一个新的":["44.3"],"initialarg":["44.5"],"dispatch":["44.8","67.57"],"age":["44.8","53.8","78.9","89.9","89.29","113.8","122.3"],"export":["44.9","55.4"],"当点击":["44.9"],"按钮时":["44.9"],"调用dispatch":["44.9"],"编辑":["44.10"],"删除":["44.10","136.2"],"tfoot":["44.10"],"colspan":["44.10"],"总价":["44.10"],"reduce":["44.10","78.12","89.4"],"prev":["44.10"],"next":["44.10","127.3"],"shoulecomponentupdate":["45.1"],"因为标准就这么设计的的":["46.1"],"所以从结构上来说虚拟dom比真实的dom轻量很多":["46.1"],"注":["46.3"],"表示实际的标签":["46.3"],"表示标签内部的属性":["46.3"],"除去key":["46.3"],"消耗一些性能":["46.5"],"所以有可能会比html慢一点":["46.5"],"虚拟dom知识规划了一个最短路径":["46.5"],"都是根据虚拟dom画出响应平台的ui层":["46.6"],"外的功能":["47.0"],"通过熟练掌握高阶组件的概念和使用方式":["47.0"],"我们可以提高代码的可维护性和可读性":["47.0"],"构建更加强壮":["47.0"],"高效的应用程序":["47.0"],"context":["47.1","66.11","115.2"],"它接收一个上下文对象作为参数":["47.1"],"并返回上下文的当前值":["47.1"],"组件嵌套不需要一层一层props传参":["47.1"],"可以直接实现a组件传值到c组件":["47.1"],"创建方法为createcontext":["47.1"],"mycontext":["47.1"],"并且可以保存任何职":["47.2"],"类似于类的实例属性":["47.2"],"变量是决定视图图层渲染的变量":["47.2"],"需要使用usestate":["47.2"],"其它用途则使用":["47.2"],"只支持传入数字":["49.0"],"表示最大支持缓存页面个数":["49.0"],"原理":["49.0"],"组件的实现原理是将被缓存的组件实例存储到一个缓存对象中":["49.0"],"当需要重新渲染这个组件时":["49.0"],"会从缓存中获取到之前的实例":["49.0"],"并将其重新挂载在dom上":["49.0"],"的渲染看":["49.0"],"的渲染":["49.0"],"vue的渲染":["49.0"],"then":["50.0","130.1"],"如果浏览器不支持原生":["50.0"],"则使用":["50.0","51.3"],"script":["50.1"],"全局代码":["50.1"],"settimeout":["50.1"],"一次性定时器":["50.1"],"setinterval":["50.1","73.25","75.3"],"持续性定时器":["50.1"],"node中的":["50.1"],"setimmediate":["50.1","75.3"],"i":["50.1","75.3","87.27"],"o":["50.1","75.3","110.22"],"ui":["50.1"],"rendering":["50.1"],"在任务队列里没有执行":["50.2"],"所以无法拿到更新后的视图":["50.2"],"然后执行到":["50.2"],"fn":["50.2","89.4"],"添加一个异步任务":["50.2"],"internal":["50.3"],"把回调函数放入回调队列":["50.3"],"try":["50.3","63.21"],"call":["50.3","103.16","105.3","106.4"],"catch":["50.3","63.21"],"e":["50.3","110.22"],"handleerror":["50.3"],"preflushindex":["50.5"],"activepreflushcbspreflushindex":["50.5"],"清空当前活动的任务队列":["50.5"],"递归执行":["50.5"],"直到清空前置任务队列":["50.5"],"再往下执行异步更新队列任务":["50.5"],"这个方法负责执行后置任务队列":["50.5"],"activepostflushcbs":["50.5"],"保存队列中去重后的任务":["50.5"],"deduped":["50.5"],"vue2源码nexttick":["50.6"],"与":["51.1","64.9","64.10"],"引号":["51.1"],"在html":["51.1"],"attribute":["51.1"],"名称中都是不合法的":["51.1"],"例如下面的示例":["51.1"],"这会触发一个编译器警告":["51.1"],"foo":["51.1","51.5","53.4","87.4"],"bar":["51.1","53.4","105.4"],"如果需要传入动态的复杂参数":["51.1"],"推荐使用vue的":["51.1"],"计算属性":["51.1"],"当使用":["51.1"],"内嵌模版":["51.1"],"直接写在html文件里的模版":["51.1"],"需要避免在名称中使用大写字母":["51.1"],"因为浏览器会强制将其转换为小写":["51.1"],"someattr":["51.1"],"上面的例子将会在":["51.1"],"有更高的切换开销":["51.3"],"而":["51.3","74.11"],"有更高的初始渲染开销":["51.3"],"因此":["51.3","66.18","119.4"],"如果需要频繁的切换":["51.3"],"activeusers":["51.4"],"或者使用":["51.4"],"标签添加":["51.4"],"来包装":["51.4"],"元素":["51.4"],"xlink":["51.5"],"svg":["51.5"],"special":["51.5"],"修饰符也有专门缩写":["51.5"],"someproperty":["51.5"],"someobject":["51.5"],"等同于":["51.5"],"消息是":["51.6"],"enter":["51.7","69.60"],"onenter":["51.7"],"点击事件将最多触发一次":["51.7"],"对象语法":["51.7"],"mousedown":["51.7"],"mouseup":["51.7"],"监听子组件的自定义事件":["51.7"],"这两个生命周期钩子":["52.0"],"在两者之间执行":["52.0"],"所以在实际开发中":["52.0"],"deactivated":["52.1"],"缓存的组件停用时调用":["52.1"],"之一":["52.2"],"层还未更新":["52.2"],"若在":["52.2"],"中再次修改数据":["52.2"],"不会再次触发更新方法":["52.2"],"updated":["52.2"],"完成":["52.2"],"层更新":["52.2"],"update":["52.2"],"结构已经生成":["52.3"],"但如果在页面加载前完成请求":["52.3"],"则不会出现此情况":["52.3"],"建议对页面内容的改动放在":["52.3"],"组件数据更新之后":["52.4"],"组件实例卸载之前":["52.4"],"组件实例卸载之后":["52.4"],"activated":["52.4"],"keep":["52.4"],"alive":["52.4"],"缓存的组件激活时":["52.4"],"获取最新的值":["52.5"],"onbeforeunmount":["52.5"],"当组件不再被需要时":["52.5"],"将依次执行":["52.5"],"beforeunmount":["52.5"],"unmount":["52.5"],"钩子函数":["52.5"],"beforeunmount钩子函数在组件卸载之前调用":["52.5"],"通常用于处理一些事件监听器或者一些异步任务":["52.5"],"unmounted钩子函数在组件完全被卸载后调用":["52.5"],"组件可以回收内存等资源":["52.5"],"钩子会在组件卸载之前进行":["52.5"],"通常可以用来清除定时器":["52.5"],"取消事件监听器等操作":["52.5"],"定时器示例":["52.5"],"prevfoo":["53.4"],"prevcount":["53.5","73.25"],"侦听一个ref":["53.5"],"phone":["53.8"],"木鱼":["53.8"],"debugger":["53.9"],"只有在第一个await":["53.10"],"之前访问的依赖才会被追踪":["53.10"],"自动追踪所有能够访问到的响应式属性":["53.12"],"这更方便":["53.12"],"而且代码往往更加简洁":["53.12"],"import":["53.13","102.2"],"from":["53.13","55.4"],"vue":["53.13"],"stopwatch":["53.15"],"数据加载后执行某些操作":["53.16"],"时候":["54.1"],"不会影响到":["54.1"],"做了双向绑定":["54.2"],"关系如图":["54.2"],"核心是通过业务逻辑层":["54.3"],"根据指令模版替换数据":["54.4"],"以及绑定相应的更新函数":["54.4"],"将来":["54.5"],"中数据一旦发生变化":["54.5"],"会首先找到对应的":["54.5"],"walk":["54.6"],"keys":["54.6","75.1","89.2"],"对元素进行递归遍历":["54.7"],"return":["54.7","63.38","66.9","73.25","96.0","100.0","103.13","114.0","123.7","123.8"],"nodetype":["54.7"],"创建dep实例":["54.8"],"obj":["54.8"],"val":["54.8","89.4"],"observe":["54.8"],"const":["54.8","69.7","73.22","88.15"],"new":["54.8","92.0","107.1"],"object":["54.8","89.10","111.4","119.9","119.15"],"defineproperty":["54.8","89.5","89.8"],"我们发现":["55.2"],"变得始终是杯子里的内容":["55.2"],"而杯子始终是那个杯子":["55.2"],"spa图示":["55.2"],"header":["55.3"],"最后是":["55.3"],"fmp":["55.3"],"ajax请求数据之后":["55.3"],"首次有效绘制":["55.3"],"就是页面加载差不多了":["55.3"],"但是可能图片还没加载出来":["55.3"],"save":["55.4"],"dev":["55.4"],"config":["55.4"],"js中":["55.4"],"vitecompression":["55.4"],"plugins":["55.4"],"read":["57.3"],"不报错":["58.2"],"返回true":["58.2"],"使用位置":["58.2"],"我们可以通过类型守卫":["58.2"],"instanceof":["58.2"],"操作符这些":["58.2"],"来限制类型范围":["58.2"],"在操作符的加持下":["58.2"],"我们就可以使用":["58.2"],"正常运行":["58.3","88.21"],"bb":["58.3"],"cc":["58.3"],"boolean":["58.3","67.49","88.8","119.8"],"天气不错":["59.1"],"适合骑车":["59.1"],"后续持续更新":["59.2"],"不同类型相互转换有时需要强制转换":["63.1"],"而javascript只有一种类型":["63.1"],"var":["63.1","81.11","81.15","121.1"],"response":["63.3","67.51"],"处理服务器返回的数据":["63.3"],"表示请求失败":["63.4"],"客户端请求的资源没有找到或者不存在":["63.4"],"表示服务器遇到未知错误":["63.4"],"导致无法完成客户端当前请求":["63.4"],"我们也可以理解为这些函数堆栈并不在栈上分配而是在堆上分配":["63.6"],"当在一个函数内定义另外一个函数就会产生闭包":["63.6"],"如果找不到就重新计算":["63.7"],"然后更新缓存并返回值":["63.7"],"如果找到了":["63.7"],"直接返回查找到的值即可":["63.7"],"防止内存泄漏":["63.8"],"及时销毁不再使用的对象或变量":["63.8"],"尤其是大内存占用的对象":["63.8"],"避免循环引用":["63.8"],"确保对象之间的引用关系能够正确断开":["63.8"],"让父元素担当事件监听的职务":["63.9"],"事件委托的原理就是dom元素的时间冒泡":["63.9"],"oul":["63.10"],"document":["63.10","63.13","63.31"],"getelementbyid":["63.10","63.31","63.35"],"ul1":["63.10"],"onclick":["63.10"],"srcelement":["63.11"],"从里到外":["63.12"],"事件委托":["63.12"],"可以在请求头中携带cookie":["63.13"],"本地存储主要用户客户端本地保存数据":["63.13"],"供同一域名下的页面之间共享":["63.13"],"访问方式":["63.13"],"cookie":["63.13"],"通过":["63.13","67.57","74.16","87.12"],"解构赋值":["63.16"],"newjson将是被删除后的json对象":["63.16"],"对外提供公共访问方式":["63.17"],"继承":["63.17"],"提高代码复用性":["63.17"],"继承是多态的前提":["63.17"],"指向原函数的显式原型":["63.18"],"函数的":["63.18"],"this指向obj":["63.18"],"获取并发请求中的数据":["63.20"],"语句来捕获异常":["63.21"],"链接":["63.21"],"限制的最大长度是不一样的":["63.22"],"如果需要支持":["63.22"],"ie":["63.22"],"则最大长度为":["63.22"],"请求一般是做增删改操作":["63.23"],"所以必须与数据库交互":["63.23"],"等":["63.24","95.1"],"可以向文档或者文档中的元素添加事件侦听器来预定事件":["63.24"],"如果是":["63.25"],"false":["63.25","89.5"],"表示是在冒泡阶段调用事件处理程序":["63.25"],"apply函数的恶区别":["63.26"],"offsetleft":["63.28"],"还有一点需要注意":["63.28"],"拖拽的时候是绝对定位":["63.28"],"改变的是绝对定位条件下的方向的值":["63.28"],"这时":["63.30","89.5","107.1"],"会释放掉":["63.30"],"函数执行完成之后":["63.31"],"因为":["63.31","74.11","105.7"],"计数不为":["63.31"],"这样的相互引用如果大量存在就会导致内存泄漏":["63.31"],"特别是在dom对象中":["63.31"],"也容易存在这种问题":["63.31"],"element":["63.31"],"target":["63.32","69.60"],"receiver":["63.32"],"content":["63.33","64.15","64.21","64.26","64.36"],"f":["63.33","110.22","119.15"],"mypic":["63.35"],"innnerhtml":["63.35"],"img":["63.35","63.36","76.0"],"1970年1月1日":["63.37"],"以来的毫秒数":["63.37"],"因此我们可以在":["63.37"],"的原型上定义克隆的方法":["63.37"],"prototype":["63.37","89.1"],"clone":["63.37"],"this":["63.37","66.6","73.21","88.20"],"newdate":["63.37"],"fri":["63.37"],"jan":["63.37"],"01":["63.37"],"08":["63.37"],"00":["63.37","137.2"],"gmt":["63.37"],"0800":["63.37"],"对于正则对象":["63.37"],"如果字符串长度为":["63.38"],"直接返回包含该字符的数组":["63.38"],"permutations":["63.38"],"则允许互相访问":["63.40"],"也就是说":["63.40","88.10"],"javascript只能访问和操作自己域下的资源":["63.40"],"在没有明确授权的情况下":["63.41"],"不能读写对方的资源":["63.41"],"即使图片无法显示":["63.42"],"页面上也会腾出图片的空位":["63.42"],"然后继续加载后面的内容":["63.42"],"从而加载时间变快了":["63.42"],"浏览器体验也变好了":["63.42"],"指向事件对象":["63.43"],"方法排序":["63.44"],"然后与相邻的元素比较":["63.44"],"不同则存入新数组":["63.44"],"concat":["63.45"],"返回一个新数组的特性实现拷贝":["63.45"],"用扩展运算符":["63.45"],"原型式继承":["63.47"],"寄生式继承":["63.47"],"阻塞":["63.48"],"的连接方式完全不同":["63.50"],"端口也不同":["63.50"],"http是":["63.50"],"heading":["63.51"],"标签的优化":["63.51"],"alt":["63.51"],"优化":["63.51"],"懒加载对服务器前端有一定的缓解压力的作用":["63.52"],"预加载则是会增加服务器前端的压力":["63.52"],"可以把文件压缩到最小":["64.1"],"是有损压缩":["64.2"],"因此会导致图像细节的损失":["64.2"],"大":["64.3"],"不适合存储真实照片":["64.3","64.4"],"png":["64.4"],"而ie盒模型的宽高指的是":["64.5","73.2"],"内容区":["64.5","73.2"],"border":["64.7","64.15","81.15"],"缓存":["64.9","64.10"],"冲突":["64.9"],"预加载视频":["64.10"],"mark":["64.12"],"高亮显示":["64.12"],"dialog":["64.12"],"对话框":["64.12"],"必须配合open属性":["64.12"],"embed":["64.12"],"边框图像区域超出边框的量":["64.14"],"repeat":["64.14"],"图像边框是否平铺":["64.14"],"径向渐变":["64.16"],"垂直位移":["64.17"],"模糊半径":["64.17"],"阴影颜色":["64.17"],"perspective":["64.18"],"为":["64.18"],"delay":["64.19"],"count":["64.20","96.0"],"动画播放次数":["64.20"],"但代码比较多":["64.21"],"css":["64.21","64.26","69.54"],"after":["64.21"],"相对于块级元素的祖先元素定位":["64.22"],"当超过设置的阈值之后":["64.22"],"就会变成固定定位":["64.22"],"block":["64.24"],"给父元素添加伪元素":["64.25"],"弹性盒":["64.25"],"父元素":["64.25"],"父元素设置弹性盒":["64.26"],"display":["64.26","73.13"],"flex":["64.26"],"网格布局":["64.27","73.13"],"查找可以使用的标签":["64.30"],"disabled":["64.30"],"查找禁止使用的标签":["64.30"],"checked":["64.30"],"查找被选中的标签":["64.30"],"selection":["64.30"],"设置选中文本内容的高亮显示":["64.30"],"内联样式的权重":["64.31"],"包含选择器权重":["64.31"],"字体变体":["64.32"],"variant":["64.32"],"字体粗细":["64.32"],"weight":["64.32"],"文本装饰性线条的外观":["64.32"],"或者":["64.33"],"svgsprite":["64.33"],"blockquote":["64.34"],"dir":["64.34"],"frommenu":["64.34"],"可变元素":["64.34"],"根据上下文预警决定该元素为块元素还是内联元素":["64.34"],"内侧添加空白时用":["64.35"],"设置弹性盒子元素在侧轴上的对齐方式":["64.36"],"设置行对齐":["64.36"],"这样直接就是原来的px数值除以10加上em就可以":["64.38"],"缺点":["64.38","67.22","67.23"],"行为":["64.40"],"js":["64.40"],"标准模式":["64.41"],"以浏览器支持的最高标准执行":["64.41"],"混杂模式":["64.41"],"在目标元素完全接受被拖放元素时触发":["64.42"],"dragend":["64.42","71.3"],"关闭后的一些清理操作":["64.43"],"影响的主要也是":["64.43"],"图片懒加载":["64.44"],"移除一些注释内容":["64.44"],"降低关键资源的rtt次数":["64.44"],"离线缓存":["64.45"],"manifest":["64.45"],"离线数据缓存localstorage":["64.45"],"协议的作用是在两个通信应用程序之间提供保密性和数据完整性":["64.48"],"协议有两层协议组成":["64.48"],"记录协议和":["64.48"],"握手协议":["64.48"],"服务器响应请求":["64.48"],"当浏览器到web服务器建立连接后":["64.48"],"浏览器会发送一个初始的":["64.48"],"get请求":["64.48"],"请求目标通常是一个html文件":["64.48"],"服务器收到请求后":["64.48"],"将返回一个":["64.48"],"的响应报文":["64.48"],"内容包括响应头和":["64.48"],"正文":["64.48"],"get":["64.48","111.4","134.3"],"index":["64.48"],"http1":["64.48"],"浏览器解析渲染页面":["64.48"],"浏览器接收到服务端的响应之后":["64.48"],"width":["64.49"],"100px":["64.49"],"height":["64.49"],"1px":["64.49"],"难度不一":["64.50"],"css动画比":["64.50"],"js动画更简单":["64.50"],"性能方面":["64.50"],"js动画在低版本浏览器下表现并不好":["64.50"],"css动画可以做到自然降级":["64.50"],"两者相邻的外边距为一正一负时":["64.51"],"折叠结果是两者相加的和":["64.51"],"类似于redux的工作方式":["66.1","78.4"],"uselayouteffect":["66.1","78.4"],"但效果在所有dom突变后同步运行":["66.1","78.4"],"并提高了应用程序的整体性能":["66.2"],"通过使用虚拟dom":["66.2"],"react提供了一种创建动态和交互式用户界面的方法":["66.2"],"在同一个文件":["66.3"],"数据绑定不一样":["66.3"],"实现了数据双向绑定":["66.3"],"数据流动是单向的在":["66.3"],"state":["66.3","134.3"],"对象需要用":["66.3"],"uncontrolled":["66.4"],"conponent":["66.4"],"type":["66.4"],"text":["66.4"],"ref":["66.4","69.3"],"componentwillupdate":["66.6"],"已经被弃用或替换为替代方法或挂钩":["66.6"],"至于":["66.6"],"它指的是类组件的当前实例":["66.6"],"并对组件的重新渲染进行排队":["66.7"],"该函数还可以接受回调函数作为参数":["66.7"],"setvalue":["66.8"],"cleanup":["66.9"],"除了react":["66.11"],"则最好使用全局状态":["66.12"],"没有匹配的action":["66.13"],"类型":["66.13","74.5","119.6","119.7"],"或者不关心这个action的改变":["66.13"],"则":["66.13","105.7"],"在数据工程和数据科学领域被广泛应用":["66.16"],"主要区别在于它们的实现方式":["66.17"],"功能和使用方式":["66.17"],"ajax是一种基于浏览器原生功能的编程技术":["66.17"],"而fetch和axios是专门的两个库":["66.17"],"用于处理http请求":["66.17"],"并提供了更丰富的功能和更简单的api":["66.17"],"hook的调用顺序也就无法确定":["66.18"],"会导致状态更新混乱":["66.18"],"为了确保":["66.18"],"hook的正确性":["66.18"],"childcomponent":["66.19"],"批量更新实际dom":["66.20"],"根据标记的差异":["66.20"],"批量更新实际的dom结构":["66.20"],"以减少重绘和重新排版的dom开销":["66.20"],"减少了重回和重新排版的开销":["66.21"],"增加不必要的复杂性":["67.2"],"状态管理":["67.2"],"在一些复杂的应用中":["67.2"],"随着视图和数据逻辑的增加":["67.2"],"可能会涉及到复杂的状态管理问题":["67.2"],"如果不恰当地管理好状态":["67.2"],"可能会导致应用变得难以理解和维护":["67.2"],"mvvm与mvc的区别":["67.2"],"mvc":["67.2"],"是model":["67.2"],"controller的简写":["67.2"],"即模型":["67.2"],"控制器":["67.2"],"m和v指的意思和mvvm中的m和v意思一样":["67.2"],"c即controller指的是页面业务逻辑":["67.2"],"computed":["67.3","78.11"],"space":["67.4","103.11"],"空格键":["67.4"],"up":["67.4","137.2"],"down":["67.4"],"向上":["67.4"],"下":["67.4"],"左":["67.4"],"不能输出真正的":["67.7"],"与模版插值":["67.7"],"直接使用逗号分隔就可以":["67.9"],"那么会对新老节点进行对比":["67.10"],"比较两者":["67.10"],"修改时触发":["67.11"],"中使用":["67.12","76.0"],"name":["67.12","67.47","89.9","89.29","92.0","119.5","122.3"],"导航到对应路由":["67.12"],"middleware":["67.13"],"配置代理服务器的中间件":["67.13"],"javascript运行环境":["67.15"],"node":["67.15"],"js服务器端":["67.15"],"location":["67.16"],"b":["67.16","88.21"],"修改":["67.16","105.3"],"事件":["67.18"],"无需向后端发起请求":["67.18"],"浏览器可以监听哈希值的变化":["67.18"],"并按照规则加载相应的代码":["67.18"],"包括":["67.19"],"replacestate":["67.19"],"方法用于修改历史状态":["67.19"],"在hash模式下":["67.20"],"仅hash符号之前的url会被包含在请求中":["67.20"],"后端如果没有覆盖所有路由":["67.20"],"路由参数直接体现在url中":["67.22"],"用户可以直接看到传递的信息":["67.22"],"有限性":["67.22"],"查询参数式可选的":["67.23"],"因此可以选择何时传递它们":["67.23"],"查询参数不像路由参数那么直观":["67.23"],"使用查询参数":["67.24"],"非必要信息":["67.24"],"查询参数通常用于传递可选信息":["67.24"],"点击跳转":["67.27"],"font":["67.29"],"size":["67.29"],"message":["67.30"],"getitem":["67.33"],"token":["67.33","95.6"],"在某个路由独享的守卫":["67.34"],"dashboard":["67.35"],"其它路由配置":["67.35"],"beforeeach":["67.35"],"在进入每个路由前进行身份验证等操作":["67.35"],"custom":["67.36","69.54"],"directives":["67.36"],"item":["67.37","67.38"],"v":["67.38"],"key":["67.38","89.29"],"父组件中使用自定义事件来进行接收":["67.40"],"即等号前面的属性名一致":["67.40","67.41"],"等号后面的属性值可以自定义":["67.40","67.41"],"child":["67.40","67.41"],"takeoverchild":["67.40","67.41"],"msg":["67.42"],"这个效果跟上面示例的结果是一样的":["67.42"],"tip":["67.42"],"就是展示传入的内容":["67.43"],"一只吗喽":["67.44"],"敖润之子":["67.44"],"one":["67.45"],"more":["67.45"],"thing":["67.45"],"warning":["67.46","78.8","89.5","101.2","103.14","105.7"],"作用域插槽不能绑定":["67.46"],"属性":["67.46","74.11","89.10","122.3"],"因为绑定了":["67.46"],"我是萝北":["67.47"],"默认值为false":["67.49"],"deep":["67.49"],"米哦认知为false":["67.49"],"flush":["67.49","67.50"],"pre":["67.49"],"post":["67.49"],"sync":["67.49"],"默认值为pre":["67.49"],"如果源是对象":["67.50"],"强制深度遍历":["67.50"],"以便在深层级变更时触发回调":["67.50"],"吊证回调函数的刷新时机":["67.50"],"当已不再需要该侦听器时":["67.51"],"副作用清理":["67.51"],"async":["67.51"],"newid":["67.51"],"oldid":["67.51"],"oncleanup":["67.51"],"一条数据影响多条数据的时候":["67.52"],"例如搜索框":["67.52"],"是否支持异步":["67.52"],"history":["67.54"],"在":["67.54","69.13","106.0"],"router":["67.55"],"是vue3中一个重要的新增特性":["67.56"],"它提供了更灵活和可复用的组件逻辑复用方式":["67.56"],"api能够更好地组织和封装组件逻辑":["67.56"],"提高代码的可维护性":["67.56"],"它也有助于更好的利用javascript":["67.56"],"引擎的优化":["67.56"],"使得组件的性能更高效":["67.56"],"自定义渲染器和渲染优化":["67.56"],"但是通过":["67.57"],"mutations来操作":["67.57"],"触发":["67.57"],"也支持载荷":["67.57"],"pinia":["69.1"],"mitt":["69.1"],"上面代码中":["69.3","119.7"],"我们使用了":["69.3","73.20"],"函数创建了一个响应式变量count":["69.3"],"初始值为0":["69.3"],"该变量1将用于传递给子组件":["69.3"],"然后再template中":["69.3"],"将":["69.5","105.3"],"变量传递给子组件":["69.5"],"监听子组件自定义事件":["69.5"],"null":["69.7","89.6","96.0","115.4"],"来获取子组件的dom实例":["69.7"],"然后给button绑定了一个点击事件":["69.7"],"该方法用于获取子组件对外暴露的属性和方法":["69.7"],"更改父组件message":["69.9"],"上面这段代码中":["69.9"],"我们定义了一个":["69.9"],"函数":["69.9","73.15","87.12"],"它更新了来自父组件的":["69.9"],"值":["69.9"],"通过这样的设置":["69.11"],"当父组件中的":["69.11"],"或":["69.11","106.0","121.2"],"组件中":["69.13"],"当按钮被点击后":["69.13"],"我们使用":["69.13","122.3"],"emit":["69.13"],"方法触发了一个自定义事件":["69.13"],"并传递了一些数据":["69.13"],"action":["69.15"],"bind":["69.19","105.3"],"js配置时深入了解一下":["69.22"],"hooks":["69.23"],"来编写组件":["69.23"],"dom":["69.24","69.54","73.21"],"树":["69.24"],"组件挂载到":["69.24"],"snapshot":["69.25"],"更新之后立即调用":["69.25"],"通常用于执行副作用操作":["69.25"],"那么大部分生命周期方法都不再适用":["69.26"],"相反":["69.26","127.1"],"可以使用":["69.26","105.3"],"useeffect":["69.26"],"将计算逻辑和函数绑定在一起":["69.32"],"从而在依赖项不变时只计算一次":["69.32"],"react功能组件中的逻辑":["69.35"],"当滚动条位置变化时":["69.36"],"重新计算起始索引和结束索引":["69.36"],"可交互时间":["69.38"],"time":["69.38"],"interactive":["69.38"],"速度指标":["69.38"],"speed":["69.38"],"如果没有分数或得分为":["69.39"],"则很有可能是检测过程发生了错误":["69.39"],"比如网络连接状况异常等":["69.39"],"如果得分能达到":["69.39"],"通过命令行使用":["69.40"],"并且会暴露数据在url中":["69.42"],"由于本地存储是同源策略的一部分":["69.43"],"因此只能在相同源的页面之间进行通信":["69.43"],"storage更适合临时存储会话期间需要传递的数据":["69.44"],"连接":["69.47","76.0"],"可以实现双向实时通信":["69.47"],"可以采用以下方法":["69.48"],"请求":["69.49","69.50"],"且存在安全性问题":["69.49"],"并且在安全性方面比":["69.50"],"而客户端则通过与同源服务器通信来解决跨域问题":["69.52"],"通过配置":["69.53"],"在客户端和目标服务器之间建立代理":["69.53"],"可以将前端应用程序拆分为独立的自定义元素":["69.54"],"elements":["69.54"],"影子":["69.54"],"shadow":["69.54"],"模板":["69.54"],"template":["69.54"],"和样式":["69.54"],"通过使用":["69.54"],"可以实现跨框架和跨应用程序的组件复用和集成":["69.54"],"版本控制管理":["69.55"],"所有项目的代码都在同一个版本控制系统中管理":["69.55"],"可以更容易地跟踪和管理代码的变化历史":["69.55"],"这有助于保持代码的可追溯性和可维护性":["69.55"],"减少仓库管理成本":["69.55"],"相比于多个仓库":["69.55"],"可能会导致不一致的结果或不可预期的行为":["69.56"],"如果需要在组件之外的地方进行记忆化计算":["69.56"],"可以考虑将记忆化逻辑提取到一个普通的函数中":["69.56"],"placeholder":["69.60"],"your":["69.60"],"在这个例子中":["69.60"],"我们定义了一个名为":["69.60"],"的自定义":["69.60"],"它接受一个键和初始值作为参数":["69.60"],"并返回一个状态变量和一个用于更新状态变量的函数":["69.60"],"在内部":["69.60"],"该":["69.60"],"当拖动元素被放置在可放置区域内时触发":["71.3"],"用于在拖放操作之间传递数据":["71.4"],"包括拖动元素的数据和效果等":["71.4"],"处理拖动数据":["71.6"],"处理拖动过程中的位置变化等":["71.6"],"api中见不到this的使用":["71.9"],"减少了this指向不明的情况":["71.9"],"如果是小型组件":["71.9"],"d":["72.26","110.22"],"g":["72.26","110.22"],"fulfilled":["73.4","75.15"],"resolved":["73.4"],"上述示例中":["73.7","123.9"],"就是父组件传递给子组件的参数":["73.7"],"changeval":["73.9"],"我是子组件":["73.10"],"子组件无需改动":["73.11"],"用于创建灵活的布局结构":["73.13"],"grid":["73.13"],"media":["73.13"],"queries":["73.13"],"媒体查询":["73.13"],"用于根据设备特性":["73.13"],"如屏幕尺寸":["73.13"],"分辨率等":["73.13"],"从而实现流式布局":["73.14"],"固定布局":["73.14"],"使用固定单位":["73.14"],"如像素":["73.14"],"来设置元素的宽度和高度":["73.14"],"使得元素在不同设备上保持固定的大小和位置":["73.14"],"层叠布局":["73.14"],"使用定位属性":["73.14"],"适用于单行文本":["73.15"],"200px":["73.15"],"父容器高度的一半":["73.15"],"calc":["73.15"],"定时器等":["73.16"],"当宏任务执行完毕后":["73.16"],"在宏任务执行栈清空之前":["73.16"],"执行所有微任务队列中的任务":["73.16"],"当前宏任务执行栈清空后":["73.16"],"检查是否有渲染任务":["73.16"],"如果有则执行渲染":["73.16"],"在上面的示例中":["73.20"],"方法创建了一个根节点":["73.20"],"并使用":["73.20"],"tsx":["73.22"],"deferredsearchterm":["73.22"],"searchterm":["73.22"],"timeoutms":["73.22"],"提示开发者修改":["73.23"],"这些方法可能会导致意外的副作用或错误":["73.23"],"检测意外的副作用":["73.23"],"多余的重新渲染":["73.23"],"不符合预期的函数调用等":["73.23"],"检测某些过时的":["73.23"],"render":["73.24"],"clearinterval":["73.25"],"的变量":["74.2"],"返回值也是":["74.2"],"表示一个空值或者不存在的对象":["74.3"],"在实际应用中":["74.3"],"通常会将变量初始化为":["74.3"],"我们只能访问这个联合类型中所有类型中的共同成员":["74.6"],"拼接":["74.7"],"padstart":["74.7"],"strnumber":["74.7"],"indexof":["74.7"],"拼接小数部分":["74.7"],"正则表达式":["74.7"],"先行断言":["74.7"],"包裹函数组件":["74.10"],"实现性能优化":["74.10"],"memoizedcomponent":["74.10"],"在其它地方使用":["74.10"],"并没有":["74.11"],"使得每次循环迭代时都会创建一个新的":["74.12"],"变量":["74.12"],"javascript":["74.12","97.6","121.1"],"都是一个个的网格单元":["74.14"],"网格线":["74.14"],"划分网格的线":["74.14"],"称为":["74.14"],"应该注意的是":["74.14"],"当我们定义网格时":["74.14"],"我们定义的是网格轨道":["74.14"],"而不是网格线":["74.14"],"会为我们创建编号的网格线来让我们来定位每一个网格元素":["74.14"],"m":["74.14","110.22","136.2"],"列有":["74.14"],"根垂直的网格线":["74.14"],"行有":["74.14"],"声明的是一个行内元素":["74.15"],"minmax函数":["74.16"],"auto关键字":["74.16"],"由浏览器决定长度":["74.16"],"我们可以轻易实现三列或者两列布局":["74.16"],"以上代码表示将类":["74.18"],"所在的元素放在上面":["74.18"],"column":["74.19"],"对其单元格起始边缘":["74.20"],"对其单元格结束边缘":["74.20"],"每个项目两侧的间隔相等":["74.21"],"项目与项目的间隔相等":["74.21"],"项目与容器边框之间没有间隔":["74.21"],"20px":["74.22"],"50px":["74.22"],"e6ceac":["74.24"],"six":["74.24"],"ecad9e":["74.24"],"面代码中":["74.24"],"类":["74.24"],"所在的网格项目":["74.24"],"垂直网格线是从":["74.24"],"一起使用":["74.25"],"对齐单元格的起始边缘":["74.26"],"单元格起始边缘":["74.26"],"对齐单元格的结束边缘":["74.26"],"acc":["75.2","78.12"],"第一次调用":["75.2"],"第二次调用":["75.2"],"补充":["75.3"],"属于宏任务的有":["75.3"],"nodejs中使用":["75.3"],"else":["75.4","75.8","103.9","123.4","123.5"],"multipart":["75.6"],"或text":["75.6"],"control":["75.7"],"request":["75.7"],"method":["75.7"],"true":["75.8","89.18","89.28","89.31","123.10","134.1"],"other":["75.9"],"c":["75.9"],"的状态会变成":["75.11"],"并且会将第一个":["75.11"],"那么可以使用race方法":["75.13"],"如果所有的promise都是reject的":["75.14"],"那么会报一个aggregateerror的错误":["75.14"],"all":["75.14","103.14"],"都有结果":["75.15"],"settled":["75.15"],"无论是":["75.15"],"还是":["75.15"],"getlongpath":["75.16"],"path":["75.16"],"longpath":["75.16"],"遍历树结构":["75.16"],"收集用户id":["75.16"],"newpath":["75.16"],"遍历children节点":["75.16"],"继续递归收集用户id":["75.16"],"deeplongpath":["75.16"],"格式的图片包含图层信息":["76.0"],"可以展示矢量图":["76.0"],"格式的图片":["76.0"],"既可以通过":["76.0"],"标签使用":["76.0"],"也可以直接复制到":["76.0"],"gif":["76.0"],"格式的图片支持透明背景":["76.0"],"浏览器的打开网页操作":["76.0"],"可能会发生如下哪些事情":["76.0"],"且对应描述是正确的":["76.0"],"向":["76.0","105.2"],"默认端口":["76.0"],"建立":["76.0"],"tcp":["76.0"],"发送":["76.0"],"是不可以相互转换的":["78.2"],"因为它们作用的层面不同":["78.2"],"关注的是整个组件的渲染是否需要进行":["78.2"],"则关注的是组件内部某个值的计算是否需要重新执行":["78.2"],"你可以根据需要达到的优化目的":["78.2"],"在合适的地方分别使用它们":["78.2"],"计算中":["78.3"],"结果":["78.3"],"parent":["78.5"],"parentcomponent":["78.5"],"parentcount":["78.5"],"setparentcount":["78.5"],"called":["78.5"],"只需要将其挂载到头部即可":["78.6"],"经过上述处理":["78.6"],"最后还剩下新的节点就批量新增":["78.6"],"剩下的旧的节点就批量删除":["78.6"],"vue3的diff算法":["78.6"],"vue3的diff算法与vue2一样":["78.6"],"也是会先进行双端比对":["78.6"],"只是双端比对的方式不一样":["78.6"],"vue3的diff算法借鉴了字符串比对时的双端比对方式":["78.6"],"即优先处理可复用的前置元素和后置元素":["78.6"],"处理前置节点":["78.6"],"处理后置节点":["78.6"],"新节点有剩余":["78.6"],"则挂载剩余的新节点":["78.6"],"旧节点有剩余":["78.6"],"则写在剩余的旧节点":["78.6"],"乱序情况":["78.6"],"新":["78.6"],"对象和key找到对应的":["78.8"],"然后给":["78.8"],"分类分成":["78.8"],"computedrunners":["78.8"],"之后依次执行":["78.8"],"如果需要调度的":["78.8"],"直接放入调度":["78.8"],"只会代理对象的第一层":["78.8"],"那么vue3是如何处理这个问题的呢":["78.8"],"判断当前":["78.8"],"xxxx":["78.9"],"chinese":["78.9"],"不能够合并重复声明":["78.9"],"是可以的":["78.9"],"重复声明的":["78.9"],"会自动合并":["78.9"],"注重的是计算出来的值":["78.11"],"回调函数的返回值":["78.11"],"所以必须写返回值":["78.11"],"注重的是过程":["78.11"],"reducetree":["78.12"],"cur":["78.12"],"为每个节点初始化":["78.12"],"数组":["78.12","123.12"],"shadow属性高级用法":["79.0"],"transform":["81.1","81.6","81.13","81.14","81.15"],"scaley":["81.1","81.14"],"scale":["81.5","81.9","81.13"],"4s":["81.8"],"3s":["81.8","81.15"],"keyframes":["81.9","81.14","81.15"],"translate":["81.11"],"ms":["81.13","81.14","81.15"],"float":["81.14"],"solid":["81.15"],"transparent":["81.15"],"465efb":["81.15"],"rotate":["81.15"],"webkit":["81.15"],"infinite":["81.15"],"ease":["81.15"],"out":["81.15"],"与其使用":["82.0"],"你可以":["82.0"],"更好地使用css级联属性":["82.0"],"使用更具体的规则":["82.0"],"在您选择的元素之前":["82.0"],"增加一个或多个元素":["82.0"],"使选择器变得更加具体":["82.0"],"并获得更高的优先级":["82.0"],"覆盖important":["82.0"],"虽然我们应该尽量避免使用":["82.0"],"但你应该知道如何覆盖important":["82.0"],"加点权重就可以实现":["82.0"],"优先级最高":["82.0"],"但也会被权重高的important所覆盖":["82.0"],"worldhello":["87.6"],"两者都等同于":["87.12"],"将一个数组添加到另一个数组的尾部":["87.12"],"arr1":["87.12"],"arr2":["87.12"],"并且不存在由于参数不同而导致的重载":["87.14"],"它的行为非常统一":["87.14"],"undefined":["87.14","89.28","101.1","110.21"],"输出":["87.17","89.9"],"数组空位":["87.18"],"es6中对待数组空位的方式有所改变":["87.18"],"空位指的是数组中某个位置没有任何值":["87.18"],"中的第二个元素是个空位":["87.18"],"在es6之前":["87.18"],"对待数组空位的方式是跳过它们":["87.18"],"不进行任何操作":["87.18"],"propkey":["87.21"],"ig":["87.27"],"flags":["87.27","87.28"],"因为第二次匹配从上一次匹配的结束位置开始":["87.30"],"u":["87.31","119.13"],"symbol":["87.32","119.1","119.6"],"方法":["87.32","107.3"],"相当于":["87.36"],"像箭头函数":["88.0"],"模版字面量":["88.0"],"必须先进行声明":["88.2"],"否则会抛出错误":["88.2"],"is":["88.3"],"not":["88.3"],"defined":["88.3"],"first":["88.5"],"second":["88.5"],"fourth":["88.5"],"fifth":["88.5"],"sixth":["88.5"],"默认值":["88.5"],"解构赋值允许指定默认值":["88.5"],"danger":["88.6"],"如果要将一个已经声明的变量用于解构赋值":["88.6"],"需要注意不能把花括号写在行首":["88.6"],"否则会报错":["88.6"],"syntaxerror":["88.6"],"syntax":["88.6"],"error":["88.6"],"因为javascript会将":["88.6"],"理解成一个代码块":["88.6"],"从而发生语法错误":["88.6"],"正确写法应该是":["88.6"],"解构赋值允许等号左边的模式之中":["88.6"],"len":["88.7","98.0"],"参数值默认是不穿值的":["88.10"],"而是每次重新计算默认值表达式的值":["88.10"],"参数默认值是惰性求值的":["88.10"],"yield":["88.12"],"命令":["88.12"],"因此箭头函数不能用作":["88.12"],"会捕获其所在的上下文的this的值":["88.13"],"这是一个div标签":["88.14"],"templatestring":["88.14"],"sortnumbers":["88.15"],"sort":["88.15"],"参数的写法":["88.15"],"numbers":["88.15"],"result":["88.17"],"foos":["88.21"],"属性名表达式为对象":["88.21"],"keya":["88.21"],"keyb":["88.21"],"三体":["88.22"],"刘慈欣":["88.22"],"当被作为函数调用时":["89.1"],"apply":["89.1","105.3"],"thisbinding":["89.1"],"args":["89.1","119.12","119.13","119.15","119.16"],"当被用作构造函数实例化时":["89.1"],"construct":["89.1"],"fproxy":["89.1"],"y":["89.1","93.1","96.0","103.16","119.17"],"实例作为构造函数调用的操作":["89.2"],"比如new":["89.2"],"getownpropertynames":["89.2"],"getownpropertysymbols":["89.2","89.10"],"fnname":["89.4"],"window":["89.4","91.0","92.0"],"double":["89.4"],"属性会触发":["89.5"],"第四个参数":["89.5"],"就是指向原始赋值行为所在的对象":["89.5"],"如果目标对象自身的某个属性不可写":["89.5"],"那么":["89.5","96.0","105.5"],"方法将不起作用":["89.5"],"writable":["89.5"],"baz":["89.5"],"每一个":["89.7"],"对象的拦截操作":["89.7"],"删除对象的属性":["89.8"],"john":["89.9","89.29"],"方法获取对象的所有":["89.10"],"symbols":["89.10"],"map键值对是有序的":["89.12"],"插入的顺序决定了键值对的顺序":["89.12"],"中自动移除":["89.14"],"不会造成内存泄漏":["89.15"],"检查键值对":["89.16"],"报苦熬原始类型和对象":["89.17"],"因此无法迭代":["89.19"],"也无法获取其中的大小或者清空它":["89.19"],"检查值":["89.21"],"就可以完成依次迭代操作":["89.23"],"消费":["89.24"],"上面的示例中":["89.25"],"遍历器生成函数":["89.25"],"返回一个遍历器对象":["89.25"],"即指针对象":["89.25"],"但是并没有对应的数据结构":["89.25"],"或者说":["89.25"],"遍历器对象自己描述了一个数据结构出来":["89.25"],"如果使用":["89.25"],"typescript":["89.25"],"写法":["89.25"],"遍历器接口":["89.25"],"iterable":["89.25"],"对象":["89.26","121.4"],"nodelist对象":["89.26"],"不使用":["89.27"],"配合":["89.27"],"generator函数":["89.27"],"其它场合":["89.28"],"由于数组的遍历会调用遍历器接口":["89.28"],"所以任何接受数组作为参数的场合":["89.28"],"其实都调用了遍历器接口":["89.28"],"可以依次遍历":["89.30"],"createobjecturl":["90.0"],"根据文件url获取文件名":["90.0"],"网页正文全文高":["91.0"],"scrollheight":["91.0"],"网页被卷去的高":["91.0"],"网页被卷去的左":["91.0"],"网页正文部分上":["91.0"],"screentop":["91.0"],"网页正文部分左":["91.0"],"screenleft":["91.0"],"方法三":["92.0"],"获取url中的参数":["92.0"],"查询的变量名":["92.0"],"geturlparam":["92.0"],"reg":["92.0"],"regexp":["92.0"],"构造一个含有目标参数的正则表达式对象":["92.0"],"r":["92.0"],"假设syn":["93.1"],"即发送syn":["93.1"],"ack包":["93.1"],"然后服务端进入syn":["93.1"],"客户端接收到服务端的syn":["93.1"],"ack包之后":["93.1"],"接收端可能还要发送数据":["93.2"],"不能立即关闭服务器端到客户端的数据通道":["93.2"],"所以并不能将服务器端的":["93.2"],"包盒对客户端的":["93.2"],"包合并发送":["93.2"],"只能先确定":["93.2"],"然后服务器等到无需发送数据时候在发送":["93.2"],"所以四次挥手时候必须是四次数据包的交互":["93.2"],"四次挥手结束后":["93.2"],"一般资料或教程都是结合":["94.0"],"将计算机网络按照5层的模型来讲":["94.0"],"5层模型只是为了方便介绍计算机":["94.0"],"sessionid":["95.1"],"的代码":["95.2"],"新版浏览器已经可以防范":["95.2"],"反射型xss的恶意代码存在url里":["95.3"],"dom型xss跟前两种xss攻击的区别":["95.3"],"dom型xss攻击中":["95.3"],"取出和执行恶意代码由浏览器端完成":["95.3"],"向被攻击者发送跨站请求":["95.5"],"利用受害者在被攻击网站已经获取的注册凭证":["95.5"],"绕过后台的用户验证":["95.5"],"token验证csrf防御机制是公认的最适合的方案":["95.6"],"若网站同时存在xss漏洞时候":["95.6"],"都保存在":["95.7"],"cookie里":["95.7"],"的第一个参数写的是":["96.0"],"指向的是":["96.0"],"window对象":["96.0"],"接下来是":["96.0"],"bind函数也是改变this指向的":["96.0"],"但是不会立即调用":["96.0"],"这是它们的区别":["96.1"],"根据自己的实际情况来选择使用":["96.1"],"下次当请求北方送到同一个域时":["97.0"],"浏览器会使用":["97.0"],"header通过网络发送cookie":["97.0"],"trim":["97.1"],"cookieparts":["97.1"],"每个域的":["97.2"],"总数不得超过":["97.2"],"左右":["97.2"],"具体限制取决于浏览器":["97.2"],"cookie有几个选项":["97.2"],"其中很多都很重要":["97.2"],"应该设置它":["97.2"],"选项在被列在key":["97.2"],"value之后":["97.2"],"以":["97.2"],"分隔":["97.2"],"像这样":["97.2"],"通常":["97.3"],"我们应该将":["97.3"],"设置为根目录":["97.3"],"之后":["97.4","105.2"],"有cookie":["97.4"],"出于历史原因":["97.4"],"则cookie会被删除":["97.5"],"会在一小时后失效":["97.5"],"强制驼峰法命名":["98.0"],"对象字面量项尾不能有逗号":["98.0"],"逗号前后的空格":["98.0"],"逗号风格":["98.0"],"换行时在行首还是行尾":["98.0"],"循环复杂度":["98.0"],"是否允许计算后的键名什么的":["98.0"],"后面是否允许省略":["98.0"],"this别名":["98.0"],"非派生类不能调用super":["98.0"],"派生类必须调用super":["98.0"],"必须使用":["98.0"],"中的":["98.0"],"switch语句最后必须有default":["98.0"],"对象访问符的位置":["98.0"],"换行的时候在行首还是行尾":["98.0"],"避免不必要的方括号":["98.0"],"文件以单一的换行符结束":["98.0"],"必须使用全等":["98.0"],"函数表达式必须有名字":["98.0"],"函数风格":["98.0"],"规定只能使用函数声明":["98.0"],"函数表达式":["98.0"],"star":["98.0"],"生成器函数":["98.0"],"的前后空格":["98.0"],"guard":["98.0"],"in循环要用if语句过滤":["98.0"],"handle":["98.0"],"err":["98.0"],"处理错误":["98.0"],"变量名长度":["98.0"],"indent":["98.0"],"缩进风格":["98.0"],"声明时必须赋初值":["98.0"],"beforecolon":["98.0"],"aftercolon":["98.0"],"对象字面量中冒号的前后空格":["98.0"],"around":["98.0"],"comment":["98.0"],"行前":["98.0"],"行后备注":["98.0"],"depth":["98.0"],"嵌套块深度":["98.0"],"字符串最大长度":["98.0"],"callbacks":["98.0"],"回调嵌套深度":["98.0"],"params":["98.0","114.0"],"函数最多只能有3个参数":["98.0"],"statements":["98.0"],"函数内最多有几个声明":["98.0"],"cap":["98.0"],"函数名首行大写必须使用new方式调用":["98.0"],"首行小写必须用不带new方式调用":["98.0"],"new时必须加小括号":["98.0"],"newline":["98.0"],"变量声明后是否需要空一行":["98.0"],"amd是异步":["100.0"],"asynchronously":["100.0"],"简单来说":["101.1"],"简单对比":["101.2"],"的实现原理类似":["101.2"],"它们都是通过遍历数组":["101.2"],"对数组的每个元素执行特定的函数":["101.2"],"使用过程中的整理":["102.0"],"mment":["102.6"],"获取小时":["102.6"],"hours":["102.6"],"获取分钟":["102.6"],"minutes":["102.6"],"获取秒数":["102.6"],"格式化时分秒":["102.8"],"xx时xx分xx秒":["102.8"],"hh时mm分ss秒":["102.8"],"days":["102.9"],"05":["102.11"],"小时内":["102.12"],"hour":["102.12"],"下周一晚上7点49":["102.13"],"llll":["102.14"],"2019年5月24日星期五晚上7点50分":["102.14"],"endof":["102.15"],"转成时间戳":["102.15"],"否则":["103.1"],"数组索引为0的元素将被作为初始值":["103.1"],"迭代器将从第二个元素开始执行":["103.1"],"在数组中的索引的位置":["103.3"],"则为":["103.3"],"如果数组为空":["103.4"],"没有第一个值可以作为":["103.4"],"输出结果为":["103.8","103.11"],"这个方法与":["103.14"],"用例":["103.17"],"接收两个参数":["104.1"],"第一个是要执行的函数":["104.1","104.2"],"第二个是延迟的时间":["104.1"],"第二个是执行之间的时间间隔":["104.2"],"在上述示例中":["104.2"],"函数将每隔一秒执行一次":["104.2"],"累计误差":["104.3"],"由于定时器的执行会受到事件循环机制和系统资源的影响":["104.3"],"定时器的实际执行时间可能会有一些偏差":["104.3"],"方法来取消之前设置的定时器":["104.4"],"次后停止":["104.5"],"translatex":["104.6"],"px":["104.6"],"设置动画执行总时间":["104.6"],"更适合与动画":["104.7"],"因为它能够自动适应浏览器的刷新率":["104.7"],"会被绑定到该对象上":["105.1"],"在更复杂的嵌套关系中":["105.1"],"指向的是最后一个调用它的对象":["105.1"],"在箭头函数中":["105.1"],"调用":["105.2"],"是在全局":["105.2"],"中执行的":["105.2"],"所以此时的":["105.2"],"指":["105.2"],"语句输出为":["105.3"],"的处理方法":["105.3"],"指向的方法":["105.3"],"指向到o2":["105.3"],"也可以通过修改o2对象中return返回的调用方式":["105.3"],"mike":["105.4"],"基本类型":["105.5"],"仍然指向实例":["105.5"],"输出为123":["105.7"],"因为箭头函数的this无法被修改":["105.7"],"如果把上述代码中的变量a的声明换成const":["105.7"],"输出结果会被改变":["105.7"],"声明的变量是不会被放在全局作用域中":["105.7"],"它有自己的块级作用域":["105.7"],"并访问对":["106.0"],"象上的属性":["106.0"],"然而":["106.0"],"是唯一并且不可变的原始值并且可以用来作为对象属性的键":["106.1"],"如下":["106.1"],"在某些程序语言当中":["106.1"],"也被称作":["106.1"],"原子":["106.1"],"set":["106.3"],"相关联":["106.3"],"以获取或者存储值":["106.3"],"该函数使用一个空的参数列表":["106.3"],"以便有权对值执行访问时":["106.3"],"获取属性值":["106.3"],"使用包含分配值的参数调用的函数":["106.3"],"每当尝试更改指定属性时执行":["106.3"],"tostring":["106.4"],"该方法可以返回一个":["106.4"],"具体类型":["106.4"],"的格式":["106.4"],"的一个实例":["107.0"],"那么它只是一个普通的函数":["107.1"],"p1":["107.1","107.2"],"parent就不是一个普通的函数了":["107.1"],"这就是原型属性":["107.2"],"可以在上面添加原型方法":["107.2"],"那么问题来了":["107.2"],"是如何知道它的原型对象上有这个方法呢":["107.2"],"找到了上一层原型对象":["107.3"],"在这一层找到了":["107.3"],"返回该方法供":["107.3"],"当然如果直到":["107.3"],"上也没有找到":["107.3"],"这个函数就是该对象的构造函数":["107.4"],"通过例子我们可以看到":["107.4"],"的":["107.4","113.3","134.1"],"属性指向了":["107.4"],"就是":["107.4"],"的构造函数":["107.4"],"同样":["107.4"],"这个打印1":["108.0"],"这个a打印2":["108.0"],"这个a打印1":["108.0"],"我们来简单分析一下":["108.0"],"首先":["108.0"],"第一个打印项":["108.0"],"由于全局声明好了":["108.0"],"所以第一个":["108.0"],"打印就为":["108.0"],"虽然在声明变量的前边调用了函数":["108.0"],"但是通过变量的提升":["108.0"],"后面的值会覆盖前面的":["108.0"],"最后一个刚好是":["108.0"],"所以打印结果为":["108.0"],"第二个打印项打印出":["108.0"],"而需要重建的过程叫做回流":["109.1"],"head":["109.2"],"节点":["109.2"],"因为这些节点不会用于呈现":["109.2"],"而且不会影响呈现":["109.2"],"所以不再":["109.2"],"但会包括":["109.2"],"visibility":["109.2"],"hidden":["109.2","131.8"],"则不会被创建":["109.3"],"节点的子类":["109.3"],"clienttop":["109.4"],"调用了":["109.4"],"getcomputedstyle":["109.4"],"或者ie的":["109.4"],"避免多次读取部分布局属性":["109.5"],"同上":["109.5"],"将复杂的节点元素脱离文档流":["109.5"],"这样就会让多次的回流":["109.7"],"重绘变成一次回流重绘":["109.7"],"newnum":["110.4"],"newarr":["110.5"],"sum":["110.8"],"返回的是":["110.16"],"原始值转换":["110.16"],"对于原始值":["110.16"],"例如数字":["110.16"],"布尔值等基本数据类型":["110.16"],"它们有各自的":["110.16"],"元素4对应的下标为":["110.17"],"以此类推":["110.17"],"生成一个数字序列":["110.21"],"因为数组在每个位置都使用":["110.21"],"初始化":["110.21"],"下面的":["110.21"],"h":["110.22"],"j":["110.22"],"l":["110.22"],"返回":["110.23"],"存在栈中":["111.1"],"深层次的引用类型则是共享内存地址":["111.2"],"扩展运算符实现的复制":["111.3"],"可能不是对象或者普通的值":["111.4"],"如果是函数则不需要深拷贝":["111.4"],"如果是对象的话要进行深拷贝":["111.4"],"cloneobj":["111.4"],"constructor":["111.4"],"找到的是所属类原型上的":["111.4"],"而原型上的":["111.4"],"指向的是当前类的本身":["111.4"],"两个对象指向不同的地址":["111.6"],"pwa的一个基本特性就是":["112.0"],"能够明确地将一些应用程序的资源缓存在设备上":["112.0"],"通过字段":["112.2"],"服务器能够知道是否更新":["112.2"],"大部分web浏览器默认开启协商缓存":["112.2"],"关于浏览器普通刷新和强制刷新的区别":["112.2"],"强制刷新":["112.2"],"会直接从服务器获取最新资源":["112.2"],"且该结果尚未失效":["112.3"],"disk":["112.4"],"磁":["112.4"],"硬盘缓存":["112.4"],"不请求网络":["112.4"],"资源在磁盘中":["112.4"],"一般非脚本会存放在内存中":["112.4"],"css等":["112.4"],"硬盘缓存是直接将缓存写在硬盘文件中":["112.4"],"读取缓存需要对该缓存存放的硬盘文件进行i":["112.4"],"o操作":["112.4"],"然后重新解析该缓存的内容":["112.4"],"读取复杂":["112.4"],"速度比内存缓存慢":["112.4"],"memory":["112.4"],"内存缓存":["112.4"],"资源在内存中":["112.4"],"返回200和请求结果":["112.5"],"则会根据":["112.6"],"的字段值与该资源在服务器的etag值作对比":["112.6"],"两者一致时返回304":["112.6"],"继续使用缓存文件":["112.6"],"不一致则重新返回资源文件":["112.6"],"️":["112.6"],"那么代表该请求的缓存失效":["112.7"],"重新获取请求结果":["112.7"],"在存入到浏览器阿訇":["112.7"],"也可以称":["113.0"],"a是b的超类":["113.0"],"的同时":["113.1"],"也可以重新定义汽车的某些属性":["113.1"],"并重写或覆盖某些属性和方法":["113.1"],"使其获得与":["113.1"],"这个父类不停的属性和方法":["113.1"],"寄生组合式继承":["113.2"],"我们改变了":["113.3"],"会报错":["113.4","119.6"],"可以看到":["113.4"],"父类原型对象中一旦存在父类之前自己定义的方法":["113.4"],"那么子类将无法继承这些方法":["113.4"],"不互相影响":["113.5"],"s3":["113.5"],"正常输出":["113.5"],"gamer":["113.8"],"子类中存在构造函数":["113.8"],"则需要在使用":["113.8"],"之前首先调用":["113.8"],"super":["113.8"],"的语法糖和寄生组合继承的方式基本类似":["113.9"],"tmp":["114.0"],"decodeuricomponent":["114.0"],"获取":["114.0"],"参数对象":["114.0"],"parsequeryparams":["114.0"],"urlstr":["114.0"],"querystartindex":["114.0"],"节流":["115.0"],"throttle":["115.0"],"从上一次到现在":["115.2"],"还剩下多少剩余时间":["115.2"],"arguments":["115.2"],"cleartimeout":["115.2"],"以后只有事件执行后才会再次触发":["115.4"],"频率较高的事件中使用来提高性能":["115.5"],"防抖关注一定事件内连续触发的事件":["115.5"],"只在最后执行一次":["115.5"],"滚动加载":["115.6"],"加载更多或滚到底部监听":["115.6"],"数据资源":["117.0"],"运行服务器的终端叫服务器":["117.0"],"js是一门脚本语言":["117.0"],"脚本语言需要一个解析器":["117.0"],"在客户端":["117.0"],"浏览器的js引擎充当了js的解析器":["117.0"],"而在服务端":["117.0"],"充当了解析器":["117.0"],"o是阻塞形式的":["117.1"],"然而nodejs中":["117.1"],"将异步数据放在任务队列中执行":["117.1"],"从而不阻塞主线程任务的执行":["117.1"],"当异步任务执行完毕后":["117.1"],"在任务队列添加事件":["117.1"],"等待执行":["117.1"],"从而提高了效率":["117.1"],"单线程也就是同一时刻只能做同一件事情":["117.1"],"跨平台":["117.1"],"实现如下":["119.1","119.2","119.12"],"z":["119.2"],"报错":["119.2"],"遍历t的属性名":["119.3"],"对应的属性值":["119.3"],"keyof":["119.3","123.1"],"前面的":["119.4"],"的定义也可以写成下面这样":["119.4"],"可以与":["119.5"],"partial":["119.5"],"结合使用":["119.5"],"将所有属性变成只读的可选属性":["119.5"],"person":["119.5"],"string":["119.5"],"否则不能用作键名":["119.6"],"的实现如下":["119.6","119.10","119.14"],"等号右边的部分":["119.7"],"表示先判断":["119.7"],"是否兼容":["119.7"],"如果是的话就返回":["119.7"],"否则就返回当前类型":["119.7"],"由于":["119.7","119.9"],"则返回never类型":["119.8"],"number":["119.8"],"never":["119.8"],"等同于求":["119.9"],"的交叉类型":["119.9"],"typescript的非空值都是":["119.9"],"的子类型":["119.9"],"所以会返回自身":["119.9"],"returntype":["119.11"],"拿到这两个接口类型":["119.11"],"parat":["119.11"],"typeof":["119.11","123.8"],"returnt":["119.11"],"iresponse":["119.11"],"extends":["119.12","119.13"],"abstract":["119.12"],"infer":["119.13","119.15","119.16"],"t3":["119.14"],"t4":["119.14"],"onfulfilled":["119.15"],"any":["119.15","122.2"],"里面的":["119.17"],"因为根据":["119.17"],"typescript教程":["120.0"],"ruanyifeng":["120.0"],"一周只有七天":["121.0"],"颜色限定在红绿蓝等":["121.0"],"负数":["121.2"],"但后续未赋值的枚举值的步长仍为":["121.2"],"进行递增":["121.2"],"引用之前定义的常数枚举成员":["121.3"],"可以是在不同的枚举类型中定义的":["121.3"],"如果这个成员是在同一个枚举类型中定义的":["121.3"],"可以使用非限定名来引用":["121.3"],"带括号的常数枚举表达式":["121.3"],"一元运算符应用于常数枚举表达式":["121.3"],"二元运算符":["121.3"],"常数枚举表达式做为其一个操作对象":["121.3"],"来声明":["121.4"],"编译结果差异":["121.4"],"在编译时会被删除":["121.4"],"在编译时会生成真实的":["121.4"],"同时在运行时也会存在对应的对象实体":["121.4"],"使用场景差异":["121.4"],"编译结果":["121.5"],"特点":["122.1"],"不是事先定义好类型":["122.1"],"anyarr":["122.2"],"obj1":["122.3"],"张三":["122.3"],"obj2":["122.3"],"男":["122.3"],"obj3":["122.3"],"正常编译":["122.3"],"ts编译报错":["122.3"],"obj3缺少来自obj2的":["122.3"],"两个类型字段":["122.3"],"并且指定":["122.3"],"继承自":["122.3"],"这样就保证了":["122.3"],"unknown":["122.4"],"使用交叉类型混入":["123.1"],"mixin":["123.1"],"类型的含义是遍历传入的泛型":["123.1"],"的所有属性":["123.1"],"并且把它们联合":["123.1"],"产生新的类型对象":["123.1"],"新的类型对象上每个属性的类型是它们在原本类型上的属性":["123.1"],"是泛型类的写法":["123.1"],"另一种写法":["123.1"],"layeggs":["123.2"],"fish":["123.2"],"swim":["123.2"],"getsmallpet":["123.2"],"以便在后续的代码中使用更具体的类型信息":["123.3"],"类型守卫通常有以下几种方式":["123.3"],"之后调用":["123.4"],"类型的方法":["123.4"],"判断体的逻辑是将":["123.5"],"推断为属于":["123.5"],"类型定义的操作函数":["123.6"],"else判断体中是将":["123.6"],"类型推断为":["123.6"],"swom":["123.7"],"合法":["123.9"],"类型别名":["123.9"],"cat":["123.10"],"animal":["123.10"],"purrs":["123.10"],"因为软件中的对象应该对于扩展是开放的":["123.10"],"但是对于修改是封闭的":["123.10"],"类型没有substr方法":["123.11"],"元组类型在需要固定长度和类型的数组场景下非常有用":["123.11"],"例如表示一对坐标":["123.11"],"表示函数返回多个不同类型的值等":["123.11"],"通过使用元组类型":["123.11"],"但它不是结果":["123.12"],"它是一个类型":["123.12"],"类型中传入了泛型":["123.12"],"是继承于":["123.12"],"或者说arr的类型范围限制在了":["123.12"],"第三方可以选择根据这个凭据获取相关信息":["125.0"],"识别成功":["125.0"],"示例代码":["125.0"],"请求进行基于生物识别的人脸核身":["125.0"],"idcard":["125.0"],"每个元素都包含一个指向下一个元素的引用":["127.1"],"数组操作":["127.2"],"要转换一个循环链表":["127.5"],"你开始于任意一个节点然后沿着列表的任一方向直到返回开始的节点":["127.5"],"再来看另一种方法":["127.5"],"循环链表可以被视为":["127.5"],"无头无尾":["127.5"],"这种列表很利于节约数据存储缓存":["127.5"],"如果链表中有很多节点":["127.6"],"删除头部节点":["127.6"],"deletehead":["127.6"],"uf":["127.6"],"htis":["127.6"],"doublylinklistnode":["127.6"],"将链表转换为数组":["127.6"],"toarray":["127.6"],"nodes":["127.6"],"splitchunks进行了重新设计":["129.0"],"提供了灵活的选项":["129.0"],"是的代码分割更为强大和易用":["129.0"],"默认配置优化":["129.0"],"默认配置中的一些优化":["129.0"],"使得开箱即用的性能更好":["129.0"],"提高构建性能":["129.0"],"condition":["130.1"],"kind":["130.2"],"代码生成":["130.3"],"将上一步处理好的内容":["130.3"],"转化为新的代码":["130.3"],"表达式":["130.4"],"等等":["130.4"],"语法分析程序":["130.4"],"判断源程序在结构上是否正确":["130.4"],"其作用是将上一步生成的":["130.4"],"减少体积":["131.1"],"多个文件合并":["131.1"],"减少http请求数":["131.1"],"map就是为了解决这个问题才出现的":["131.2"],"不包含原始代码的列信息":["131.4"],"如果包含cheap关键字":["131.4"],"则产生的":["131.4"],"map文件不包含列信息":["131.4"],"也就是说当你在浏览器中点击该代码的位置":["131.4"],"光标只定位到行数":["131.4"],"而不包含具体字符位置":["131.4"],"也不包含loaders的sourcemap":["131.4"],"如果你使用了babel等代码编译工具":["131.4"],"定位到的代码将是经过编译的代码位置":["131.4"],"而不是原始代码":["131.4"],"存在问题":["131.5"],"错误信息只会定义行":["131.5"],"不会定义列":["131.5"],"降低文件精度":["131.5"],"换取文件内容的缩小":["131.5"],"对于经过babel转化后的代码而言":["131.5"],"只能定义到转换后的代码的错误":["131.5"],"不是很利于定位具体项目中的位置":["131.5"],"针对cheap存在的问题":["131.5"],"引出下面的关键字":["131.5"],"但对于":["131.7"],"nosources":["131.8"],"无源代码内容":["131.8"],"另一方面又不会给bundle文件提供注释":["131.9"],"以避免浏览器使用":["131.9"],"unocss英文官网":["133.1"],"中文官网":["133.1"],"更改应用得很干净的路径都会被更新":["134.1"],"对于冲突的路径":["134.1"],"索引文件最多记录三个版本":["134.1"],"如gitmerge":["134.1"],"merge":["134.1"],"而无需进行复杂的合并操作":["134.2"],"同步独立更改":["134.2"],"即使在不同的开发路径上":["134.2"],"也可能存在独立的":["134.2"],"可以通用的代码的更改":["134.2"],"abort":["134.3"],"and":["134.3","135.1"],"back":["134.3"],"before":["134.3"],"打开冲突文件":["134.3"],"手动编辑以解决冲突":["134.3"],"保存修改后":["134.3"],"conflicted":["134.3"],"对所有冲突文件重复上述操作":["134.3"],"gpg":["135.1"],"在页面里添加":["135.1"],"添加成功之后":["135.1"],"在git里输入命令":["135.1"],"com":["135.1"],"验证是否连接成功":["135.1"],"如果提示成功":["135.1"],"那么就可以把自己github远程仓库的代码clone到本地了":["135.1"],"fork别人的github项目":["135.1"],"然后clone项目到本地":["135.1"],"需要手动解决":["136.1"],"下面我们来详细了解一下":["136.1"],"oldbranch":["136.2"],"newbranch":["136.2"],"重命名本地分支":["136.2"],"重命名远程分支":["136.2"],"删除远程待修改分支":["136.2"],"push本地新分支到远程服务器":["136.2"],"git中一些选项解释":["136.2"],"delete":["136.2"],"如图":["136.3"],"image":["136.3"],"可以看到返回的信息包括更新的文件名":["136.3"],"更新的作者和时间":["136.3"],"以及更新的代码":["136.3"],"19行红色":["136.3"],"本地分支名":["136.4"],"如果远程分支是与当前分支合并":["136.4"],"则冒号后面的部分可以省略":["136.4"],"compression":["137.2"],"using":["137.2"],"threads":["137.2"],"writing":["137.2"],"bytes":["137.2"],"kib":["137.2"],"s":["137.2"],"powered":["137.2"],"现在是重点":["137.3"],"之前的rebase其实只是完成了一半":["137.3"],"由于出现冲突而终止":["137.3"],"现在冲突解决":["137.3"],"可以通过":["137.3"],"继续完成之前的rebase操作":["137.3"],"rebase完成":["137.3"],"再查看一下提交历史":["137.3"],"b2593e6":["137.3"],"提交记录已经是一条完美的直线":["137.3"],"现在切换到主分支master":["137.3"],"将feather分支上的提交合并过来":["137.3"],"我们的改动应该就是增加或者删除":["138.0"],"给别人看开发过程的增量反而太乱":["138.0"],"不要通过rebase对任何已经提交到公共仓库中的commit进行修改":["138.1"],"个人分支除外":["138.1"],"feat":["138.2"],"test":["138.2"],"第一次提交":["138.2"],"第二次提交":["138.2"],"第三次提交":["138.2"],"编辑后":["138.2"],"输入wq保存退出":["138.2"],"会得到如下页面":["138.2"],"保存当前的更改":["139.1"],"然后在不同的分支之间应用更改":["139.1"],"也要可以的":["139.3"],"e695606":["139.4"],"which":["139.4"],"version":["139.4"],"比如应用并删除第二个":["139.8"],"add":["139.10"],"加到git版本控制中":["139.10"],"然后再":["139.10"]},{"0":["14.4","24.1","89.10","90.0","97.5","110.21","115.2","121.5","123.4"],"1":["14.4","25.3","54.7","89.7","89.13","102.12","121.5","137.3","139.5","139.7","139.8"],"2":["14.4","21.0","74.14","87.9","89.4","92.0","121.5"],"3":["14.4","22.1","22.2","54.7","75.6","89.4","121.5"],"4":["14.4","63.8","73.16","74.14","75.5","87.13","103.13"],"5":["14.4","32.1","63.8","64.49","73.22","74.16","88.7","102.8","134.1"],"6":["23.0","32.3","63.47","64.27","78.6","88.11","88.17","103.6","134.3"],"7":["14.4","32.5","63.51","78.6","134.3"],"8":["32.6","73.14","110.2"],"9":["87.13","89.6"],"10":["25.2","25.3","33.0","58.2","89.6","103.17","110.2"],"11":["9.0","26.1"],"12":["9.0","26.1","34.4","103.13"],"13":["26.1","34.5"],"14":["26.1","35.0","97.2"],"15":["26.1","35.0","110.8"],"16":["26.2","36.0","103.17"],"17":["26.5"],"18":["78.9"],"19":["97.2","102.7"],"20":["27.2","102.6","102.7","113.8"],"21":["27.3","102.7"],"22":["27.4"],"25":["89.9","110.23"],"26":["53.8","88.23"],"28":["88.23"],"30":["89.6"],"38":["89.6"],"40":["81.8"],"42":["44.8"],"46":["14.2"],"49":["110.23"],"61":["130.2"],"62":["130.2"],"66":["110.19"],"67":["130.2"],"75":["89.7"],"80":["63.50","81.8"],"81":["103.17","110.23"],"99":["87.9"],"100":["88.10"],"101":["88.10"],"111":["63.37"],"123":["51.7"],"179":["81.2"],"240":["103.17"],"256":["103.17"],"443":["63.50"],"503":["63.4"],"1111":["110.13"],"2000":["104.6"],"2038":["97.2"],"5000":["104.5"],"1234567":["53.8"],"else":["2.0","7.0","8.0","67.35","75.16","115.2","115.4","123.6","123.8"],"console":["2.0","63.38","75.5"],"log":["2.0","63.38","75.5","103.7","103.13"],"利用":["3.0","113.8"],"方法":["3.0","89.6"],"获取存储的差值类型的key":["3.0"],"下标":["3.0"],"然后与当遍历的次数k一起返回":["3.0"],"slow":["4.0"],"while":["4.0"],"return":["4.0","6.0","10.0","11.0","50.3","54.8","66.13","75.4","90.0","95.4","122.5"],"len":["5.0"],"continue":["5.0"],"更新最长递减序列的信息":["6.0"],"if":["6.0","54.8","58.2","92.0","114.0"],"slice":["6.0","114.0"],"mid":["7.0"],"hharry":["12.1"],"link":["12.3","13.0"],"把directive变为一个容器":["12.3","13.0"],"transclude":["12.3","13.0"],"directive之间互相通讯":["12.3","13.0"],"一个下午就可掌握javascript的基本语法和用法":["12.4"],"同时也可能学会php的语法":["12.4"],"京东特价优惠时我购买了几十本与javascript相关的书籍":["12.4"],"这本是我认为最靠谱的入门书":["12.4"],"再通过api请求获取数据":["12.5"],"幸运的是":["12.6"],"angularjs推荐这么做":["12.6"],"至少对我而言是如此":["12.7"],"从今天来看":["12.8"],"我的做法完全不符合angularjs的最佳实践":["12.8"],"虽然我未在网站中使用jquery等类库":["12.8"],"但是我也同样没有使用angularjs推荐使用的directive方式":["12.8"],"完全没有使用":["12.8"],"这也是我准备在更深入的学习angularjs和重新构建网站的第二版的主要原因":["12.8"],"不管怎么说":["12.8"],"我把东西做出来了":["12.8"],"而且整个网站是可用的":["12.8"],"从程序结构上也是可维护和修改的":["12.8"],"请通过邮件或微信联系我":["12.9"],"联系地址在此页面上方":["12.9"],"我放弃了在新版本的网站中应用angular":["12.10"],"2技术":["12.10"],"而选择继续使用angularjs":["12.10"],"x":["12.10"],"visit":["12.11"],"让directive动起来":["13.0"],"因此":["14.0","31.6","66.20","88.6","119.7"],"您在学习本书的过程中":["14.0"],"并不需要花费购买任何软件":["14.0"],"另":["14.1"],"使用哪种编辑器更多的是个人的偏好":["14.1"],"如果您有其它喜欢的编辑器":["14.1"],"可以自行选择":["14.1"],"v":["14.2","14.4","110.21","110.22","119.15"],"推荐安装较新的稳定版本":["14.3"],"或者更高":["14.4"],"下面我们将一步一步的完善整个项目的结构":["15.0"],"目录中呢":["15.1"],"通过git版本控制的方式来保证项目代码的完整性和安全性":["15.2"],"具体的git的操作方法就不在本文中叙述了":["15.2"],"如果您不希望bower配置文件这么复杂":["15.5"],"那么可以手工最简化的创建":["15.5"],"最简化bower":["15.5"],"只需要一个":["15.5"],"字段即可让bower好好工作了":["15.5"],"目录中":["15.6"],"bower配置完成后":["15.7"],"如下所示":["16.1"],"name":["16.1","44.8","69.18"],"learning":["16.1"],"angularjs":["16.1"],"dependencies":["16.1"],"同时":["16.1","69.11"],"项目中会多出":["16.1"],"目录":["16.1"],"所有的angularjs的文件都在这个目录中存放":["16.1"],"图3":["16.1"],"安装好angularjs后的目录结构":["16.1"],"标明此网站是简体中文的":["16.2"],"同时调整了":["16.2"],"html的基础并不属于本书的范围":["16.2"],"因此不在此细述":["16.2"],"推荐所有的javascript文件都放在body部分引入":["16.3"],"学习它":["16.5"],"理解它":["16.5"],"使用它":["16.5"],"angular":["17.0","69.54"],"material":["17.0"],"案例实践":["17.0"],"登陆":["17.0"],"注册":["17.0"],"权限控制":["17.0"],"如果此处输出的是javascript中的变量":["18.0"],"此处的显示会":["18.0"],"自动":["18.0"],"的随javascript变量的变化而变化":["18.0"],"src":["19.1"],"这些用法的效果都是一样的":["19.1"],"part":["19.3"],"再引用入html页面即可":["20.0"],"这里我们将app":["20.1"],"js引入了进来":["20.1"],"以上代码有两个问题需要注意":["20.1"],"这也是angularjs的核心特性之一":["20.2"],"它让我们的javascript代码有了作用域的概念":["20.2"],"降低了代码之间不期望的一些互相影响":["20.2"],"这个特性我们在后面会大量的使用":["20.2"],"将网页分为多个部分":["20.2"],"并分别交于不同的javascript代码进行管理":["20.2"],"各个部分之间互相独立":["20.2"],"这样即可在网页中实现逻辑复杂的功能":["20.2"],"刷新页面":["21.0"],"我们可以看到运行的效果":["21.0"],"图4":["21.0","22.1","22.2","25.3","26.1","26.2","26.5","27.2","27.3","27.4"],"controller运行结果":["21.0","22.0"],"下面":["21.0","27.0"],"我们再来分析下":["21.0"],"的具体形式":["21.0"],"data":["21.2","63.3","66.3","67.51"],"message":["21.2"],"hello":["21.2","74.10"],"onclick":["21.3","73.9"],"函数传入":["21.3"],"之后":["21.3"],"可在html页面中调用这个功能":["21.3"],"实现比如按钮点击触发功能的效果":["21.3"],"在使用angularjs的时候":["21.5"],"养成数据二次封装的习惯":["21.5"],"可以避免很多这样的问题":["21.5"],"如果您实际运行代码":["22.0"],"会发现":["22.0","113.3"],"您每输入":["22.0"],"删除一个文字":["22.0"],"改动会马上在上方显示出来":["22.0"],"这就是数据绑定的魅力":["22.0"],"函数中的逻辑":["22.1"],"click运行结果":["22.1","22.2"],"运行效果如下":["22.2"],"if为假时界面":["23.0"],"从上面的例子可以看出":["23.0"],"如果复选框打勾":["23.0"],"则界面只显示了前两行文字":["23.0"],"而取消复选框的打勾":["23.0"],"则显示了最后的一行文字":["23.0"],"这个特性可以用于展示界面上的某些信息或者按钮":["23.0"],"与":["23.2","58.3"],"将参数包裹起来的":["23.2"],"直接将其所在的":["24.0"],"元素根据":["24.0"],"的长度复制了3次":["24.0"],"并将相应的数据填充了进去":["24.0"],"这样":["24.1","32.2"],"我们就可以明确的知道用户点击了哪一行了":["24.1"],"另外":["24.1"],"值得注意的是":["24.1"],"是从":["24.1"],"开始计算的哟":["24.1"],"limitto":["25.0"],"limit":["25.0"],"begin":["25.0"],"截取array从begin位置开始的limit个元素":["25.0"],"expression":["25.0","95.2"],"reverse":["25.0","89.4"],"根据expression的条件对list进行排序":["25.0"],"reverse可选":["25.0"],"设置为true则反过来排":["25.0"],"tom":["25.1"],"自定义filter的运行效果":["25.2"],"如果您期望界面显示的内容进行一些通用的处理":["25.2"],"但是又不希望对原本的数据进行改动":["25.2"],"那么可以考虑自己制作过滤器":["25.2"],"如果我们在输入框中输入t":["25.3"],"则列表中只会显示包含t的项目":["25.3"],"filter用于搜索":["25.3"],"运行效果":["26.1","27.2","33.0","36.0"],"未选中时效果":["26.1"],"ngclass运行效果":["26.1","26.2"],"选中第一个的效果":["26.1"],"选中第二个的效果":["26.1"],"选中第三个的效果":["26.1"],"全部选中的效果":["26.1"],"使用文本作为样式":["26.2"],"请读者自行测试效果":["26.3"],"运行之后":["26.4"],"点击上面的按钮":["26.4"],"则文字放大变红":["26.4"],"点击第二个按钮":["26.4"],"则文本变回原来的样子":["26.4"],"由于动画效果无法通过截图表示":["26.4"],"还请读者自行测试":["26.4"],"pre":["26.5"],"当前样式为":["26.5"],"运行效果为":["26.5"],"style运行效果":["26.5"],"在下一节中":["26.5"],"我们还将看到约束为只设置背景颜色的示例":["26.5"],"的特性":["27.0"],"我们将仔细讲解":["27.0"],"中的语法":["27.0"],"用于显示在下拉框中的名称":["27.0"],"类似于ng":["27.0"],"repeat中的用法":["27.0"],"将colors遍历":["27.0"],"每次遍历的对象命名为color":["27.0"],"options加上空选项":["27.1"],"in":["27.2","111.4","119.2","119.6","139.4"],"options加上group":["27.2"],"可以看到":["27.3","32.6","138.2"],"图中的":["27.3"],"和":["27.3","30.1","44.10","46.3","119.9","134.1"],"变为了不可选择的状态":["27.3"],"options加上disable":["27.3"],"br":["27.4"],"当前选中的国家":["27.4"],"运行结果":["27.4","30.0","32.7","35.0"],"请注意列表中显示的值和选中时变量的值的关系":["27.4"],"options传入object作为数据":["27.4"],"但是我目前没有理解其实现意义":["29.0"],"就不在这里介绍了":["29.0"],"如果我们预先定义好了针对这些标签的处理方式":["29.0"],"那么angularjs将可以把这些标签自动的转化成html显示代码":["29.0"],"就会发现它们无一例外的都是directive":["29.1"],"注意这里只加入了一个people的标签":["30.0"],"图5":["30.0","32.1","32.3","32.5","32.6","32.7","33.0","34.4","34.5","35.0","36.0"],"directive运行效果":["30.0"],"这个对象中有两个元素":["30.1"],"中间加入了template中的内容":["30.2"],"这对标签":["30.3"],"如果在restrict中设定了使用方法":["30.4"],"而在html代码中却未按照对应的方法使用":["30.4"],"那么代码将不会生效":["30.4"],"不一样":["31.0"],"然后合并起来":["31.4"],"peoplelistarray":["31.4"],"只是因为历史原因提供了支持":["31.5"],"但是并不推荐使用":["31.5"],"因为有这个条件存在":["31.6"],"请不要给你的directive起data开头的名字":["31.6"],"peopletwoinfo":["32.0"],"这样的功能":["32.0"],"可以通过配置directive的":["32.0"],"scope":["32.0"],"定义实现":["32.0"],"在html代码里":["32.1"],"我们为div元素配置了一个people的属性和一个info属性":["32.1"],"并将firstctrl的":["32.1"],"harry传入给了info":["32.1"],"最终的显示效果如下":["32.1"],"传入数据的directive":["32.1"],"我们就达到了存储数据的效果":["32.2"],"在一个控制器中多个directive":["32.3"],"实现的效果与上一张图片一样":["32.4"],"具体的页面html代码会有差异":["32.4"],"请您自行测试查看":["32.4"],"刷新界面后":["32.5"],"我们可以在输入框中尝试修改":["32.5"],"效果如下":["32.5"],"在directive中修改数据":["32.5"],"在directive中传入字符串":["32.6"],"我们在directive中传入的数据进行的数据修改":["32.6"],"并未反馈到firstctrl中":["32.6"],"form":["32.7","51.1","89.28"],"btn":["32.7"],"在directive中传入函数和数据回传":["32.7"],"p":["33.0","73.25","110.22","119.2","119.6","119.11","119.12"],"这里是part":["33.0"],"html中的内容":["33.0"],"templateurl的使用":["33.0"],"是不会显示这段代码的":["33.1"],"而通过":["33.1"],"调用后":["33.1"],"又可以直接展示出来":["33.1"],"注意":["33.1","88.5"],"通过示例我们可以看到":["33.1"],"文档中的":["33.1"],"的优先级高于独立的html文件":["33.1"],"就不重复展示了":["33.2"],"在这里":["34.0","138.2"],"我们最主要的是观察最下方的":["34.0"],"部分":["34.0","136.3"],"我们可以看到":["34.0"],"在这个directive元素中传入的数据":["34.0"],"都可以通过":["34.0"],"获取到":["34.0"],"这也是我们在":["34.0"],"中获取数据的主要方法":["34.0"],"会自动使用jquery来解析界面元素":["34.2"],"我们获取的":["34.2"],"会自动变为jquery对象":["34.2"],"element的使用":["34.4","34.5"],"因为主要是jquery的用法":["34.5"],"更多的实际应用就不在本书中详述了":["34.5"],"如果有兴趣学习jquery":["34.5"],"您可以通过上网搜索或者购买书籍的方式来学习":["34.5"],"transclude的使用":["35.0"],"查看html代码如下":["35.0"],"transclude的效果html":["35.0"],"标题2":["36.0"],"这是第二个标签下的内容":["36.0"],"这里为了将文件整理在一起":["36.0"],"使用了ng":["36.0"],"template的方式":["36.0"],"当点击":["36.0"],"或":["36.0","87.34","121.3"],"时":["36.0","75.15","109.4","135.1"],"下方会自动展示对应的内容":["36.0"],"directive之间通讯":["36.0"],"angular仓库":["38.0"],"首页就会有一个很长的加载时间":["40.1"],"vue是通过拓展html语法进行渲染":["42.1"],"react通过新旧dom的对比得到需要更新的部分dom":["42.2"],"实现数据的增量更新":["42.2"],"useeffect":["42.3"],"usecontext":["42.3"],"等":["42.3","69.54"],"document":["42.5","73.24"],"getelementbyid":["42.5","73.24"],"root":["42.5","73.24"],"版本将添加更多的额外功能":["42.6"],"轻量级状态管理包":["42.7"],"不到1kb":["42.7"],"wrong":["42.10"],"export":["42.10","67.35","67.55","73.25","74.10","123.1"],"default":["42.10","67.35","67.55","73.25","74.10"],"但是空标签不可以":["42.12"],"适用于简单的表单场景或需要直接操作dom元素的值得情况":["42.13"],"因为他不会阻塞浏览器渲染":["43.1"],"的同步行为":["43.2"],"管理状态的":["44.0"],"xxx":["44.8"],"使":["44.9"],"增加":["44.9"],"减少":["44.9","63.42"],"组件使用usereducer来管理":["44.10"],"状态":["44.10","73.4"],"它从":["44.10"],"初始化":["44.10"],"并通过":["44.10"],"分发动作来改变商品列表":["44.10"],"商品列表通过":["44.10"],"渲染":["44.10","64.45"],"每个商品显示以下信息":["44.10"],"如果该商品的isedit为true":["44.10"],"显示一个输入框用于需改名称":["44.10"],"否则显示商品名称":["44.10"],"显示商品的总价":["44.10"],"显示商品的数量":["44.10"],"提供":["44.10"],"按钮来减少或增加数量":["44.10"],"按钮切换名称的编辑状态":["44.10"],"按钮可以删除该商品":["44.10"],"tfoot部分显示购物车的总价":["44.10"],"通过reduce方法计算所有商品的总价":["44.10"],"conponentdidupdate":["45.1"],"卸载子组件":["45.1"],"componentwillunmount":["45.1"],"ref":["46.3","53.5"],"会形成单独的key名":["46.3"],"表示节点内容":["46.3"],"依次循环":["46.3"],"但是还是得真是的dom去走":["46.5"],"只不过不同平台的画法不太一样":["46.6"],"在实际项目中":["47.0"],"我们可能会遇到各种高阶组件的应用场景":["47.0"],"因此掌握高阶组件的使用方法对于":["47.0"],"react开发来说至关重要":["47.0"],"mycomponent":["47.1","51.7"],"value":["47.1","114.0","119.15","130.2"],"useref特性":["47.2"],"可变的":["47.2"],"持久化":["47.2"],"的渲染是从图中":["49.0"],"render":["49.0"],"阶段开始的":["49.0"],"但keep":["49.0"],"alive的渲染是在patch阶段":["49.0"],"构建组件树":["49.0"],"虚拟dom树":["49.0"],"并将":["49.0"],"vnode":["49.0"],"转换成真正":["49.0"],"dom":["49.0","51.5","64.48","117.0"],"节点的过程":["49.0"],"首次加载被包裹组件时":["49.0"],"componentinstance":["49.0"],"的值是":["49.0"],"undefined":["49.0","87.18","88.9","89.7","89.31","107.3"],"因为":["49.0","113.6"],"组件作为父组件":["49.0"],"它的render函数会优先于被包裹的组件先执行":["49.0"],"后面逻辑不执行":["49.0"],"再次访问被包裹组件时":["49.0"],"的值就是已经缓存的组件的实例":["49.0"],"之后会把上一次的dom插入到父元素中":["49.0"],"alive组件渲染流程":["49.0"],"来模拟":["50.0"],"的行为":["50.0"],"并在回调函数执行前添加一个空的定时器来强制推迟执行":["50.0"],"的交互事件":["50.1"],"promise":["50.1","89.28"],"then":["50.1"],"回调":["50.1"],"mutaionobserver":["50.1"],"nexttick":["50.1","75.3"],"async":["50.1","75.3"],"await":["50.1","67.51","75.3"],"这时的任务队列可以简单理解成这样":["50.2"],"然后同步任务就执行完了":["50.2"],"接着按顺序执行任务队列里的任务":["50.2"],"第一个任务执行就会更新视图":["50.2"],"后面自然而然地就得到更新后的视图了":["50.2"],"如果异步开关是开的":["50.3"],"就关闭":["50.3"],"表示正在执行回调函数":["50.3"],"然后执行回调函数":["50.3"],"如果没有提供回调":["50.3"],"并支持promise":["50.3"],"那么就返回promise":["50.3"],"这里的":["50.3","123.1"],"是让我们在不穿参数的情况下使用的":["50.3"],"具体使用":["50.3"],"sflow":["50.3"],"disable":["50.3"],"time":["50.3"],"如果当店已经有活动的队列":["50.5"],"就添加到执行队列的末尾":["50.5"],"并返回":["50.5"],"赋值为当前活动队列":["50.5"],"排列队列":["50.5"],"postflushindex":["50.5"],"activepostflushcbspostflushindex":["50.5"],"vue3源码nexttick":["50.6"],"的内嵌模版中转换为":["51.1"],"如果组件中拥有":["51.1"],"属性而非":["51.1"],"这段代码将不会工作":["51.1"],"但文件内的模版不受此限制":["51.1"],"修饰符":["51.1"],"modifiers":["51.1"],"修饰符是以点开头的特殊后缀":["51.1"],"表明指令需要以一些特殊的方式被绑定":["51.1"],"prevent":["51.1"],"修饰符会告知":["51.1"],"指令对触发的事件调用":["51.1"],"event":["51.1","67.49"],"preventdefault":["51.1"],"submit":["51.1"],"onsubmit":["51.1"],"较好":["51.3"],"如果在运行时绑定条件很少改变":["51.3"],"则":["51.3"],"更合适":["51.3"],"当在":["51.5"],"内模板使用":["51.5"],"可以驼峰化":["51.5"],"的名称":["51.5"],"例如":["51.5"],"viewbox":["51.5"],"view":["51.5"],"box":["51.5"],"当子组件的":["51.7"],"my":["51.7"],"被触发":["51.7"],"处理函数将被调用":["51.7"],"handlethis":["51.7"],"我们可以简单地把":["52.0"],"理解为":["52.0"],"来使用":["52.0"],"errorcaptured":["52.1","52.4"],"捕获一个来自子孙组件的错误时被调用":["52.1","52.4"],"vue2生命周期":["52.1"],"会再次触发更新方法":["52.2"],"beforedestroy":["52.2"],"实例被销毁前调用":["52.2"],"此时实例属性与方法仍可访问":["52.2"],"destroyed":["52.2"],"完全销毁一个实例":["52.2"],"可清理它与其它实例的连接":["52.2"],"接棒它的全部指令以及事件监听器":["52.2"],"并不能清除dom":["52.2"],"仅仅销毁实例":["52.2"],"生命周期当中":["52.3"],"deactivated":["52.4"],"缓存的组件停用时调用":["52.4"],"vue生命周期":["52.4"],"starttimer":["52.5"],"开始":["52.5"],"stoptimer":["52.5"],"停止":["52.5"],"onunmount":["52.5"],"钩子函数会在组件卸载后运行":["52.5"],"通常用于清理一些资源或取消订阅":["52.5"],"unsubscribe":["52.5"],"取消订阅":["52.5"],"prevbar":["53.4"],"但":["53.12"],"有时其响应性依赖关系会不那么明确":["53.12"],"在vue":["53.13"],"更新后执行":["53.13"],"双向绑定关系":["54.2"],"来进行关联数据与视图":["54.3"],"通知所有":["54.5"],"执行更新函数":["54.5"],"双向绑定原理":["54.5"],"foreach":["54.6","127.6"],"key":["54.6","67.37","111.4"],"definereactive":["54.6"],"test":["54.7"],"get":["54.8","78.6"],"target也就是watcher实例":["54.8"],"set":["54.8","78.6","111.4"],"newval":["54.8"],"通知dep执行更新方法":["54.8"],"vue":["55.2","69.54"],"都属于":["55.2"],"meaningful":["55.3"],"表示页面的":["55.3"],"主要内容":["55.3"],"开始出现在屏幕上的时间点":["55.3"],"它是我们测量用户加载体验的主要指标":["55.3"],"fmp本质上是通过一个算法来猜测某个时间点可能是":["55.3"],"所以有时候不准":["55.3"],"fmp原理":["55.3"],"捕获fmp的原理":["55.3"],"配置选项":["55.4"],"根据需要进行配置":["55.4"],"外链css":["55.4"],"js文件":["55.4"],"很多时候我们在main":["55.4"],"js中直接import一些ui库或者css文件啥的":["55.4"],"以后可以在index":["55.4"],"通过script外链引入":["55.4"],"这样就不会通过我们的webpack打包":["55.4"],"loading":["55.4"],"首页加一个loading或许是最原始的方法了":["55.4"],"在index":["55.4"],"html里加一个loadingcss效果":["55.4"],"当页面加载完成消失":["55.4"],"function":["57.3","87.20","89.7"],"类型变量":["58.2"],"bb":["58.2","82.0"],"可以正常运行":["58.2"],"typescript中有两个":["58.3"],"顶层类型":["58.3"],"any":["58.3","66.14","89.25","119.1","119.13"],"unknown":["58.3"],"只有一个":["58.3"],"底层类型":["58.3"],"为变量赋值时会自动判断类型并转换":["63.1"],"所以是弱类型语言":["63.1"],"http":["63.3","63.42"],"example":["63.3"],"com":["63.3"],"api":["63.3","73.23"],"true":["63.3","87.29","89.1"],"表示服务器请求超时":["63.4"],"表是服务器由于临时的服务器过载或者维护":["63.4"],"无法解决当前请求":["63.4"],"闭包正式可以做到这一点":["63.7"],"因为它不会释放外部的引用":["63.7"],"从而函数内部的值得以保留":["63.7"],"在使用定时器时":["63.8"],"一定要记得及时清除已经失效的定时器":["63.8"],"使用内存分析工具来检测内存泄漏问题":["63.8"],"及时发现和解决潜在问题":["63.8"],"赋值为null":["63.8"],"alert":["63.10"],"利用事件冒泡的原理":["63.10"],"将事件委托给父元素":["63.10"],"代理就是利用事件冒泡的机制把里层需要相拥的事件绑定到外层":["63.12"],"来进行访问和设置":["63.13"],"本地存储通过":["63.13"],"localsorage":["63.13"],"对象进行访问与设置":["63.13"],"newjson":["63.16"],"多态":["63.17"],"是父类或接口定义的引用变量可以指向子嘞或者具体实现类的实例对象":["63.17"],"apply":["63.18","89.7"],"返回结果":["63.18"],"instanceof":["63.18"],"object":["63.18","78.6","122.3"],"es6新特性二":["63.21"],"待开发":["63.21"],"2083byte":["63.22"],"若只支持":["63.22"],"chrome":["63.22"],"则最大长度是":["63.22"],"8182byte":["63.22"],"所以不能使用缓存":["63.23"],"ie浏览器只支持事件冒泡":["63.25"],"也可以通过h5的拖放":["63.28"],"drag和drop":["63.28"],"来实现":["63.28"],"释放内存以便在引用垃圾回收的方法":["63.30"],"标记清除":["63.30"],"计数引用":["63.30"],"someobject":["63.31"],"这样就不会有垃圾回收的过程":["63.31"],"即使有属性在user中不存在":["63.32"],"通过user":["63.32"],"id同样也可以这样监听这个属性的变化":["63.32"],"这里需要组合继承":["63.33"],"this":["63.35"],"id":["63.36","82.0"],"onloading":["63.36"],"pattern":["63.37"],"flags":["63.37"],"global":["63.37"],"g":["63.37","74.7"],"ignorecase":["63.37"],"multiline":["63.37"],"m":["63.37"],"source":["63.37"],"reg":["63.37"],"newreg":["63.37"],"abc":["63.38","87.7","88.6"],"输出":["63.38","103.6"],"bac":["63.38"],"bca":["63.38"],"acb":["63.38"],"cab":["63.38"],"cba":["63.38"],"不能访问和操作其它域下的资源":["63.40"],"请求":["63.42"],"合并文件":["63.42"],"合并图片":["63.42"],"includes":["63.44","74.7"],"spread":["63.45"],"实现数组":["63.45"],"寄生组合式继承":["63.47"],"这两个关注的是程序在等待调用结果时的状态":["63.48"],"https是":["63.50"],"反向链接":["63.51"],"网站外链优化":["63.51"],"不支持透明度":["64.2"],"表示ie盒子模型":["64.7"],"muted":["64.9","64.10"],"静音模式":["64.9","64.10"],"冲突":["64.10"],"加载插件的标签":["64.12"],"video":["64.12"],"视频标签":["64.12"],"audio":["64.12"],"音频标签":["64.12"],"平铺":["64.14"],"round":["64.14"],"铺满stretch":["64.14"],"拉伸":["64.14","74.20","74.26"],"转换":["64.17"],"指定什么时候开始切换效果":["64.19"],"direction":["64.20","64.32"],"是否轮流反向播放动画":["64.20"],"display":["64.21"],"block":["64.21"],"visibility":["64.21"],"inherit":["64.22"],"表示元素会继承父级元素的定位属性":["64.22"],"flex":["64.25"],"self":["64.25"],"center":["64.25","64.26"],"justfy":["64.26"],"item":["64.26"],"table":["64.27"],"布局":["64.27"],"只能用于背景色和文本颜色":["64.30"],"not":["64.30"],"否定伪类选择器":["64.30"],"lang":["64.30"],"语言伪类选择器":["64.30"],"包含的所有的权重之和":["64.31"],"decoration":["64.32"],"元素的文本大小写":["64.32"],"transform":["64.32"],"文本方向":["64.32"],"svg精灵图":["64.33"],"button":["64.34"],"del":["64.34"],"iframe":["64.34"],"ins":["64.34"],"justify":["64.36"],"设置弹性盒子元素在主轴上的对齐方式":["64.36"],"屏幕越小的移动设备如果用了":["64.38"],"肯定文字就越小":["64.38"],"就会导致看文章的时候看不清":["64.38"],"中页面是一种比较宽松的像后兼容的方式显示":["64.41"],"在整个拖放操作结束时触发":["64.42"],"实现前两者的优化":["64.44"],"使用":["64.44","73.23","89.27","110.16"],"cdn":["64.44"],"服务端渲染":["64.45"],"开始渲染解析页面":["64.48"],"浏览器会处理":["64.48"],"并且构建":["64.48"],"树":["64.48"],"处理":["64.48","87.18"],"css":["64.48"],"标记并构建":["64.48"],"cssdom":["64.48"],"将":["64.48","67.57","108.0"],"树和":["64.48"],"树合并成一个渲染树":["64.48"],"根据渲染树来布局":["64.48"],"以计算每个节点的集合信息":["64.48"],"将各个节点渲染到屏幕上":["64.48"],"这样就完成了页面渲染":["64.48"],"传输完成":["64.48"],"tcp四次挥手":["64.48"],"native":["64.48"],"javascript":["64.48","69.25","117.1"],"tcp四层五层与osi七层模型区别":["64.48"],"事件方面":["64.50"],"css动画有天然提供的事件支持":["64.50"],"js动画则没有":["64.50"],"兼容性问题":["64.50"],"css动画存在兼容性问题":["64.50"],"这些hook提供了强大的工具":["66.1","78.4"],"用于管理状态":["66.1","78.4"],"处理副作用和重新编辑":["66.1","78.4"],"react功能组件中的逻辑":["66.1","78.4"],"同时确保最佳效率和渲染速度":["66.2"],"setstate":["66.3"],"方法更新状态":["66.3"],"在":["66.3"],"state对象不是必须的":["66.3"],"数据由":["66.3"],"属性在":["66.3"],"对象中管理":["66.3"],"current":["66.4","73.10"],"一般来说":["66.5"],"功能组件被认为更简单":["66.5"],"更易于阅读和测试":["66.5"],"建议尽可能使用功能组件":["66.5"],"除非对基于类的组件有特定需求":["66.5"],"它允许访问组件中的属性和方法":["66.6"],"不使用":["66.6"],"因为函数未绑定到特定实例":["66.6"],"该函数讲以前的状态值作为参数":["66.7"],"redux通常作为状态管理库":["66.11"],"返回现有的状态":["66.13"],"特别是在需要处理大量数据和实时数据的场景中具有很高的实用性":["66.16"],"是浏览器原生提供的api":["66.17"],"而axios则是一个第三方库":["66.17"],"可以在浏览器和node":["66.17"],"js中使用":["66.17"],"react需要在编译期间对hook的调用顺序进行静态分析":["66.18"],"从而确保每个hooks对应状态都是稳定的":["66.18"],"因此不能将hook放置在条件语句和循环语句中":["66.18"],"只能在函数组件的顶层作用域中使用hook":["66.18"],"diff算法的优化和实现可以大大影响页面性能和用户体验":["66.20"],"许多前端开发框架和库都致力于改进diff算法":["66.20"],"以提供更高效的ui更新机制":["66.20"],"使用mvc的目的就是将m和v的代码分离":["67.2"],"mvc是单向通信":["67.2"],"也就是view跟model":["67.2"],"必须通过controller来承上启下":["67.2"],"两者区别":["67.2"],"mvc和mvvm其实区别并不大":["67.2"],"都是一种设计思想":["67.2"],"mvc和mvvm的区别并不是vm完全取代了c":["67.2"],"只是在mvc的基础上增加了一层vm":["67.2"],"不过是弱化了c的概念":["67.2"],"viewmodel存在目的在于抽离controller中展示的业务逻辑":["67.2"],"而不是替代controller":["67.2"],"其它视图操作业务等还是应该放在controller中实现":["67.2"],"也就是说mvvm实现的是业务逻辑组件的重用":["67.2"],"使开发更高效":["67.2"],"结构更清晰":["67.2"],"增加代码的复用性":["67.2"],"解决":["67.3"],"右":["67.4"],"系统按键修饰符":["67.4"],"ctrl":["67.4"],"alt":["67.4"],"shift":["67.4"],"meta":["67.4"],"按下对应键位触发":["67.4"],"区别是在页面加载时不显示双花括号":["67.7"],"是否相同":["67.10"],"进行调换位置或删除操作":["67.10"],"导航的同时":["67.12"],"给子路由传递参数":["67.12"],"如果发现没有浏览器的api":["67.15"],"路由强制进入这个模式":["67.15"],"不会刷新页面":["67.16"],"会触发":["67.16"],"hash的改变会自动添加到浏览器历史记录中":["67.16"],"hash值的变化会被浏览器记录":["67.18"],"实现页面的前进和后退功能":["67.18"],"不过":["67.18"],"它在seo中的确有不好的影响":["67.18"],"以及":["67.19"],"forward":["67.19","137.3"],"back":["67.19"],"go":["67.19"],"方法用于切换历史状态":["67.19"],"也不会返回404错误":["67.20"],"路由参数通常只能传递有限数量的信息":["67.22"],"因为它们必须以路径的一部分存在":["67.22"],"因为它们不包含在路径中":["67.23"],"用户不容易传递信息":["67.23"],"不影响访问资源的关键性标识":["67.24"],"auth":["67.35"],"isauthenticated":["67.35"],"login":["67.35"],"未登录时重定向到登录页":["67.35"],"继续导航":["67.35"],"自定义指令主要是为了重用涉及普通元素的底层dom访问逻辑":["67.36"],"content":["67.40","67.41"],"插槽在父子组件关系中放置在子组件中":["67.42"],"插槽的内容是被在父组件中调用时传递过来的":["67.42"],"插槽内容":["67.42"],"插槽内容是在父组件中调用子组件时":["67.42"],"具体要传递给子组件的值":["67.42"],"一般是放在子组件标签里面的":["67.42"],"小小苹果":["67.44"],"具名插槽的顺序是不限制的":["67.44"],"只需要写好模版命好名字":["67.44"],"它就会自动去到它所对应的位置":["67.44"],"成了具名插槽了":["67.46"],"同样具名插槽的":["67.46"],"属性也不会传递给":["67.46"],"这种在父组件作用域中获取到了子组件作用域中的变量":["67.46"],"可以认为作用域插槽":["67.46"],"延伸了子组件数据的作用范围":["67.46"],"所以这类能够借搜参数的插槽就被称为作用域插槽":["67.46"],"ontrack":["67.49","67.50"],"debuggerevent":["67.49"],"ontrigger":["67.49","67.50"],"调试侦听器的依赖":["67.50"],"cancel":["67.51"],"doasyncwork":["67.51"],"当":["67.51"],"变化时候":["67.51"],"cancel将被调用":["67.51"],"取消之前的未完成的请求":["67.51"],"函数不能有异步":["67.52"],"可以":["67.52"],"函数中使用路由器":["67.54"],"综上所述":["67.54","74.11"],"是vuerouter的实例":["67.54"],"提供了路由控制器的一些方法和属性":["67.54"],"用于改变url和获取路由相关信息":["67.54"],"而":["67.54","89.2","101.1","101.2","119.9"],"是当前激活的路由对象":["67.54"],"包含了当前url解析得到的信息":["67.54"],"history":["67.55"],"引入了一个新的渲染器api":["67.56"],"使得可以更轻松地构建自定义渲染器":["67.56"],"这使得vue3":["67.56"],"0不仅能够在浏览器中运行":["67.56"],"还可以在服务器":["67.56"],"原生应用等环境中使用":["67.56"],"新的渲染器api也带来了更多的渲染优化":["67.56"],"使得vue3":["67.56"],"在不同环境下都能够高效地工作":["67.56"],"为了解决":["67.57"],"store对象过于臃肿的问题":["67.57"],"分割成":["67.57"],"模块":["67.57"],"通过":["69.3","74.22","89.1","138.2"],"的方式将count变量传递给子组件":["69.3"],"就实现了一个最简单的父组件到子组件的数据传递":["69.3"],"上面这段代码中":["69.5"],"在template中":["69.5"],"我们通过":["69.5"],"符号监听子组件自定义事件changeparentcount":["69.5"],"并在父组件中执行名为changeparentcount的方法":["69.5"],"它接收一个params的参数":["69.5"],"然后更新父组件中count变量的值":["69.5"],"点击按钮":["69.7"],"在控制台中可以看到打印出子组件的数据和方法的结果":["69.7"],"总结":["69.7","69.9"],"这种方式之间的通信":["69.7"],"主要是在子组件内部":["69.7"],"将属性和方法暴露出去":["69.7"],"然后再子组件中":["69.7"],"先获取到子组件的dom实例":["69.7"],"然后就可以访问子组件的属性和调用子组件的方法了":["69.7"],"由于":["69.9"],"在父组件中是响应式的":["69.9"],"所以更新后该值将自动反映在父组件的视图中":["69.9"],"我们点击一下按钮":["69.9"],"子组件1和子组件2的值都会被更改":["69.9"],"过使用":["69.9"],"数据能够在父组件和子组件之间进行传递和共享":["69.9"],"实现了跨组件的通信":["69.9"],"发生变化时":["69.11"],"它们会自动更新到子组件中":["69.11"],"当子组件中的":["69.11"],"改变时":["69.11"],"它们会通过":["69.11"],"事件反馈给父组件":["69.11"],"父组件会相应地更新自己的":["69.11"],"这就实现了父子组件之间的双向绑定":["69.11"],"on":["69.13","89.5","98.0"],"方法监听了":["69.13"],"updatename":["69.13"],"事件":["69.13","75.3"],"并在回调函数中接收到了传递的数据":["69.13"],"然后我们将接收到的数据赋值给相应的属性":["69.13"],"在模板中展示出来":["69.13"],"通过这种方式":["69.13"],"我们可以在不同的组件中实现通信":["69.13"],"组件可以通过事件总线发送事件和数据":["69.13"],"组件则监听事件并接收到数据进行处理":["69.13"],"来统一管理应用程序的状态和逻辑":["69.15"],"这种方式下生命周期方法被简化了":["69.23"],"后立即调用":["69.24"],"通常用于执行异步操作":["69.24"],"订阅事件等初始化工作":["69.24"],"与其它":["69.25"],"框架进行集成等":["69.25"],"hook":["69.26"],"来代替生命周期方法的功能":["69.26"],"并更新渲染的列表项":["69.36"],"index":["69.38"],"输入延迟估值":["69.38"],"estimated":["69.38"],"input":["69.38"],"latency":["69.38"],"分以上":["69.39"],"则说明网站应用在该方面的评估表现符合最佳实践":["69.39"],"潜在的跨站脚本攻击":["69.49"],"jsonp":["69.50"],"更可靠":["69.50"],"使得客户端无感知地访问目标服务器资源":["69.53"],"框架集成":["69.54"],"集成不同的前端框架":["69.54"],"将不同的前端框架":["69.54"],"react":["69.54"],"集成到同一个应用程序中":["69.54"],"每个团队可以选择它们喜欢的框架来开发它们的部分":["69.54"],"并通过共享数据和通信机制来实现整体应用程序的协同工作":["69.54"],"路由管理":["69.54"],"统一的路由管理":["69.54"],"通过统一的路由管理机制来组织和管理不同前端应用程序的路由":["69.54"],"可以使用路由中间件或服务来实现统一的路由管理":["69.54"],"使得用户能够无缝地在不同的前端应用程序之间进行导航":["69.54"],"维护一个单一的代码仓库可以减少仓库管理的成本":["69.55"],"包括权限管理":["69.55"],"备份和恢复":["69.55"],"仓库迁移等方面":["69.55"],"然后在需要的地方调用该函数":["69.56"],"这样可以确保记忆化计算的行为独立于组件的渲染过程":["69.56"],"同时也更容易进行测试和维护":["69.56"],"并使用":["69.60"],"来监听状态变量的变化":["69.60"],"并将其保存到本地存":["69.60"],"储中":["69.60"],"然后":["69.60"],"我们在":["69.60"],"中使用了这个自定义":["69.60"],"来管理输入框中的文本值":["69.60"],"将其保存到本地存储中":["69.60"],"当拖动操作结束时触发":["71.3"],"可以继续使用options":["71.9"],"也是十分友好的":["71.9"],"rejected":["73.4","75.15"],"子组件运行结果为":["73.7"],"当子组件需要向父组件传值时":["73.9"],"调用changeval函数进行传值":["73.9"],"div":["73.9"],"子组件传递给父组件":["73.9"],"上述示例运行后控制台输出":["73.10"],"json":["73.10"],"通过usecontext获取父组件的值":["73.11"],"应用不同的css样式":["73.13"],"screen":["73.13","91.0"],"and":["73.13"],"max":["73.13"],"768px":["73.13"],"styles":["73.13"],"for":["73.13","89.5","89.28","111.4"],"screens":["73.13"],"up":["73.13"],"wide":["73.13"],"来实现元素的层叠效果":["73.14"],"使得页面元素可以重叠":["73.14"],"覆盖和定位在不同的位置上":["73.14"],"混合布局":["73.14"],"可以结合使用以上多种布局方式":["73.14"],"根据具体需求来实现复杂的页面结构和样式":["73.14"],"400px":["73.15"],"50px":["73.15"],"执行下一个宏任务":["73.16"],"如果有":["73.16"],"总的来说":["73.16"],"微任务优先级比较高":["73.16"],"会在下一个宏任务之前执行完毕":["73.16"],"而宏任务则相对较慢":["73.16"],"会在当前宏任务执行完毕后执行":["73.16"],"方法将组件渲染到根节点中":["73.20"],"这样可以让react应用更快地响应用户操作":["73.20"],"提高用户体验":["73.20"],"count":["73.21"],"state":["73.21"],"usemutablesource":["73.22"],"允许开发者访问可变的数据源":["73.22"],"并在多个组件之间共享状态":["73.22"],"这对于高性能的数据订阅和共享非常有用":["73.22"],"提供更好的替代方案":["73.23"],"检测警告信息":["73.23"],"使其更加明显和易于发现":["73.23"],"h1":["73.25"],"计数器":["73.25"],"来表示空值":["74.3"],"而不是使用":["74.3"],"如果匹配到了1":["74.7"],"3位数字":["74.7"],"后面一定要匹配3位":["74.7"],"replace":["74.7"],"d":["74.7","75.5","137.3"],"march":["74.7"],"match":["74.7","92.0","98.0"],"app":["74.10"],"world":["74.10"],"仍然指向最初的对象":["74.11"],"而此时该对象已经被添加了属性":["74.11"],"因此输出":["74.11"],"最终输出结果是":["74.11"],"跟水平网格线":["74.14"],"比如上图示例中就有":["74.14"],"根垂直网格线":["74.14"],"一般而言":["74.14"],"是从左到右":["74.14"],"从上到下":["74.14"],"进行编号排序":["74.14"],"当然也可以从右到左":["74.14"],"从下到上":["74.14"],"按照":["74.14"],"顺序进行编号排序":["74.14"],"表示第一第三列为":["74.16"],"中间由浏览器决定长度":["74.16"],"grid间距":["74.17"],"中定义的":["74.18"],"区域中":["74.18"],"area属性":["74.18"],"可以设置":["74.19","74.24"],"表示先列后行":["74.19"],"对其单元格内部居中":["74.20"],"默认值":["74.20","74.26"],"占满单元格整个宽度":["74.20"],"项目与容器边框之间也是同样长度的间隔":["74.21"],"项目大小没有指定时":["74.21"],"拉伸占据整个网格容器":["74.21"],"属性只是指定了两行两列":["74.22"],"但实际有九个元素":["74.22"],"就会产生隐式网格":["74.22"],"可以指定隐式网格的行高为":["74.22"],"显式网格与隐式网格":["74.22"],"到":["74.24"],"水平网格线是从":["74.24"],"其中它跟":["74.24"],"垂直网格线是从3":["74.24"],"是有冲突的":["74.24"],"去决定它们的层级关系":["74.24"],"网格线位置":["74.24"],"单元格结束边缘":["74.26"],"单元格内部居中":["74.26"],"占满单元格的整个宽度":["74.26"],"综上":["75.2"],"输出最终结果为":["75.2"],"浏览器中已经废弃":["75.3"],"requestanimationframe":["75.3"],"属于微任务的有":["75.3"],"mutationobserver":["75.3"],"process":["75.3"],"nodejs":["75.3"],"plain":["75.6"],"请求设置了自定义的header字段":["75.6"],"headers":["75.7"],"来决定是否允许请求":["75.7"],"的":["75.11"],"的返回值作为参数":["75.11"],"promises":["75.14"],"were":["75.14"],"才会有最终的状态":["75.15"],"这里直接比较收集的数组的长度":["75.16"],"将最长的数组重新赋值给longpath":["75.16"],"当节点不再存在children":["75.16"],"比较收集的数组的长度":["75.16"],"icmp":["76.0"],"包来判断服务器是否可连通":["76.0"],"协议进行":["76.0"],"dns":["76.0"],"解析":["76.0"],"获取域名的":["76.0"],"a":["76.0","82.0"],"记录":["76.0"],"ntp":["76.0"],"服务器校准本地时间":["76.0"],"用于":["76.0"],"tls":["76.0"],"证书的校验":["76.0"],"向本地硬盘写入":["76.0"],"和网页缓存等数据":["76.0"],"调用":["76.0"],"gpu":["76.0"],"能力对页面进行":["76.0"],"2d":["76.0"],"绘图":["76.0"],"如果你发现一个组件因为":["78.2"],"没有变化却重复频繁渲染":["78.2"],"可以考虑使用":["78.2"],"如果组件内部有某个复杂计算逻辑频繁执行且结果可以被缓存":["78.2"],"那么应该使用":["78.2"],"来优化这个计算过程":["78.2"],"这个计算进行了优化":["78.3"],"只有当":["78.3"],"的值才会重新计算":["78.3"],"旧节点都有剩余":["78.6"],"则构建":["78.6"],"最长递增子序列":["78.6"],"节点在最长递增子序列中":["78.6"],"则该节点不需要移动":["78.6"],"节点不在最长递增子序列中":["78.6"],"则移动该节点":["78.6"],"响应式原理的不同":["78.6"],"vue2":["78.6"],"主要通过":["78.6"],"defineproperty":["78.6"],"方法来做数据劫持":["78.6"],"结合发布订阅者模式来实现":["78.6"],"vue3中则通过":["78.6"],"proxy":["78.6"],"代理的方式来实现":["78.6"],"的返回值是否为object":["78.8"],"如果是则在通过":["78.8"],"reactive":["78.8"],"方法做袋米":["78.8"],"这样就实现了深度观测":["78.8"],"监测数组的时候可能触发多次get":["78.8"],"那么如何防止触发多次呢":["78.8"],"我们可以判断key是否为当前被代理对象target自身属性":["78.8"],"也可以判断旧值与新值是否相等":["78.8"],"只有满足以上两个条件之一时":["78.8"],"才有可能执行trigger":["78.8"],"duplicate":["78.9"],"identifier":["78.9"],"lin":["78.9"],"回调函数的函数体":["78.11"],"所以不用写返回值":["78.11"],"所指定的回调中用到的数据只要发生变化":["78.11"],"则重新执行回调":["78.11"],"treecur":["78.12"],"根节点直接推入acc":["78.12"],"结果数组":["78.12"],"如果不是根节点":["78.12"],"将其添加到父节点的":["78.12"],"children当中":["78.12"],"shadow属性高级用法":["80.0"],"9deg":["81.2"],"keyframes":["81.8"],"scale":["81.8"],"translate":["81.9","81.15"],"aa":["82.0"],"class":["82.0"],"background":["82.0"],"color":["82.0"],"blue":["82.0"],"id的important会将class的important覆盖掉":["82.0"],"red":["82.0"],"false":["87.4","87.22","88.6","110.13"],"array":["87.12","89.28","103.3","106.4"],"prototype":["87.12","89.7"],"但在es6中":["87.18"],"空位被视为":["87.18"],"的值":["87.18"],"使用es6的数组方法时":["87.18"],"空位会被当作":["87.18"],"null":["87.30","92.0","122.2","127.3"],"参数变量是默认声明的":["87.34"],"所以不能使用":["87.34"],"let":["87.34"],"再次声明":["87.34"],"解构赋值等":["88.0"],"referenceerror":["88.2"],"️":["88.5"],"es6内部使用严格相等运算符":["88.5"],"来判断一个位置是否有值":["88.5"],"所以":["88.5"],"只有当一个数组成员严格等于":["88.5"],"默认值才会生效":["88.5"],"不放置任何变量名":["88.6"],"可以写出非常古怪的赋值表达式":["88.6"],"但没有实际意义":["88.6"],"由于数组本质是特殊的对象":["88.6"],"因此可以对数组进行对象属性的解构":["88.6"],"length":["88.6","88.15","110.12"],"generator":["88.12"],"函数":["88.12"],"最为自己的this的值":["88.13"],"innerhtml":["88.14"],"bangbang":["88.15"],"rest参数之后不能再有其它参数":["88.15"],"只能是最后一个参数":["88.15"],"否则会报错":["88.15"],"函数的":["88.15"],"属性":["88.15","113.3"],"不包括rest参数":["88.15"],"myobject":["88.21"],"valuea":["88.21"],"valueb":["88.21"],"object类型":["88.21"],"返回":["88.21","103.4","107.3"],"由于被当作函数调用":["89.1"],"所以返回传入的第一个值":["89.1"],"fpaoxy":["89.1"],"操作符被用作构造函数调用":["89.1"],"返回一个对象":["89.1"],"对象的key为value":["89.1"],"值为第二个传入的值":["89.1"],"访问fproxy上的属性":["89.1"],"proxy拦截后判断属性名等于":["89.1"],"修改为返回":["89.1"],"所以为":["89.1"],"foo":["89.1"],"proxy拦截后修改为返回":["89.1"],"循环":["89.2"],"该方法返回目标对象所有自身的属性的属性名":["89.2"],"的返回结果仅包括目标对象自身的可遍历属性":["89.2"],"defineproperties":["89.2"],"propdescs":["89.2"],"n":["89.4"],"pow":["89.4"],"reversetint":["89.4"],"tostring":["89.4"],"split":["89.4"],"join":["89.4"],"reverseint":["89.4"],"代理应当返回一个":["89.5"],"布尔值":["89.5"],"严格模式下":["89.5"],"代理如果没有返回":["89.5"],"就会报错":["89.5"],"use":["89.5"],"strict":["89.5","98.0"],"无论有没有下面这一行":["89.5"],"都会报错":["89.5"],"trap":["89.5"],"returned":["89.5"],"falsish":["89.5"],"直接调用":["89.6"],"也会被拦截":["89.6"],"内部调用对应的":["89.7"],"保证原生行为能够正常执行":["89.7"],"添加的工作":["89.7"],"就是将每一个操作输出一行日志":["89.7"],"有了":["89.7"],"对象以后":["89.7"],"很多操作会更易读":["89.7"],"call":["89.7"],"math":["89.7"],"floor":["89.7"],"attributes":["89.8"],"定义对象的属性":["89.8"],"jane":["89.9"],"返回长度":["89.13"],"size":["89.13","89.18"],"返回实例成员总数":["89.18"],"方法返回值的规格可以描述如下":["89.25"],"interface":["89.25"],"symbol":["89.25"],"iterationresult":["89.25"],"boolean":["89.25"],"of":["89.28","114.0"],"map":["89.28","127.6"],"weakmap":["89.28"],"weakset":["89.28"],"比如":["89.28"],"all":["89.28","136.2"],"race":["89.28"],"函数内部的每一个状态":["89.30"],"num":["90.0"],"lastindexof":["90.0"],"substring":["90.0"],"把参数和文件名分割开":["90.0"],"decodeuri":["90.0"],"屏幕分辨率的高":["91.0"],"屏幕分辨率的宽":["91.0"],"屏幕可用工作区高度":["91.0"],"availheight":["91.0"],"屏幕可用工作区宽度":["91.0"],"availwidth":["91.0"],"image":["91.0"],"png":["91.0","96.0"],"search":["92.0"],"匹配目标参数":["92.0"],"decodeuricomponent":["92.0"],"返回参数值":["92.0"],"客户端进入established状态":["93.1"],"并对服务端发送的syn包进行确认":["93.1"],"发送确认包ack":["93.1"],"服务端接收到客户端的ack包之后":["93.1"],"也进入established状态":["93.1"],"至此tcp连接成功":["93.1"],"为什么客户端没有立刻关闭呢":["93.2"],"为了确保第四次挥手的确认消息到达服务端":["93.2"],"如果服务端在规定时间内未收到最后的确认消息":["93.2"],"会冲洗内进行第三次挥手请求断开连接":["93.2"],"客户端重新发送确认消息":["93.2"],"是报文的最长生存时间":["93.2"],"两个":["93.2"],"是在网络中来回两个报文所需要的最长时间":["93.2"],"如果超过了这个时间":["93.2"],"客户端没有重新收到断开连接的请求":["93.2"],"说明四次挥手顺利完成":["93.2"],"可以断开连接了":["93.2"],"网络原理而设计的":["94.0"],"而在实际应用中还是":["94.0"],"osi七层与tcp":["94.0"],"ip四层":["94.0"],"五层的区别":["94.0"],"进而危害数据安全":["95.1"],"的css表达式代码":["95.2"],"属于前端javascript自身的安全漏洞":["95.3"],"其它两种xss都属于服务端的安全漏洞":["95.3"],"x2f":["95.4"],"白名单过滤":["95.4"],"对于现实富文本来说":["95.4"],"不能通过上面的办法来转义所有字符":["95.4"],"因为这样也会把需要的格式也转义掉":["95.4"],"这种情况推荐使用白名单过滤的方法":["95.4"],"达到冒充用户对被攻击网站执行":["95.5"],"某种操作的目的":["95.5"],"token也是空谈":["95.6"],"token验证可以避免":["95.7"],"函数体":["96.0"],"没有被调用":["96.0"],"打印出来的是":["96.0"],"7张三":["96.0"],"同样":["96.0"],"也可以有多个参数":["96.0"],"并且参数可以执行的时候再次添加":["96.0"],"但是要注意的是":["96.0"],"参数是按照形参的顺序进行的":["96.0"],"所以服务器知道是谁发起了请求":["97.0"],"我们还可以使用":["97.0"],"属性从浏览器访问cookie":["97.0"],"path":["97.2"],"expires":["97.2"],"tue":["97.2"],"jan":["97.2"],"03":["97.2"],"07":["97.2"],"gmt":["97.2"],"以使cookie对此网站所有页面可见":["97.3"],"前面有一个点符号":["97.4"],"也以相同的方式工作":["97.4"],"允许从子域访问cookie":["97.4"],"这是一种旧的表示方式":["97.4"],"如果我们需要支持非常旧的浏览器":["97.4"],"那么应该使用它":["97.4"],"总结一下":["97.4"],"通过domain选项的设置":["97.4"],"可以实现允许在子域访问cookie":["97.4"],"删除cookie":["97.5"],"让它立即过期":["97.5"],"property":["97.6"],"accessors":["97.6"],"大括号内是否允许不必要的空格":["98.0"],"shorthand":["98.0"],"强制对象字面量缩写语法":["98.0"],"one":["98.0"],"连续声明":["98.0"],"operator":["98.0"],"assignment":["98.0"],"赋值运算符":["98.0"],"什么的":["98.0"],"换行时运算符在行尾还是行首":["98.0"],"padded":["98.0"],"块语句内行首行尾是否要空行":["98.0"],"prefer":["98.0"],"首选const":["98.0"],"首选展开运算":["98.0"],"reflect":["98.0"],"首选reflect的方法":["98.0"],"quotes":["98.0"],"single":["98.0"],"引号类型":["98.0"],"quote":["98.0"],"props":["98.0"],"对象字面量中的属性名是否强制双引号":["98.0"],"radix":["98.0"],"parseint必须指定第二个参数":["98.0"],"命名检测":["98.0"],"yield":["98.0"],"生成器函数必须有yield":["98.0"],"语句强制分号结尾":["98.0"],"分号前后空格":["98.0"],"sort":["98.0"],"变量声明时排序":["98.0"],"space":["98.0"],"keywords":["98.0"],"关键字后面是否要空一格":["98.0"],"不以新行开始的块":["98.0"],"前面要不要有空格":["98.0"],"paren":["98.0"],"函数定义时括号前面要不要有空格":["98.0"],"小括号里面要不要有空格":["98.0"],"infix":["98.0"],"ops":["98.0"],"中缀操作符周围要不要有空格":["98.0"],"case后面要不要加空格":["98.0"],"unary":["98.0"],"words":["98.0"],"nonwords":["98.0"],"一元运算符的前":["98.0"],"后要不要加空格":["98.0"],"注释风格不要有空格什么的":["98.0"],"使用严格模式":["98.0"],"isnan":["98.0"],"禁止比较时使用nan":["98.0"],"只能用isnan":["98.0"],"valid":["98.0"],"jsdoc":["98.0"],"jsdoc规则":["98.0"],"typeof":["98.0"],"必须使用合法的typeof的值":["98.0"],"top":["98.0"],"var必须放在作用域顶部":["98.0"],"wrap":["98.0"],"iife":["98.0"],"inside":["98.0"],"立即执行函数表达式的小括号风格":["98.0"],"正则表达式字面量用小括号包起来":["98.0"],"yoda":["98.0"],"禁止尤达条件":["98.0"],"导入模块的":["100.0"],"因此得名":["100.0"],"一开始被提议的时候":["100.0"],"amd是为前端而做的":["100.0"],"而cjs是后端":["100.0"],"amd语法不如cjs直观":["100.0"],"universal":["100.0"],"definition":["100.0"],"通用模块定义":["100.0"],"在前端和后端都适用":["100.0"],"通用":["100.0"],"因此而得名":["100.0"],"与cjs或amd不同":["100.0"],"umd更像是一种配置多个模块系统的模式":["100.0"],"当使用rollup":["100.0"],"webpack之类的打包器时":["100.0"],"umd通常用作备用模块":["100.0"],"是返回一个新的数组":["101.1"],"不会返回值":["101.1"],"实际上返回了":["101.1"],"区别主要在于处理函数返回值的方式不同":["101.2"],"忽略函数的返回值":["101.2"],"则将函数的返回值收集到一个新数组中":["101.2"],"方便以后查阅":["102.0"],"from":["102.2"],"seconds":["102.6"],"获取当前的年月日时分秒":["102.6"],"toarray":["102.6","127.4"],"years":["102.6"],"months":["102.6"],"milliseconds":["102.6"],"toobject":["102.6"],"xxxx":["102.6"],"xx":["102.6"],"格式化时间戳":["102.8"],"以毫秒为单位":["102.8"],"返回值为字符串类型":["102.8"],"24t19":["102.11"],"08":["102.11"],"00":["102.11"],"2019年6月3日":["102.13"],"valueof":["102.15"],"时间戳":["102.15"],"转":["102.15"],"string":["102.15","106.4"],"即索引为1的位置而不是索引0的位置开始":["103.1"],"否则为":["103.3"],"调用了reduce方法的原数组本身":["103.3"],"则会抛出错误":["103.4"],"输出为6":["103.7"],"输出为":["103.13","105.4"],"相似":["103.14"],"但并不完全相同":["103.14"],"方法主要侧重于多个":["103.14"],"并行执行":["103.14"],"并在所有":["103.14"],"都成功时才返回结果":["103.14"],"这个方法则侧重于按顺序执行":["103.14"],"操作":["103.14","134.3"],"并允许处理程序之间的传递结果":["103.14"],"输出为nan":["103.15"],"输出结果为9":["103.16"],"上述示例中":["104.1"],"函数将在延迟一秒后执行":["104.1"],"这是一个常用于执行一次性延迟操作的函数":["104.1"],"适用于需要重复执行的定时任务":["104.2"],"直到被清除或者页面被卸载":["104.2"],"特别是在长时间运行的定时器中":["104.3"],"累计实际误差可能导致定时器执行时间的不确定性":["104.3"],"simulation":["104.5"],"stopped":["104.5"],"anmiate":["104.6"],"启动动画":["104.6"],"并在每一帧中执行":["104.7"],"指向是由外层":["105.1"],"函数或全局":["105.1"],"作用域来决定的":["105.1"],"如果是直接调用":["105.2"],"那么":["105.2"],"指向的是":["105.2"],"对象":["105.2"],"此时打印o2":["105.3"],"此时this指向的":["105.6"],"foo对象":["105.6"],"输出为undefined":["105.7"],"并且":["105.7"],"盛名的变量是块级作用域":["105.7"],"不在window全局对象中":["105.7"],"上访问属性时":["106.0"],"会抛出":["106.0"],"typeerror":["106.0"],"异常":["106.0"],"这需要采用可选链运算符":["106.0"],"atom":["106.1"],"的目的是去创建一个唯一属性键":["106.1"],"保证不会与其它代码中的键产生冲突":["106.1"],"aaa":["106.4"],"就会返回":["106.4"],"isarray":["106.4"],"该方法会返回一个布尔值表示该值是否为数组":["106.4"],"它现在是一个构造函数":["107.1"],"因为通过":["107.1"],"关键字调用了它":["107.1"],"创建了一个parent构造函数的实例":["107.1"],"这就提到了":["107.2"],"proto":["107.2"],"就在":["107.3"],"中寻找":["107.3"],"但是":["107.3"],"obnject":["107.3"],"为null":["107.3"],"所以返回了":["107.3"],"这也就是为什么当访问对象中一个不存在的属性的时候":["107.3"],"undefined了":["107.3"],"然后又验证了":["107.4"],"就是根构造函数":["107.4"],"是因为在函数体内":["108.0"],"赋值给了变量":["108.0"],"由于变量":["108.0"],"在全局中已经声明了":["108.0"],"所以不会报错":["108.0"],"并且打印结果为":["108.0"],"至于第三个打印项":["108.0"],"就是简单的变量的提升了":["108.0"],"由于全局中":["108.0"],"最终的值为":["108.0"],"所以打印结果也为":["108.0"],"总之":["108.0"],"无论作用域中的声明出现在什么地方":["108.0"],"都将在代码本身被执行前首先进行处理":["108.0"],"可以将这个过程形象地想象成所有的声明":["108.0"],"变量和函数":["108.0"],"都会被":["108.0"],"移动":["108.0"],"到各自作用域的最顶端":["108.0"],"这个过程被称为":["108.0"],"的节点":["109.2"],"一旦":["109.2"],"构建完毕后":["109.2"],"浏览器就可以根据":["109.2"],"来绘制页面了":["109.2"],"rander流程":["109.2"],"属性决定该节点创建怎样的渲染器":["109.3"],"引起回流和重绘的原因是页面布局和几何属性发生了改变":["109.3"],"currentstyle":["109.4"],"浏览器为了返回最新值":["109.4"],"降低回流成本":["109.5"],"从下标为3的元素开始查询":["110.1","110.20"],"没有找到返回":["110.1","110.20"],"返回新数组":["110.2"],"数组改变":["110.3"],"注意和map区分":["110.3"],"满足条件的元素返回为一个新的数组":["110.4"],"满足条件的第一个元素":["110.5"],"相当于累加的效果":["110.8"],"可以被直接调用":["110.16"],"会根据规则隐式调用原始值的":["110.16"],"表示从下标为1的元素开始替换":["110.18"],"替换一个元素":["110.18"],"值将是":["110.21"],"i":["110.21"],"q":["110.22"],"r":["110.22","119.10","119.14","119.16"],"s":["110.22"],"t":["110.22"],"u":["110.22"],"w":["110.22"],"y":["110.22"],"hasownproperty":["111.4"],"进行递归判定":["111.4"],"这意味着它们可以在不需要向网络发送请求的情况下而被检索":["112.0"],"跳过强缓存和协商缓存":["112.2"],"普通刷新":["112.2"],"跳过强缓存":["112.2"],"但还是会检查协商缓存":["112.2"],"一般脚本":["112.4"],"字体":["112.4"],"图片会存在内存中":["112.4"],"内存缓存具有":["112.4"],"快速读取":["112.4"],"时效性":["112.4"],"内存缓存会讲编译解析后的文件":["112.4"],"直接存入该进程的内存中":["112.4"],"占据该进程一定的内存资源":["112.4"],"以方便下次运行使用时的快速读取":["112.4"],"一旦进程关闭":["112.4"],"则该进程的内存则会清空":["112.4"],"资源大小数值":["112.4"],"从服务器下载最新资源":["112.4"],"浏览器读取缓存的顺序是":["112.4"],"优先级高于":["112.6"],"同时存在则只有":["112.6"],"生效":["112.6"],"生效则返回304":["112.7"],"继续使用缓存":["112.7"],"blcak":["113.1"],"覆盖继承自父类别上的颜色":["113.1"],"也跟着变化了":["113.3"],"这是因为这两个实例使用的是同一个原型对象":["113.3"],"内存空间是共享的":["113.3"],"相比于第一种原型链继承的方法一":["113.4"],"父类的引用属性不会被共享":["113.4"],"优化了第一种继承方式的弊端":["113.4"],"但是只能继承父类的实例属性和方法":["113.4"],"不能继承原型属性或者方法":["113.4"],"这种方式看起来没什么问题":["113.5"],"也解决了原型链继承和构造函数继承各自存在的问题":["113.5"],"但是从上面的代码可以看到":["113.5"],"执行了两次":["113.5"],"造成了多构造一次的性能开销":["113.5"],"这种继承方式的缺点也很明显":["113.6"],"方法实现的是浅拷贝":["113.6"],"多个实例的引用类型属性指向相同的内存":["113.6","113.7"],"存在篡改的可能":["113.6","113.7"],"其优缺点也很明显":["113.7"],"跟原型式继承一样":["113.7"],"const":["113.8","119.5"],"asuna":["113.8"],"成功访问到父类的方法":["113.8"],"babel":["113.8"],"工具进行转换":["113.8"],"我们会发现":["113.8"],"实际采用的方式也是寄生组合式方式进行继承的":["113.8"],"证明这种方式是比较好的解决继承的方式":["113.8"],"indexof":["114.0"],"querystring":["114.0"],"pairs":["114.0"],"pair":["114.0"],"的方式来减少调用频率":["115.0"],"而函数节流一段时间内只执行一次":["115.5"],"搜索框的搜索联想功能":["115.6"],"解析器其实是一个运行环境":["117.0"],"解析器提供了操作":["117.0"],"bom":["117.0"],"的接口":["117.0"],"而在":["117.0"],"中解析器提供了操作磁盘和文件的接口":["117.0"],"是服务端的":["117.1"],"基于chrome的v8引擎":["117.1"],"是":["117.1"],"的运行环境":["117.1"],"因此没有运行的限制":["117.1"],"与浏览器没有任何关系":["117.1"],"并不会因为ie而产生兼容问题等":["117.1"],"extends":["119.1","119.2","119.6","119.8","119.11","119.14"],"keyof":["119.1","119.2","122.3"],"pick":["119.1"],"exclude":["119.1"],"age":["119.5"],"worker":["119.5"],"张三":["119.5"],"李四":["119.5"],"报错":["119.5","123.2"],"类型是任何其它类型的子类型":["119.7"],"它跟其它类型组成联合类型时候":["119.7"],"可以直接将":["119.7"],"类型从联合类型中":["119.7"],"消掉":["119.7"],"相当于删除兼容的类型":["119.7"],"剩下不兼容的类型":["119.7"],"实现如下":["119.8","119.11"],"不属于":["119.9"],"会返回":["119.9"],"args":["119.10","119.11","119.14"],"infer":["119.10","119.11","119.12","119.14"],"never":["119.13","119.15"],"abstract":["119.14"],"这个对象的":["119.17"],"不包含属性":["119.17"],"的实现就是一个空接口":["119.17"],"若常数枚举表达式求值后为":["121.3"],"nan":["121.3"],"infinity":["121.3"],"则会在编译阶段报错":["121.3"],"所有其它情况的枚举成员被当作是需要计算得出的值":["121.3"],"比普通":["121.4"],"有着更高的性能和更少的内存占用":["121.4"],"但由于其特性限制":["121.4"],"适用于一些特定的场景":["121.4"],"如在需要大量枚举且不需要在运行时访问枚举对象的情况下使用":["121.4"],"普通枚举":["121.4"],"则更灵活":["121.4"],"可以包含计算成员和常量成员":["121.4"],"适用于其它更加灵活的场景":["121.4"],"而是在使用的时候再指定具体类型":["122.1"],"text":["122.2"],"不会出现":["122.3"],"不存在的字段":["122.3"],"ts泛型以及泛型约束":["122.3"],"getdata":["122.3"],"k":["122.3"],"obj":["122.3"],"defaultobj":["122.3"],"的函数":["122.3"],"它的功能是返回目标对象的目标key的值":["122.3"],"关于类型":["122.3"],"我们约定了k的取值范围只能来自终于t的key值":["122.3"],"使用其它的类型会报错":["122.3"],"️注意":["122.4"],"此时定义接口类型时候":["122.4"],"需要传入泛型的类型":["122.4"],"使用泛型混入":["123.1"],"方便之后复用":["123.1"],"mixinuserinfo":["123.1"],"类型的含义是通过调用混合类型":["123.1"],"先将共同的部分iuserbaseinfo类型先混入进去":["123.1"],"整合成新类型":["123.1"],"方便给具体的":["123.1"],"来调用":["123.1"],"irecordconfig":["123.1"],"是把":["123.1"],"整合成一个类型":["123.1"],"减少不必要的类型定义":["123.1"],"最终使用的时候的类型":["123.1"],"recordconfiglist":["123.1"],"pet":["123.2"],"正常运行":["123.2"],"类型中没有这个属性":["123.2"],"tofixed":["123.4"],"这个类型":["123.5"],"之后调用bark方法":["123.5"],"类型":["123.6","123.12"],"fly":["123.7"],"被定义为类型":["123.9"],"的别名":["123.9"],"因此变量":["123.9"],"可以互相赋值":["123.9"],"因为它们实际上都是指向相同的类型":["123.9"],"尽管在代码中看起来好像创建了两个不同的类型":["123.9"],"但在":["123.9"],"视角下":["123.9"],"它们实际上是完全相同的类型":["123.9"],"opens":["123.10"],"new":["123.10"],"window":["123.10"],"你应该尽量去使用接口代替类型别名":["123.10"],"如果无法通过接口来描述一个类型并且需要使用联合类型或元组类型":["123.10"],"这个时候通常会使用类型别名":["123.10"],"可以更好地约束数组的结构":["123.11"],"提高代码的类型安全性":["123.11"],"当访问超出已知索引的元素时":["123.11"],"会返回元组包含的类型的所有联合类型":["123.11"],"我们通过数组解构的语法":["123.12"],"将除去首位字符的元素推断成一个新类型":["123.12"],"如果这个":["123.12"],"存在":["123.12"],"那么就返回这个新类型":["123.12"],"否则就返回":["123.12"],"var":["125.0"],"认证结果":["125.0"],"调用接口":["125.0"],"人脸核验的交互方式":["125.0"],"默认0":["125.0"],"err":["125.0"],"请保持光线充足":["125.0"],"面部正对手机":["125.0"],"且无遮挡":["125.0"],"链表结构":["127.1"],"遍历链表并将节点值以数字形式返回":["127.4"],"result":["127.4"],"push":["127.4"],"假定你在一个列表中有一个对象并且希望所有其它对象迭代在一个非特殊的排列下":["127.5"],"指向整个列表的指针可以被称作":["127.5"],"访问指针":["127.5"],"values":["127.6"],"需要转换为链表的值的数组":["127.6"],"从数组创建链表":["127.6"],"formarray":["127.6"],"将链表转换为字符串":["127.6"],"node":["127.6"],"反转链表":["127.6"],"currnode":["127.6"],"prevnode":["127.6"],"nexnode":["127.6"],"存储下一个节点":["127.6"],"改变当前节点的下一个节点":["127.6"],"是其链接到上一个节点":["127.6"],"将prevnode和currnode节点向前移动一步":["127.6"],"重置头部和尾部节点":["127.6"],"webpack引入了一些性能优化":["129.0"],"包括更快地持久化缓存":["129.0"],"更快地构建速度等":["129.0"],"移除废弃特性":["129.0"],"做未更新":["129.0"],"webpack移除了一些过时的特性和api":["129.0"],"因此再升级时需要注意潜在的破坏性变化":["129.0"],"这样的条件跳转语句":["130.1"],"可以使用带有三个分支的节点来表示":["130.1"],"literal":["130.2"],"raw":["130.2"],"sourcetype":["130.2"],"module":["130.2"],"数据":["130.4"],"根据语法规则转为":["130.4"],"ast":["130.4"],"同时也会去验证语法":["130.4"],"语法有错的话会抛出语法错误":["130.4"],"其它文件编译成javassript":["131.1"],"包含loader的sourcemap":["131.4"],"比如jsx":["131.4"],"babel的sourcemap":["131.4"],"map经过base64编码作为datauri嵌入":["131.4"],"这个配置项比较少见":["131.4"],"处理后的结果":["131.5"],"会保留loader处理前后文件信息的映射":["131.5"],"解决了通过":["131.5"],"关键字导致的无法确定loader处理前源代码的问题":["131.5"],"则会定位到精准代码":["131.7"],"非常快速":["131.8"],"比较快":["131.8"],"快速":["131.8"],"慢":["131.8"],"中等":["131.8"],"比较慢":["131.8"],"hidden":["131.9"],"unocss中文官网":["133.1"],"部分所述":["134.1"],"工作树文件将包括一个冲突的描述":["134.1"],"该描述被通常的冲突标记使用":["134.1"],"括起来":["134.1"],"不做其它修改":["134.1"],"可以迅速将这些有价值的更改推广到其它相关分支":["134.2"],"但是不要进行任何":["134.3"],"或者会结束后续的":["134.3"],"过程":["134.3"],"如果进行":["134.3"],"则提交内容直接应用到当前分支了":["134.3"],"解决完所有冲突后":["134.3"],"继续完成":["134.3"],"pick过程":["134.3"],"如果在解决冲突后决定不再应用次补丁":["134.3"],"可以取消":["134.3"],"如果你想clone别人的github项目到本地":["135.1"],"那么需要通过github先fork别人的项目到自己的github仓库中":["135.1"],"fork完之后":["135.1"],"进入自己的本地的git项目仓库":["135.1"],"firspro":["135.1"],"clone":["135.1"],"githubrepository":["135.1"],"githubrepository输入的是github上fork完项目之后":["135.1"],"点击":["135.1"],"or":["135.1"],"download":["135.1"],"复制的那个ssh的项目地址":["135.1"],"这样就初始化完成":["135.1"],"并且可以自由fork项目了":["135.1"],"的用法":["136.1"],"force的快捷键":["136.2"],"force":["136.2"],"强制":["136.2"],"move":["136.2"],"移动或重命名":["136.2"],"remote":["136.2"],"远程":["136.2"],"所有":["136.2"],"删除":["136.3"],"和绿色":["136.3"],"新增":["136.3"],"我们可以通过这些信息来判断是否产生冲突":["136.3"],"以确定是否将更新merge到当前分支":["136.3"],"next":["136.4"],"再次查看提交历史":["137.2"],"lg":["137.2"],"现在远端master":["137.2"],"远端head":["137.2"],"本地master全部统一":["137.2"],"问题解决":["137.2","137.3"],"方式二":["137.2"],"直接执行":["137.2"],"效果与上面是一致的":["137.2"],"也是最近才发现":["137.2"],"推荐使用":["137.2"],"updating":["137.3"],"fast":["137.3"],"changed":["137.3"],"insertion":["137.3"],"再次查看一下提交历史":["137.3"],"master上也是一条直线了":["137.3"],"最后收个尾":["137.3"],"删除掉feature分支":["137.3"],"deleted":["137.3"],"was":["137.3"],"于是我们可以将feature分支的提交合并后然后再merge到主干这样看起来就清爽多了":["138.0"],"我们需要进入编辑状态":["138.2"],"删掉或者注释掉第二次提交和第三次提交的信息":["138.2"],"这样最终只留下了第一次提交":["138.2"],"输入wq命令保存":["138.2"],"查看一下最终的提交信息":["138.2"],"log提交信息":["138.2"],"现在只留下第一次提交的信息了":["138.2"],"之后就可以正常合并到主分支上了":["138.2"],"但查找时不方便识别":["139.3"],"checked":["139.4"],"就可以了":["139.10"],"如下":["139.10"],"1684753035449":["139.10"]}]'},t={"0.0":{t:"# N数之和",p:`
请用算法实现，从给定的无需、不重复的数组A中，取出N个数，使其相加和为M。并给出算法的时间、空间复杂度，如：
var ar ...`,l:"algorithm/N数字之和.html",a:"n数之和"},"1.0":{t:"# 一些整理的算法",p:`!Algorithm
`,l:"algorithm/index.html",a:"一些整理的算法"},"2.0":{t:"# 三数之和",p:`
给你一个包含n个整数的数组nums，判断nums中是否存在三个元素a,b,c ，使得 a + b + c = 0 ？请你找 ...`,l:"algorithm/三数之和.html",a:"三数之和"},"3.0":{t:"# 两数之和",p:`
给定一个整数数组nums和一个目标值 target ，请你在该数组中找出和为目标值的那 两个 整数，并返回它们的数组下标。 ...`,l:"algorithm/两数之和.html",a:"两数之和"},"4.0":{t:"# 删除有序数组中的重复项",p:`
给你一个 非严格递增排列 的数组 nums ，请你 原地 删除重复出现的元素，使每个元素 只出现一次 ，返回删除后数组的新 ...`,l:"algorithm/删除有序数组中的重复项.html",a:"删除有序数组中的重复项"},"5.0":{t:"# 合并两个有序数组",p:`
给你两个有序整数数组nums1和nums2，请你将nums2合并到nums1中，使num1成为一个有序数组。

说明:
初 ...`,l:"algorithm/合并两个有序数组.html",a:"合并两个有序数组"},"6.0":{t:"# 寻找数组中最长驼峰",p:`给定一个纯数字数组，原地生成一个最长驼峰子数组（元素大小从中间向两侧递减）

示例

// 原数组
const arr =  ...`,l:"algorithm/寻找数组中最长驼峰.html",a:"寻找数组中最长驼峰"},"7.0":{t:"# 搜索插入位置",p:`
给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引
如果目标值不存在于数组中，返回它将会被按顺序插入的位置

 ...`,l:"algorithm/搜索插入位置.html",a:"搜索插入位置"},"8.0":{t:"# 移除元素",p:`
给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于val的元素，并返回移除后数组的新长度。
不要使用 ...`,l:"algorithm/移除元素.html",a:"移除元素"},"9.0":{t:"# 计数器",p:`
给定一个整型参数n，请你编写并返回一个counter函数。这个counter函数最初返回n，每次调用它时会返回前一个值加1 ...`,l:"algorithm/计数器.html",a:"计数器"},"10.0":{t:"# 数组中心下标索引",p:`
给你一个整数数组nums，请计算数组的中心下标
数组中心下标是数组的一个下标，其左侧所有元素相加的和等于右侧所有元素相加的 ...`,l:"algorithm/计算中心下标索引.html",a:"数组中心下标索引"},"11.0":{t:"# 首位不重复字符索引",p:`
给定一个字符串，找到它的第一个不重复的字符，并返回它的索引。如果不存在，则返回 -1。

示例

  let str1 = ...`,l:"algorithm/首位不重复字符索引.html",a:"首位不重复字符索引"},"12.0":{t:"# 学习AngularJS 1.x",p:"",l:"frame/angular/Introduction.html",a:"学习angularjs-1-x"},"12.1":{t:"Learning AngularJS 1.x",p:`本书是我在学习和应用AngularJS 1.x 的过程中的资料梳理。希望能对大家学习AngularJS有一定帮助。
如果您在 ...`,l:"frame/angular/Introduction.html#learning-angularjs-1-x",a:"learning-angularjs-1-x"},"12.2":{t:"本书地址",p:`本书使用GitBook和GitHub托管。
GitBook地址：hairui219/learning_angular
Git ...`,l:"frame/angular/Introduction.html#本书地址",a:"本书地址"},"12.3":{t:"章节目录",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/Introduction.html#章节目录",a:"章节目录"},"12.4":{t:"本书的读者",p:"本书会介绍如何应用AngularJS，但是本书不会涉及到JavaScript语法以及HTML和CSS的布局模式。因此，本书对 ...",l:"frame/angular/Introduction.html#本书的读者",a:"本书的读者"},"12.5":{t:"我应用AngularJS的方法",p:"在进行前端开发的工作之前，我担任过几年的移动互联网产品经理，设计了几款应用（参与了一小部分的开发工作）。之后我改做应用和手机 ...",l:"frame/angular/Introduction.html#我应用angularjs的方法",a:"我应用angularjs的方法"},"12.6":{t:"这样做的好处",p:`这样实现后，我认为主要有以下几个方面的好处：

数据通过API(https)获取，过程并不向用户开放，起到了隐蔽后端服务器的 ...`,l:"frame/angular/Introduction.html#这样做的好处",a:"这样做的好处"},"12.7":{t:"为什么选择AngularJS 1.x",p:`对于选择AngularJS，业(zhi)界(hu)其实有一个调侃的说法：

写Java的写不来JavaScript的用Ang ...`,l:"frame/angular/Introduction.html#为什么选择angularjs-1-x",a:"为什么选择angularjs-1-x"},"12.8":{t:"我选择AngularJS的历程",p:`
以下内容部分读者可能会感到有些偏激，但是这是对我（一个拥有一些其它编程经验的前端入门者）的心路记录。

2015年初，在准 ...`,l:"frame/angular/Introduction.html#我选择angularjs的历程",a:"我选择angularjs的历程"},"12.9":{t:"为什么写这本书",p:"由于业务需要，我准备重新制作网站的v2版本。在这个版本中，会有很多新的功能需求（功能扩大非常多）。因此，完全重构整个网站是可 ...",l:"frame/angular/Introduction.html#为什么写这本书",a:"为什么写这本书"},"12.10":{t:"另：为什么没有选择Angular 2",p:"其实在重构时，我优先的选择是Angular 2 &amp; TypeScript。因为它引入了很多新的特性，比如应用了最新的 ...",l:"frame/angular/Introduction.html#另-为什么没有选择angular-2",a:"另-为什么没有选择angular-2"},"12.11":{t:"版权声明 LICENSE",p:`署名-非商业性使用 4.0 国际
版权所有 (c) 2016 Harry&lt;harry@andtoo.net&gt;
本 ...`,l:"frame/angular/Introduction.html#版权声明-license",a:"版权声明-license"},"13.0":{t:"# Summary",p:`

简介


环境的准备


项目的创建和配置


AngularJS的第一步


学习和使用AngularJS

基本表达 ...`,l:"frame/angular/SUMMARY.html",a:"summary"},"14.0":{t:"环境的准备",p:`======
开发Web网站，使用合适的工具和环境会极大的提升开发的效率。本章将讲述如何准备用于AngularJS项目开发的 ...`,l:"frame/angular/chapter01.html",a:"环境的准备"},"14.1":{t:"WebStorm",p:"在过去的开发中，WebStorm一直是我对编辑器的首选。WebStorm是商业化的产品，如果长期使用，需要花钱购买（目前已经 ...",l:"frame/angular/chapter01.html#webstorm",a:"webstorm"},"14.2":{t:"Chrome",p:"Chrome浏览器的开发者工具可以极大的方便开发时的调试工作，目前国内大量浏览器也是基于Chrome的开源内核开发，在通用性 ...",l:"frame/angular/chapter01.html#chrome",a:"chrome"},"14.3":{t:"Node.js",p:"Node.js在本书中主要的使用用途是运行bower工具，用以安装AngularJS极其相关的库文件。通过官网可以直接下载N ...",l:"frame/angular/chapter01.html#node-js",a:"node-js"},"14.4":{t:"其它工具",p:"在安装好Node.js后，可以通过Node.js的npm命令安装最新版本的npm/cnpm/bower(如果已经存在，自动安 ...",l:"frame/angular/chapter01.html#其它工具",a:"其它工具"},"14.5":{t:"其它工具和库",p:`其它的工具和库，我们将不再需要从网站上下载安装，直接通过bower在项目内进行下载使用。
`,l:"frame/angular/chapter01.html#其它工具和库",a:"其它工具和库"},"15.0":{t:"# 项目的创建和配置",p:"使用WebStorm可以直接创建AngularJS项目，且会自动帮助你配置好项目并自动下载AngularJS等库。但是我们这 ...",l:"frame/angular/chapter02.html",a:"项目的创建和配置"},"15.1":{t:"创建基本的文件结构",p:`首先建立一个public目录，并在public目录中建立js、css、img三个目录。如下图所示：
!图2-2 创建目录
大 ...`,l:"frame/angular/chapter02.html#创建基本的文件结构",a:"创建基本的文件结构"},"15.2":{t:"`public`目录设置的意义",p:"从字面意思即可理解，public目录是用来存放供外部用户访问的内容的根目录。非public目录下的内容，既是我们不期望用户通 ...",l:"frame/angular/chapter02.html#public-目录设置的意义",a:"public-目录设置的意义"},"15.3":{t:"配置并初始化bower",p:"bower的配置可以通过手动创建文件或者命令行的方法来进行。我推荐使用命令行的方式来进行创建，这样可以更好的理解配置生成的文 ...",l:"frame/angular/chapter02.html#配置并初始化bower",a:"配置并初始化bower"},"15.4":{t:"打开命令行工具",p:`WebStorm内置了命令行工具（调用系统的命令行功能），在左下角点击Terminal即可启用。
!图2-3 命令行工具
`,l:"frame/angular/chapter02.html#打开命令行工具",a:"打开命令行工具"},"15.5":{t:"初始化bower",p:`在命令行下运行bower init，你将会看到如下的若干选项，并会自动的在项目的根目录生成一个bower.json。
注：以 ...`,l:"frame/angular/chapter02.html#初始化bower",a:"初始化bower"},"15.6":{t:"`.bowerrc`配置文件",p:"由于我们建立了public目录，并且项目的根目录与网站根目录不同，因此，我们需要新建一个额外的.bowerrc文件，告诉bo ...",l:"frame/angular/chapter02.html#bowerrc-配置文件",a:"bowerrc-配置文件"},"15.7":{t:"配置完成",p:`至此，我们对bower的配置已经全部结束！现在项目看起来应该长这个样子：
!图2-4 Bower配置完成后
`,l:"frame/angular/chapter02.html#配置完成",a:"配置完成"},"16.0":{t:"# AngularJS的第一步",p:"在前面的章节，我们已经创建好了项目，并配置好了bower工具。本章开始，我们将进入正式的学习使用AngularJS的过程。首 ...",l:"frame/angular/chapter03.html",a:"angularjs的第一步"},"16.1":{t:"在项目中安装AngularJS的基本库",p:`AngularJS官网提供了通过Bower安装的命令行，我们需要做的，就是在WebStorm的命令行工具中，运行如下命令：
 ...`,l:"frame/angular/chapter03.html#在项目中安装angularjs的基本库",a:"在项目中安装angularjs的基本库"},"16.2":{t:"建立`index.html`文件",p:"在./public目录下建立index.html文件（右键public目录，New &gt; HTML File，然后输入i ...",l:"frame/angular/chapter03.html#建立-index-html-文件",a:"建立-index-html-文件"},"16.3":{t:"引入AngularJS的库文件",p:`引入AngularJS库文件很简单，一行HTML语言加入HTML的head部分即可：


注：这里引入的angular.js ...`,l:"frame/angular/chapter03.html#引入angularjs的库文件",a:"引入angularjs的库文件"},"16.4":{t:"第一个程序Hello World",p:"是时候来测试下我们是否成功的引入了AngularJS了。我们在&lt;body/&gt;元素中加入一个ng-app=&quo ...",l:"frame/angular/chapter03.html#第一个程序hello-world",a:"第一个程序hello-world"},"16.5":{t:"运行Hello World",p:"右键选择index.html，然后选择 run &quot;index.html&quot;，然后你就可以在新打开的浏览器中 ...",l:"frame/angular/chapter03.html#运行hello-world",a:"运行hello-world"},"17.0":{t:"# 学习AngularJS的规划",p:`我们已经完成了基本的准备工作，从本章开始，我们将专注于学习和应用AngularJS。
作为一个功能完整的框架，Angular ...`,l:"frame/angular/chapter04.html",a:"学习angularjs的规划"},"18.0":{t:"# 基本表达式",p:`在第三章的结尾，我们制作了一个基本的Hello World应用。在其中，我们使用了如下的语法：
&lt;h1&gt;{{&q ...`,l:"frame/angular/chapter04_1.html",a:"基本表达式"},"19.0":{t:"# 引入`ng-include`和模板`ng-template`",p:"引入ng-include和模板ng-template是定义和使用HTML代码碎片的功能。用于将HTML切碎分别存储，并根据需 ...",l:"frame/angular/chapter04_10.html",a:"引入-ng-include-和模板-ng-template"},"19.1":{t:"引入`ng-include`",p:"当HTML代码过于复杂，或者期望建立单页应用(Single-page Application - SPA)时，需要将部分HT ...",l:"frame/angular/chapter04_10.html#引入-ng-include",a:"引入-ng-include"},"19.2":{t:"其它属性",p:`ng-include还有onload和autoscroll的属性。
但是我目前不清楚具体的使用方法和效果，如果有读者清楚，可 ...`,l:"frame/angular/chapter04_10.html#其它属性",a:"其它属性"},"19.3":{t:"模板`ng-template`",p:`ng-template用于将多个HTML片段存放于一个HTML文件中。并且可以根据需求分别调用其中的某一个片段。
ng-te ...`,l:"frame/angular/chapter04_10.html#模板-ng-template",a:"模板-ng-template"},"20.0":{t:"# AngularJS初始化`ng-app`",p:`本节我们将学习基本的ng-app初始化。
ng-app可以将网页自动初始化为一个AngularJS应用，这样你才能在网页中使 ...`,l:"frame/angular/chapter04_2.html",a:"angularjs初始化-ng-app"},"20.1":{t:"创建一个独立的JavaScript文件，并在HTML中引用",p:`在./public/js目录中新建一个app.js文件，并填入如下代码：
var App = angular.module( ...`,l:"frame/angular/chapter04_2.html#创建一个独立的javascript文件-并在html中引用",a:"创建一个独立的javascript文件-并在html中引用"},"20.2":{t:"AngularJS的作用域",p:"ng-app标签可以放置在&lt;html&gt;标签或者&lt;body&gt;标签上，也可以放置在HTML页面的任何一个 ...",l:"frame/angular/chapter04_2.html#angularjs的作用域",a:"angularjs的作用域"},"20.3":{t:"引入文件的顺序",p:"引入JavaScript文件的顺序是有差异的，如果我们将上面代码的angular.js和app.js文件呼唤，那么网页将不能 ...",l:"frame/angular/chapter04_2.html#引入文件的顺序",a:"引入文件的顺序"},"21.0":{t:"# 控制器`ng-controller`",p:"控制器ng-controller是使用AngularJS的核心功能之一。在前一节我们已经了解了作用域的概念，ng-contr ...",l:"frame/angular/chapter04_3.html",a:"控制器-ng-controller"},"21.1":{t:"`ng-controller`详解",p:"",l:"frame/angular/chapter04_3.html#ng-controller-详解",a:"ng-controller-详解"},"21.2":{t:"JavaScript部分",p:`我们先分析ng-controller的JavaScript编码部分
//原有的ng-app声明部分
var App = an ...`,l:"frame/angular/chapter04_3.html#javascript部分",a:"javascript部分"},"21.3":{t:"`function($scope)`详解",p:"funtion(){}封装的函数，会被绑定到FirstCtrl上。这个概念相对容易理解，我们需要注意的，是我们在functi ...",l:"frame/angular/chapter04_3.html#",a:""},"21.4":{t:"HTML中调用`ng-controller`中的数据",p:`&lt;h1&gt;{{data.message + &quot; World!&quot;}}&lt;/h1&gt;

在 ...`,l:"frame/angular/chapter04_3.html#html中调用-ng-controller-中的数据",a:"html中调用-ng-controller-中的数据"},"21.5":{t:"为什么要额外封装一层",p:`在AngularJS中，最简单传入数据的方法其实可以更简单，但是不推荐这样做。
最简单的做法
//JavaScript
$s ...`,l:"frame/angular/chapter04_3.html#为什么要额外封装一层",a:"为什么要额外封装一层"},"22.0":{t:"# 数据绑定data-binding",p:"上一节我们介绍了如何将ng-controller的数据显示在HTML当中，但是我们如何在页面中修改这些数据呢？这一步操作也很 ...",l:"frame/angular/chapter04_4.html",a:"数据绑定data-binding"},"22.1":{t:"功能的绑定",p:`界面操作里面还有一个重要的功能，就是界面上按钮的与控制器中的函数进行绑定。这个也很容易实现：
App.controller( ...`,l:"frame/angular/chapter04_4.html#功能的绑定",a:"功能的绑定"},"22.2":{t:"更多地方的绑定",p:`除了用于显示信息外，数据绑定还可用于其它地方。比如，下面的例子用于根据输入来调整样式：
&lt;!DOCTYPE html& ...`,l:"frame/angular/chapter04_4.html#更多地方的绑定",a:"更多地方的绑定"},"23.0":{t:"# 条件判断 `ng-if` / `ng-show` / `ng-hide`",p:`本节我们将学习的是如何通过变量来控制HTML是否显示。
这三个语句具体的用法如下：
在$scope.data中添加flag变 ...`,l:"frame/angular/chapter04_5.html",a:"条件判断-ng-if-ng-show-ng-hide"},"23.1":{t:"`ng-if`与`ng-show`/`ng-hide`的区别",p:`虽然效果看起来类似，但ng-if的工作模式与ng-show/ng-hide不一样。
如果使用ng-if来控制元素是否显示，则 ...`,l:"frame/angular/chapter04_5.html#ng-if-与-ng-show-ng-hide-的区别",a:"ng-if-与-ng-show-ng-hide-的区别"},"23.2":{t:"冒号中的表达式",p:`例子中使用了data.flag直接作为判断依据，但是以上三个标签都支持传入表达式。
比如以下的表达式都可以作为冒号中的表达方 ...`,l:"frame/angular/chapter04_5.html#冒号中的表达式",a:"冒号中的表达式"},"24.0":{t:"# 重复语句 `ng-repeat`",p:`本节将讲述如何使用ng-repeat对一个列表的数据进行遍历并显示出来。
首先，我们准备如下的数据。这是一个包括三个obje ...`,l:"frame/angular/chapter04_6.html",a:"重复语句-ng-repeat"},"24.1":{t:"$index",p:"在实际的使用场景中，如果我们使用一个表格来管理信息，那么可能表格的每一行都会有一些对应的操作功能（如编辑、删除）等。那么，我 ...",l:"frame/angular/chapter04_6.html#index",a:"index"},"25.0":{t:"# 过滤器 `filter`",p:`过滤器是AngularJS的另一项强大的功能，如果能使用好它，能够帮助我们极大的节省工作量。
以下是几个应用filter的例 ...`,l:"frame/angular/chapter04_7.html",a:"过滤器-filter"},"25.1":{t:"多个filter同时应用",p:`AngularJS支持多个filter同时应用，比如以下的例子：
{{ list | orderBy:'name' | js ...`,l:"frame/angular/chapter04_7.html#多个filter同时应用",a:"多个filter同时应用"},"25.2":{t:"创建自己的过滤器",p:`自己创建自定义的过滤器也很简单，我们下面尝试自己制作一个将文字全部翻转过来的过滤器。
在app.js中增加如下代码：
//a ...`,l:"frame/angular/chapter04_7.html#创建自己的过滤器",a:"创建自己的过滤器"},"25.3":{t:"通过`filter`进行搜索",p:"AngularJS提供了通过filter的搜索功能。当然，这个搜索功能并不是非常常用，因为搜索工作现在一般在服务端完成。如果 ...",l:"frame/angular/chapter04_7.html#通过-filter-进行搜索",a:"通过-filter-进行搜索"},"25.4":{t:"一些值得注意的用法",p:`


用法
效果




searchText = &quot;T&quot;
搜索所有字段


searchText =  ...`,l:"frame/angular/chapter04_7.html#一些值得注意的用法",a:"一些值得注意的用法"},"26.0":{t:"# 样式选择器 `ng-class`/`ng-style`",p:"",l:"frame/angular/chapter04_8.html",a:"样式选择器-ng-class-ng-style"},"26.1":{t:"`ng-class`",p:`通过ng-class，我们可以对界面元素的css样式进行控制。下面，让我们通过示例来看看功能如何实现：

此示例来源于官网的 ...`,l:"frame/angular/chapter04_8.html#ng-class",a:"ng-class"},"26.2":{t:"动态化的样式输入",p:"在上方的示例中，我们是针对提前设定好的样式进行是否生效的判断。除了这种使用方式，ng-class还支持直接传入字符串的方式进 ...",l:"frame/angular/chapter04_8.html#动态化的样式输入",a:"动态化的样式输入"},"26.3":{t:"结合两种模式的应用示例",p:`这两种模式也可以结合使用，示例如下：
&lt;p ng-class=&quot;[data.style, {orange:  ...`,l:"frame/angular/chapter04_8.html#结合两种模式的应用示例",a:"结合两种模式的应用示例"},"26.4":{t:"CSS动画效果应用",p:`我们先在_style.css_中加入css的动画效果代码：
.base-class {
    transition:all ...`,l:"frame/angular/chapter04_8.html#css动画效果应用",a:"css动画效果应用"},"26.5":{t:"`ng-style`",p:`ng-style提供的功能比ng-class要少一些，只支持样式的传入。我们可以使用以下两种模式：
&lt;span ng- ...`,l:"frame/angular/chapter04_8.html#ng-style",a:"ng-style"},"27.0":{t:"# 下拉列表选项 `ng-options`",p:"在学习了ng-repeat过后，我们其实已经可以用循环的方式实现下拉列表的选项。但是，AngularJS提供了ng-opti ...",l:"frame/angular/chapter04_9.html",a:"下拉列表选项-ng-options"},"27.1":{t:"增加未选中的选项",p:`在很多时候，我们期望能有一个没选中的选项。我们可以通过手动的方式添加这个选项：
&lt;select ng-model=&q ...`,l:"frame/angular/chapter04_9.html#增加未选中的选项",a:"增加未选中的选项"},"27.2":{t:"按组排列`group by`",p:`ng-options也支持按组排列数据，使用group by语法，下面我们看看例子：
首先，我们在列表中增加类型字段：
$s ...`,l:"frame/angular/chapter04_9.html#按组排列-group-by",a:"按组排列-group-by"},"27.3":{t:"禁用某些选项`disable when`",p:`ng-options还可以通过disable when语法来设置选项是否可选，同样的，我们需要在列表中先新增字段：
注意，以 ...`,l:"frame/angular/chapter04_9.html#禁用某些选项-disable-when",a:"禁用某些选项-disable-when"},"27.4":{t:"将对象作为参数传入",p:`在上面的例子中，我们传入的是一个列表array。ng-options也支持以对象object的方式传入数据：
使用objec ...`,l:"frame/angular/chapter04_9.html#将对象作为参数传入",a:"将对象作为参数传入"},"28.0":{t:"# 本章总结",p:`在本章中，我们学习了AngularJS的基本用法。掌握了这些用法，相信大家对于AngularJS已经有了基本的了解。
我建议 ...`,l:"frame/angular/chapter04_summary.html",a:"本章总结"},"29.0":{t:"# 深入学习AngularJS - Directive",p:`在前一章中，我们学习了AngularJS的基本用法。从本章开始，我们将学习&quot;深入&quot;一些的部分。
本章将介 ...`,l:"frame/angular/chapter05.html",a:"深入学习angularjs-directive"},"29.1":{t:"Directive在系统中的使用",p:`其实，Directive作为AngularJS的基本特性，我们已经在前面大量的学习和使用了它。
在第四章中我们学习的ng-a ...`,l:"frame/angular/chapter05.html#directive在系统中的使用",a:"directive在系统中的使用"},"29.2":{t:"学习Directive的路程",p:"本章我们将从最基本的自定义Directive开始，逐渐深入的学习Directive的特性和高级使用方法。由于Directiv ...",l:"frame/angular/chapter05.html#学习directive的路程",a:"学习directive的路程"},"30.0":{t:"# 制作一个自定义的Directive",p:`下面我们将制作我们的第一个自定义Directive。让我们对app.js和index.html进行一些修改：
//app.j ...`,l:"frame/angular/chapter05_1.html",a:"制作一个自定义的directive"},"30.1":{t:"代码分析",p:`以下这段代码用于声明一个Directive：
App.directive(&quot;people&quot;, funct ...`,l:"frame/angular/chapter05_1.html#代码分析",a:"代码分析"},"30.2":{t:"`template`",p:"template相对比较容易理解，在运行网页时，HTML对应的标签，将被替换成对应的内容。我们这里看看替换后实际的HTML代 ...",l:"frame/angular/chapter05_1.html#template",a:"template"},"30.3":{t:"用替换而不是插入的方式应用Directive",p:"如果在配置Directive时，加入replace : true（与restrict和template同级别），则可以让An ...",l:"frame/angular/chapter05_1.html#用替换而不是插入的方式应用directive",a:"用替换而不是插入的方式应用directive"},"30.4":{t:"`restrict`",p:`restrict是告诉AngularJS，这个Directive应该如何使用。
下面这个表格，总结了restrict可能有的 ...`,l:"frame/angular/chapter05_1.html#restrict",a:"restrict"},"31.0":{t:"# Directive的命名和使用规则",p:"在前一节中，我们创建了一个名为&quot;people&quot;的Directive。并且通过 &lt;people&gt ...",l:"frame/angular/chapter05_2.html",a:"directive的命名和使用规则"},"31.1":{t:"命名规则",p:"AngularJS要求Directive的命名使用驼峰式语法，也就是从第二个单词开始，每个单词的首字母大写，并且不使用连接符 ...",l:"frame/angular/chapter05_2.html#命名规则",a:"命名规则"},"31.2":{t:"使用规则",p:`在HTML代码中，使用的是连接符的形式，下面我们对比看看命名和使用的对应字符串：



命名
使用




people
p ...`,l:"frame/angular/chapter05_2.html#使用规则",a:"使用规则"},"31.3":{t:"为什么会有这种差异",p:`命名和用法不同的核心原因，是因为HTML对大小写不敏感，而JavaScript对大小写敏感。
为了保证HTML和JavaSc ...`,l:"frame/angular/chapter05_2.html#为什么会有这种差异",a:"为什么会有这种差异"},"31.4":{t:"怎么实现的？",p:`AngularJS在解析HTML时，会将名称取出（如people-list-array)，并进行一下两个方面的处理：

去除 ...`,l:"frame/angular/chapter05_2.html#怎么实现的",a:"怎么实现的"},"31.5":{t:"连接符",p:`在前面的讲解中，我们讲解示例时，使用的连接符全部都为减号。但实际上，AngularJS支持的连接符有:



符号
示例

 ...`,l:"frame/angular/chapter05_2.html#连接符",a:"连接符"},"31.6":{t:"为什么要先去除`data-/x-`部分",p:"data-/x- 存在的原因是需要符合HTML5标准。如果你使用HTML5验证器来验证我们之前的代码，你可能会看到如下结果( ...",l:"frame/angular/chapter05_2.html#为什么要先去除-data-x-部分",a:"为什么要先去除-data-x-部分"},"32.0":{t:"# 让Directive支持传入数据",p:"在第一节中，我们使用的Directive，可以直接获取并显示控制器中的数据（人的名称和性别）。但是，如果我们有多个人的信息需 ...",l:"frame/angular/chapter05_3.html",a:"让directive支持传入数据"},"32.1":{t:"Directive的`scope`",p:"在之前学习控制器ng-controller的使用过程中，我们使用了$scope功能。$scope用于提供对接HTML和Jav ...",l:"frame/angular/chapter05_3.html#directive的-scope",a:"directive的-scope"},"32.2":{t:"`scope`中的配置",p:`可以看到，在上方的JavaSciprt文件中，我们对scope的定义使用了如下结构：
scope:{
    info: & ...`,l:"frame/angular/chapter05_3.html#scope-中的配置",a:"scope-中的配置"},"32.3":{t:"在一个`ng-ontroller`中放入多个相同的Directive",p:`下面，我们在FirstCtrl中增加几个人的数据，并将它们通过Directive显示出来：
//在FirstCtrl中加入如 ...`,l:"frame/angular/chapter05_3.html#在一个-ng-ontroller-中放入多个相同的directive",a:"在一个-ng-ontroller-中放入多个相同的directive"},"32.4":{t:"通过`ng-repeat`和directive一起显示数据",p:`知道了如何传入数据，那么我们就可以将Directive的使用和ng-repeat结合起来，实现列表显示数据的效果。
我们先将 ...`,l:"frame/angular/chapter05_3.html#通过-ng-repeat-和directive一起显示数据",a:"通过-ng-repeat-和directive一起显示数据"},"32.5":{t:"在Directive中修改控制器中的数据",p:`以上我们看到的示例只是将数据显示了出来，如果我们期望在Directive中修改这些数据如何处理呢？
其实很简单，将templ ...`,l:"frame/angular/chapter05_3.html#在directive中修改控制器中的数据",a:"在directive中修改控制器中的数据"},"32.6":{t:"以只读的方式传入数据",p:`除了以等号=直接传入对象之外，Directive也支持直接传入文本，使用@符号。
App.directive(&quot;p ...`,l:"frame/angular/chapter05_3.html#以只读的方式传入数据",a:"以只读的方式传入数据"},"32.7":{t:"在Directive中进行函数回调",p:"上面我们介绍了等号=和@符号的使用方法，它们分别对应传入对象和文本。但是，如果我们期望传入一个回调函数呢？这样我们就可以实现 ...",l:"frame/angular/chapter05_3.html#在directive中进行函数回调",a:"在directive中进行函数回调"},"33.0":{t:"# 使用`templateUrl`获取模板",p:"有些时候，Directive中的模板template会变得很大，如果仍然放置在定义中，那么可能会造成阅读和修改不方便的情况。 ...",l:"frame/angular/chapter05_4.html",a:"使用-templateurl-获取模板"},"33.1":{t:"`ng-template`",p:"除了直接将HTML部件存储为独立的文件，我们也可以直接使用AngularJS提供的ng-template功能。这点在第四章中 ...",l:"frame/angular/chapter05_4.html#ng-template",a:"ng-template"},"33.2":{t:"使用函数获取templateUrl",p:`templateUrl的特性与我们在第四章学习的ng-include类似，也支持通过函数来获取最终的url地址。例如：
Ap ...`,l:"frame/angular/chapter05_4.html#使用函数获取templateurl",a:"使用函数获取templateurl"},"34.0":{t:"# 让Directive动起来`link()`",p:"在前面几节中，我们都是在学习如何配置Directive。下面，我们将开始学习Directive最灵活的部分，link()函数 ...",l:"frame/angular/chapter05_5.html",a:"让directive动起来-link"},"34.1":{t:"`element`",p:`从element被转义成json的文本中很难获取任何实质的信息，但是，这里才是整个Directive中的核心部分。
`,l:"frame/angular/chapter05_5.html#element",a:"element"},"34.2":{t:"`element`与jQuery的关系",p:"在Directive中，我们不免需要对页面元素进行操作。为了提供这项功能，AngularJS几乎原版搬运了jQuery操作元 ...",l:"frame/angular/chapter05_5.html#element-与jquery的关系",a:"element-与jquery的关系"},"34.3":{t:"在AngularJS中使用jQuery",p:`安装和使用jQuery共有两步：

通过bower安装jQuery

bower install jquery --save ...`,l:"frame/angular/chapter05_5.html#在angularjs中使用jquery",a:"在angularjs中使用jquery"},"34.4":{t:"实际体验`element`的功能",p:`我们在引入jQuery后，可以通过如下代码查看效果：

这里需要注意的是，使用jqLite的方法和以下代码中使用的方法是不一 ...`,l:"frame/angular/chapter05_5.html#实际体验-element-的功能",a:"实际体验-element-的功能"},"34.5":{t:"在`element`上绑定鼠标移入移出时的变化效果",p:`App.directive(&quot;formDirective&quot;, function () {
    ret ...`,l:"frame/angular/chapter05_5.html#在-element-上绑定鼠标移入移出时的变化效果",a:"在-element-上绑定鼠标移入移出时的变化效果"},"35.0":{t:"# 把Directive变为一个容器`transclude`",p:"在前面我们使用到的Directive，都会将包含有Directive的元素整体替换为template中的内容。这样，就让Di ...",l:"frame/angular/chapter05_6.html",a:"把directive变为一个容器-transclude"},"36.0":{t:"# Directive之间互相通讯",p:"本节是Directive的高级使用方法之一，通过赋予Directive之间互相通讯的功能，我们可以将部件的抽象化提升到一个更 ...",l:"frame/angular/chapter05_7.html",a:"directive之间互相通讯"},"37.0":{t:"# 本章总结",p:"本章讲述的内容是AngularJS的核心内容之一，并且对于之前前端开发经验不足的读者可能会造成一些学习上的困难。但是我建议各 ...",l:"frame/angular/chapter05_summary.html",a:"本章总结"},"38.0":{t:"# Angular1.x 相关知识点",p:`Angular1.x相关的文档来自于 learning_angular仓库
learning_angular仓库
`,l:"frame/angular/index.html",a:"angular1-x-相关知识点"},"39.0":{t:"# 框架相关",p:"",l:"frame/index.html",a:"框架相关"},"40.0":{t:"# SSR相关",p:"",l:"frame/react/SSR相关.html",a:"ssr相关"},"40.1":{t:"对于SSR的理解",p:`

对SEO友好
爬虫获取到的是已经异步执行完成后得到的有数据的HTML


所有模板、图片资源都存储在服务器端


一个H ...`,l:"frame/react/SSR相关.html#对于ssr的理解",a:"对于ssr的理解"},"40.2":{t:"SSR的局限",p:`
服务端压力大: 正常是通过客户端去渲染、现在统一到服务端Node去做。 尤其是遇到高并发访问的情况， 会大量占用服务端CP ...`,l:"frame/react/SSR相关.html#ssr的局限",a:"ssr的局限"},"41.0":{t:"# React 相关",p:`!React
`,l:"frame/react/index.html",a:"react-相关"},"42.0":{t:"# React一些相关",p:"",l:"frame/react/react常用特性.html",a:"react一些相关"},"42.1":{t:"React 和 Vue的区别",p:`
vue是双向绑定， react是单向数据流
在vue中我们组合不同功能的方式是通过Composition API、mixi ...`,l:"frame/react/react常用特性.html#react-和-vue的区别",a:"react-和-vue的区别"},"42.2":{t:"React 设计思想",p:`
组件化

每个组件都符合开放 - 封闭原则， 封闭是针对渲染工作流来说，指的是组件内部的状态都由自身维护，只处理内部渲染逻 ...`,l:"frame/react/react常用特性.html#react-设计思想",a:"react-设计思想"},"42.3":{t:"React生命周期",p:`在16.8 hooks版本之前， React的生命周期分为组件挂载阶段、组件更新阶段、组件卸载阶段

挂载

constru ...`,l:"frame/react/react常用特性.html#react生命周期",a:"react生命周期"},"42.4":{t:"React Hooks与 React Class的区别",p:`
Hooks更加简洁，并且更贴合原生js写法
业务代码更加聚合
逻辑代码方便复用

`,l:"frame/react/react常用特性.html#react-hooks与-react-class的区别",a:"react-hooks与-react-class的区别"},"42.5":{t:"React的严格模式",p:`React的严格模式是在组件外层设置React.scrictMode标签，可以设置到根节点组件外层， 这样可以全局生效。

 ...`,l:"frame/react/react常用特性.html#react的严格模式",a:"react的严格模式"},"42.6":{t:"严格模式优点",p:`
识别不安全的生命周期
关于使用过时字符串 ref API 的警告
关于使用废弃的 findDOMNode 方法的警告
检测 ...`,l:"frame/react/react常用特性.html#严格模式优点",a:"严格模式优点"},"42.7":{t:"React 中页面重新加载怎么保留数据",p:`这个问题就涉及到了数据持久化， 主要有以下几种实现方式：


Redux
将页面数据储存在Redux中， 在页面重新加载时去 ...`,l:"frame/react/react常用特性.html#react-中页面重新加载怎么保留数据",a:"react-中页面重新加载怎么保留数据"},"42.8":{t:"JSX与JS的区别",p:"JSX 是React的语法糖，它允许在html中写js并且不能被浏览器识别， 需要通过webpack、babel之类的变异工 ...",l:"frame/react/react常用特性.html#jsx与js的区别",a:"jsx与js的区别"},"42.9":{t:"React中必须要使用 JSX吗？",p:`React中不强制使用JSX。 当不想在构建环境中配置有关JSX编译时候， 不在React中使用JSX会更加方便，
每个JS ...`,l:"frame/react/react常用特性.html#react中必须要使用-jsx吗",a:"react中必须要使用-jsx吗"},"42.10":{t:"React 处理错误边界(Error Boundaries)",p:"错误边界是一种React组件， 它能够不过并处理子组件中任何位置出现Javascript的错误，并渲染备用UI， 而不是使整 ...",l:"frame/react/react常用特性.html#react-处理错误边界-error-boundaries",a:"react-处理错误边界-error-boundaries"},"42.11":{t:"React 组件为什么要大写",p:"因为JSX语法无法被浏览器所识别， 需要使用Babel去转换为浏览器识别的js， 此时就会有个依据去判断是原生DOM标签还是 ...",l:"frame/react/react常用特性.html#react-组件为什么要大写",a:"react-组件为什么要大写"},"42.12":{t:"React.Fragment",p:`React中组件是不允许返回多个节点的， 要想解决这个问题就需要套一层div标签， 但是这样会多增加一个节点，
所以在16. ...`,l:"frame/react/react常用特性.html#react-fragment",a:"react-fragment"},"42.13":{t:"受控组件、非受控组件",p:`

受控组件就是组组件的改变受控于数据的变化， 数据变了页面也就变了。 受控组件更合适，数据驱动是React的核心。
当需要 ...`,l:"frame/react/react常用特性.html#受控组件、非受控组件",a:"受控组件、非受控组件"},"43.0":{t:"# useEffect和useLayoutEffect的区别",p:`

useEffect: 执行时机是在React的渲染和提交阶段之后，这意味着当任何相关DOM更改被应用并且组件已经被重新渲 ...`,l:"frame/react/useEffect和useLayoutEffect的区别.html",a:"useeffect和uselayouteffect的区别"},"43.1":{t:"何时使用`useEffect`",p:`
副作用与DOM无关: 例如数据获取、配置订阅，手动更改浏览器的URL等等。
不需要立即同步读取或更改DOM: 如果不关心可 ...`,l:"frame/react/useEffect和useLayoutEffect的区别.html#何时使用-useeffect",a:"何时使用-useeffect"},"43.2":{t:"何时使用`useLayoutEffect`",p:`
需要同步读取或更改DOM: 例如 读取元素的大小或位置 并在渲染前进行调整。
防止闪烁: 在某些情况下，异步的useEff ...`,l:"frame/react/useEffect和useLayoutEffect的区别.html#何时使用-uselayouteffect",a:"何时使用-uselayouteffect"},"43.3":{t:"使用注意事项",p:`
避免过度使用useLayoutEffect,因为它是同步的，可能会影响应用的性能。只有当确实需要同步操作DOM的时候才会使 ...`,l:"frame/react/useEffect和useLayoutEffect的区别.html#使用注意事项",a:"使用注意事项"},"44.0":{t:"# useReducer",p:"useReducer是React提供的一个高级Hook, 没有它我们也可以正常开发，但是useReducer可以使我们的代码 ...",l:"frame/react/useReducer.html",a:"usereducer"},"44.1":{t:"用法",p:`!useReducer
const [state, dispatch] = useReducer(reducer,initi ...`,l:"frame/react/useReducer.html#用法",a:"用法"},"44.2":{t:"参数",p:"",l:"frame/react/useReducer.html#参数",a:"参数"},"44.3":{t:"reducer",p:"reducer是一个处理函数,用于更新状态，reducer里面包含了两个参数，第一个参数是state, 第二个参数是acti ...",l:"frame/react/useReducer.html#reducer",a:"reducer"},"44.4":{t:"initialArg",p:`initialArg 是 state的初始值
`,l:"frame/react/useReducer.html#initialarg",a:"initialarg"},"44.5":{t:"init",p:"init是一个可选的参数，用于初始化state，如果编写了init函数，则默认值使用init函数的返回值，否则使用initi ...",l:"frame/react/useReducer.html#init",a:"init"},"44.6":{t:"返回值",p:`useReducer返回一个由两个值组成的数组:
`,l:"frame/react/useReducer.html#返回值",a:"返回值"},"44.7":{t:"当前的state",p:`初次渲染时， 他是init(initialArg) 或者initialArg(如果没有init函数)
`,l:"frame/react/useReducer.html#当前的state",a:"当前的state"},"44.8":{t:"dispatch函数",p:`用于更新state并触发组件的重新渲染
import { useReducer } from 'react';

// 根据 ...`,l:"frame/react/useReducer.html#dispatch函数",a:"dispatch函数"},"44.9":{t:"计数器案例",p:`
初始状态(initState):

const initialState = { count: 0 }

这里定义了一个初 ...`,l:"frame/react/useReducer.html#计数器案例",a:"计数器案例"},"44.10":{t:"购物车案例",p:`初始数据(initData)
const initData = [
  { name: '张三', price: 100,  ...`,l:"frame/react/useReducer.html#购物车案例",a:"购物车案例"},"44.11":{t:"参考文档",p:`小满zs useReducer
`,l:"frame/react/useReducer.html#参考文档",a:"参考文档"},"45.0":{t:"# React 组件间的通信",p:"",l:"frame/react/组件通信.html",a:"react-组件间的通信"},"45.1":{t:"父组件调用子组件",p:`⽗组件调⽤⼦组件⽅法
使⽤useImperativeHandle调⽤⼦组件⽅法。
import { useImperativ ...`,l:"frame/react/组件通信.html#父组件调用子组件",a:"父组件调用子组件"},"46.0":{t:"# 虚拟DOM与Diff算法",p:"虚拟DOM相当于是在JS和 真实的DOM之间加了一个缓存， 利用DOM Diff算法避免了没有必要的DOM操作， 从而提高性 ...",l:"frame/react/虚拟DOM.html",a:"虚拟dom与diff算法"},"46.1":{t:"结构对比",p:`React.createElement和 document.createElement
虚拟DOM是一个对象， 而真实的DO ...`,l:"frame/react/虚拟DOM.html#结构对比",a:"结构对比"},"46.2":{t:"流程对比",p:`传统Web应用， 数据的变化会实时地更新到用户界面中， 于是每次数据微小的变化都会引起DOM的重新渲染
在虚拟DOM中， 是 ...`,l:"frame/react/虚拟DOM.html#流程对比",a:"流程对比"},"46.3":{t:"什么是虚拟DOM",p:`虚拟DOM是一个对象， 这个对象是由真实的DOM转化而来:
&lt;div className=&quot;Index&qu ...`,l:"frame/react/虚拟DOM.html#什么是虚拟dom",a:"什么是虚拟dom"},"46.4":{t:"虚拟DOM的优势",p:"",l:"frame/react/虚拟DOM.html#虚拟dom的优势",a:"虚拟dom的优势"},"46.5":{t:"虚拟DOM可以提高效率，开发时不必关注DOM， 只关注业务逻辑",p:"性能提升(牢记浏览器在处理DOM时很慢， 处理JS时很快)， 并且虚拟DOM感受到变化的时候是通过局部更新而非整体，从而减少 ...",l:"frame/react/虚拟DOM.html#虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑",a:"虚拟dom可以提高效率-开发时不必关注dom-只关注业务逻辑"},"46.6":{t:"超强的兼容性",p:`具有浏览器的兼容和跨平台的兼容


React基于虚拟DOM实现了一套自己的事件机制，并且模拟了事件冒泡和捕获的过程， 采取 ...`,l:"frame/react/虚拟DOM.html#超强的兼容性",a:"超强的兼容性"},"47.0":{t:"# 高阶函数HOC(High Order Component)",p:`在React中， 高阶组件(HOC) 是一个接收组件作为参数并返回一个新组件的函数。 换句话说， 它是一种组件的
转换器。高 ...`,l:"frame/react/高阶函数.html",a:"高阶函数hoc-high-order-component"},"47.1":{t:"React Hook中常见的高阶函数",p:`

useState 高阶函数
useState 是React中最基础的Hook， 用于在函数组件中添加状态。它返回一个数组 ...`,l:"frame/react/高阶函数.html#react-hook中常见的高阶函数",a:"react-hook中常见的高阶函数"},"47.2":{t:"useState 和 useRef的区别",p:`两者最大的区别是 useState 用于管理状态，useRef用于操作DOM元素。另外， useState返回的是当前状态
 ...`,l:"frame/react/高阶函数.html#usestate-和-useref的区别",a:"usestate-和-useref的区别"},"48.0":{t:"# Vue 相关",p:`!Vue
`,l:"frame/vue/index.html",a:"vue-相关"},"49.0":{t:"# Keep-Alive",p:`定义
keepAlive是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例，即使被包含的组件保留状态，或者 ...`,l:"frame/vue/keepAlive.html",a:"keep-alive"},"49.1":{t:"引用",p:`vue3中keepalive源码
`,l:"frame/vue/keepAlive.html#引用",a:"引用"},"50.0":{t:"# NextTick",p:"NextTick 是一个用于在下次 DOM 更新循环结束之后执行回调函数的方法。其内部原理涉及到 Vue.js 的异步更新队 ...",l:"frame/vue/nextTick.html",a:"nexttick"},"50.1":{t:"异步任务队列",p:"浏览器中，每个宏任务结束后都会检查微任务队列， 如果有任务则依次执行，当所有微任务执行完成后，才会执行下一个宏任务。 因此可 ...",l:"frame/vue/nextTick.html#异步任务队列",a:"异步任务队列"},"50.2":{t:"Vue2",p:`看下面一个例子，比如当DOM内容改变后， 我们需要获取的最新高度
&lt;template&gt;
  &lt;div&gt ...`,l:"frame/vue/nextTick.html#vue2",a:"vue2"},"50.3":{t:"nextTick源码",p:`

vue2中nextTick源码 路径： src/core/util/next-tick.js

这段源码分为两个部分，  ...`,l:"frame/vue/nextTick.html#nexttick源码",a:"nexttick源码"},"50.4":{t:"Vue3",p:`vue3的例子如下：
&lt;template&gt;
  &lt;div ref=&quot;test&quot;&gt; ...`,l:"frame/vue/nextTick.html#vue3",a:"vue3"},"50.5":{t:"Vue3 nextTick源码",p:`
源码地址： packages/runtime-core/src/sheduler.ts

const resolvedPr ...`,l:"frame/vue/nextTick.html#vue3-nexttick源码",a:"vue3-nexttick源码"},"50.6":{t:"引用",p:`一次弄懂 Vue2 和 Vue3 的 nextTick 实现原理
vue2源码nextTick
vue3源码nextTick ...`,l:"frame/vue/nextTick.html#引用",a:"引用"},"51.0":{t:"# Vue 指令",p:"",l:"frame/vue/vue指令.html",a:"vue-指令"},"51.1":{t:"定义",p:"vue指令（Directives）是一种特殊的标记，用于在模板中以声明式的方式将某些行为应用到DOM上。指令以 v- 开头， ...",l:"frame/vue/vue指令.html#定义",a:"定义"},"51.2":{t:"常见的vue指令",p:`!常见vue指令
`,l:"frame/vue/vue指令.html#常见的vue指令",a:"常见的vue指令"},"51.3":{t:"**`v-show`/`v-if`**",p:`v-show与 v-if的区别


v-if
v-if是‘真实’的条件渲染， 因为它确保了在切换时， 条件区块内的事件监听和 ...`,l:"frame/vue/vue指令.html#v-show-v-if",a:"v-show-v-if"},"51.4":{t:"**`v-for`**",p:`基于原始数据多次渲染元素或模板块。

期望绑定值类型: Array | Object | Number | String | ...`,l:"frame/vue/vue指令.html#v-for",a:"v-for"},"51.5":{t:"**`v-bind`**",p:`动态地绑定一个或多个attribute， 也可以是组件的prop参数。


修饰符

.camel 将短横线命名的attri ...`,l:"frame/vue/vue指令.html#v-bind",a:"v-bind"},"51.6":{t:"**`v-model`**",p:`用于在表单控件或者组件上创建双向数据绑定.


修饰符

.lazy 监听change事件而不是input
.number将 ...`,l:"frame/vue/vue指令.html#v-model",a:"v-model"},"51.7":{t:"**`v-on`**",p:`指令用于监听 DOM 事件。


修饰符

.stop 调用 event.stopPropagation()
.preven ...`,l:"frame/vue/vue指令.html#v-on",a:"v-on"},"52.0":{t:"# Vue生命周期",p:`vue2 的生命周期与 vue3 的声明是有所区别的，
vue2 的生命周期主要是：

beforeCreate
creat ...`,l:"frame/vue/vue生命周期.html",a:"vue生命周期"},"52.1":{t:"Vue2",p:`


生命周期钩子
描述




beforeCreate
组件实例被创建之初


createed
组件实例已被完全创建
 ...`,l:"frame/vue/vue生命周期.html#vue2",a:"vue2"},"52.2":{t:"具体分析",p:`

beforeCreate -&gt; created
初始化 vue 实例，进行数据观测


created
完成数据观 ...`,l:"frame/vue/vue生命周期.html#具体分析",a:"具体分析"},"52.3":{t:"题外话：数据请求在created和mouted的区别",p:`created是在组件实例一旦创建完成的时候立刻调用，这时候页面dom节点并未生成；
mounted是在页面dom节点渲染完 ...`,l:"frame/vue/vue生命周期.html#题外话-数据请求在created和mouted的区别",a:"题外话-数据请求在created和mouted的区别"},"52.4":{t:"Vue3",p:`在 Vue3 中， 除了 setup()替代了 created 和 beforeCreate 之外，
beforeMount ...`,l:"frame/vue/vue生命周期.html#vue3",a:"vue3"},"52.5":{t:"具体功能",p:`

setup
setup 函数是一个全新的组件选项，它是 Composition API 的核心，用于初始化组件实例
se ...`,l:"frame/vue/vue生命周期.html#具体功能",a:"具体功能"},"53.0":{t:"# watch 和 watchEffect的区别",p:`!Vue侦听器
`,l:"frame/vue/watch和watchEffect的区别.html",a:"watch-和-watcheffect的区别"},"53.1":{t:"watch",p:`侦听一个或多个响应式数据源， 并在数据源变化时调用所给的回调函数

watch() 默认是懒侦听的， 即仅在侦听源发生变化时 ...`,l:"frame/vue/watch和watchEffect的区别.html#watch",a:"watch"},"53.2":{t:"watch参数",p:`watch有三个参数： 侦听器的源, 执行的回调函数, 调整回调函数的操作
`,l:"frame/vue/watch和watchEffect的区别.html#watch参数",a:"watch参数"},"53.3":{t:"第一个参数(侦听器的源)",p:`
一个函数， 返回一个值
一个ref
一个响应式对象
或是由以上类型的值组成的数组

`,l:"frame/vue/watch和watchEffect的区别.html#第一个参数-侦听器的源",a:"第一个参数-侦听器的源"},"53.4":{t:"第二个参数(发生变化时要调用的回调函数)",p:"这个回调函数接收三个参数， 新值、旧值、 以及一个用于注册副作用清理的回调函数， 该回调函数会在副作用下一次重新执行前调用， ...",l:"frame/vue/watch和watchEffect的区别.html#第二个参数-发生变化时要调用的回调函数",a:"第二个参数-发生变化时要调用的回调函数"},"53.5":{t:"第三个参数(watch属性值)",p:`第三个参数是可选的， 是一个对象：

immediate: 在侦听器创建时立即触发回调。 第一次调用时的旧值是 undefi ...`,l:"frame/vue/watch和watchEffect的区别.html#第三个参数-watch属性值",a:"第三个参数-watch属性值"},"53.6":{t:"watchEffect",p:`立即运行一个函数，同时响应式的追踪其依赖， 并在依赖更改时重新执行
`,l:"frame/vue/watch和watchEffect的区别.html#watcheffect",a:"watcheffect"},"53.7":{t:"watchEffect参数",p:`watchEffect有两个参数, 第一个参数是数据发生变化时执行的回调函数， 第二个参数是watchEffect的属性
`,l:"frame/vue/watch和watchEffect的区别.html#watcheffect参数",a:"watcheffect参数"},"53.8":{t:"第一个参数",p:`当监听的值发生变化时， 会自动再次执行以下回调函数
watchEffect(() =&gt; {
  // 监听 objDa ...`,l:"frame/vue/watch和watchEffect的区别.html#第一个参数",a:"第一个参数"},"53.9":{t:"第二个参数",p:"第二个参数是一个可选的对象， 支持 flush 和 onTrack / onTrigger 选项， 功能和 watch 相同 ...",l:"frame/vue/watch和watchEffect的区别.html#第二个参数",a:"第二个参数"},"53.10":{t:"停止监听",p:`const stop = watchEffect(() =&gt; {})

// 当不再需要此侦听器时
stop()

: ...`,l:"frame/vue/watch和watchEffect的区别.html#停止监听",a:"停止监听"},"53.11":{t:"watch和 watchEffect",p:"",l:"frame/vue/watch和watchEffect的区别.html#watch和-watcheffect",a:"watch和-watcheffect"},"53.12":{t:"区别",p:`watch 和watchEffect 都能响应式地执行有副作用的回调。 它们之间的最要区别是追踪响应式依赖的方式：


wa ...`,l:"frame/vue/watch和watchEffect的区别.html#区别",a:"区别"},"53.13":{t:"访问 Vue更新之后的DOM",p:"在vue2.x中使用nextTick， 在vue3中， watch/watchEffect 指明 flush 'post'选 ...",l:"frame/vue/watch和watchEffect的区别.html#访问-vue更新之后的dom",a:"访问-vue更新之后的dom"},"53.14":{t:"小技巧",p:"",l:"frame/vue/watch和watchEffect的区别.html#小技巧",a:"小技巧"},"53.15":{t:"关闭监听器",p:`手动停止一个侦听器， 请调用 watch 或 watchEffect 返回的函数
const stopWatchEffect ...`,l:"frame/vue/watch和watchEffect的区别.html#关闭监听器",a:"关闭监听器"},"53.16":{t:"异步数据加载",p:`如果需要等待一些异步数据，你可以使用条件式地侦听逻辑
// 需要异步请求得到的数据
const data = ref(nul ...`,l:"frame/vue/watch和watchEffect的区别.html#异步数据加载",a:"异步数据加载"},"54.0":{t:"# Vue 双向绑定原理",p:"",l:"frame/vue/双向绑定.html",a:"vue-双向绑定原理"},"54.1":{t:"单向绑定",p:"单向绑定非常简单， 就是把 Model绑定到View, 当我们用JavaScript 代码更新Model时， View就会自 ...",l:"frame/vue/双向绑定.html#单向绑定",a:"单向绑定"},"54.2":{t:"双向绑定",p:"双向绑定就是在单向绑定的基础上， 通过修改视图View, Model也会更新, 例如在用户填写表单时， View的状态被更新 ...",l:"frame/vue/双向绑定.html#双向绑定",a:"双向绑定"},"54.3":{t:"双向绑定原理",p:`双向数据绑定由三部分组成

数据层(Model): 应用的数据以及业务逻辑
视图层(View): 应用的展示效果，各类UI组 ...`,l:"frame/vue/双向绑定.html#双向绑定原理",a:"双向绑定原理"},"54.4":{t:"ViewModel",p:`ViewModel的主要职责：

数据变化后更新视图
视图变化后更新数据

还有两个主要部分组成

监听器(Observer ...`,l:"frame/vue/双向绑定.html#viewmodel",a:"viewmodel"},"54.5":{t:"实现",p:`以 Vue 为例，先看看双向绑定的流程：

new Vue() 首先执行初始化，对data执行响应化处理，这个过程发生在监听 ...`,l:"frame/vue/双向绑定.html#实现",a:"实现"},"54.6":{t:"代码实现",p:`先来一个构造函数，执行初始化，对 data 执行响应化处理
class Vue {
  constructor(option ...`,l:"frame/vue/双向绑定.html#代码实现",a:"代码实现"},"54.7":{t:"编译 Compile",p:`对每个元素节点的指令进行扫描跟解析，根据指令模版替换数据，以及绑定相应的更新函数
!COmpile结构
class Comp ...`,l:"frame/vue/双向绑定.html#编译-compile",a:"编译-compile"},"54.8":{t:"依赖收集",p:"视图中会用到 data 中某 key 这称为依赖，同一个 key 可能会出现多次，每次都需要收集出来用一个 Watcher来 ...",l:"frame/vue/双向绑定.html#依赖收集",a:"依赖收集"},"54.9":{t:"来源",p:`vue双向绑定
`,l:"frame/vue/双向绑定.html#来源",a:"来源"},"55.0":{t:"# Vue 首页白屏问题以及解决方案",p:"",l:"frame/vue/首页白屏.html",a:"vue-首页白屏问题以及解决方案"},"55.1":{t:"首页加载白屏的原因",p:`在谈论首页白屏问题之前，先了解一下SPA
`,l:"frame/vue/首页白屏.html#首页加载白屏的原因",a:"首页加载白屏的原因"},"55.2":{t:"SPA",p:"SPA(single-page application), 翻译过来就是单页面应用。 SPA是一种网络应用程序或者网站的模型 ...",l:"frame/vue/首页白屏.html#spa",a:"spa"},"55.3":{t:"SPA 加载过程",p:`

首先是 HTML 也就是 FP阶段

FP(全称 First Paint， 翻译为 首次绘制) 是时间线上的第一个时间点 ...`,l:"frame/vue/首页白屏.html#spa-加载过程",a:"spa-加载过程"},"55.4":{t:"解决方案",p:`

预渲染
预渲染就是webpack打包的时候渲染,通过无头浏览器

无头浏览器: 打包的时候，可以把index.html的 ...`,l:"frame/vue/首页白屏.html#解决方案",a:"解决方案"},"56.0":{t:"主要记录了工作中遇到的问题、积累的知识点",p:`工程师应该怎样学习
`,l:"guide/home.html",a:"主要记录了工作中遇到的问题、积累的知识点"},"57.0":{t:"# 231204 ~ 231208",p:"",l:"guide/weekly/231204-231208.html",a:"_231204-231208"},"57.1":{t:"23-12-06",p:`设计一个函数让两个数字相加，但不得使用+或者其它运算符
输入 a = 1 b = 2
输出 3

const getSum  ...`,l:"guide/weekly/231204-231208.html#_23-12-06",a:"_23-12-06"},"57.2":{t:"23-12-08",p:"",l:"guide/weekly/231204-231208.html#_23-12-08",a:"_23-12-08"},"57.3":{t:"`import` 和 `require` 区别",p:`

来源不同
import/export 来源于ECM(ES6)
require/exports 来源于CommonJS

 ...`,l:"guide/weekly/231204-231208.html#import-和-require-区别",a:"import-和-require-区别"},"58.0":{t:"# 231211-231215",p:"",l:"guide/weekly/231211-231215.html",a:"_231211-231215"},"58.1":{t:"23-12-13 ❄️",p:"",l:"guide/weekly/231211-231215.html#_23-12-13-❄️",a:"_23-12-13-❄️"},"58.2":{t:"Typescript中`any`与`unknown`",p:`

any
any类型表示没有任何限制，该类型的变量可以赋予任意类型的值。
一旦设置为any类型， TypeScript 实 ...`,l:"guide/weekly/231211-231215.html#typescript中-any-与-unknown",a:"typescript中-any-与-unknown"},"58.3":{t:"Typescript中的`never`类型",p:"为了保持与集合论的对应关系，以及类型运算的完整性，TypeScript 还引入了“空类型”的概念，即该类型为空，不包含任何值 ...",l:"guide/weekly/231211-231215.html#typescript中的-never-类型",a:"typescript中的-never-类型"},"59.0":{t:"# 231218-231222",p:"",l:"guide/weekly/231218-231222.html",a:"_231218-231222"},"59.1":{t:"23-12-18 ☀️",p:`更新了面试相关的 HTML CSS 浏览器相关
天气不错， 适合骑车🚴
`,l:"guide/weekly/231218-231222.html#_23-12-18-☀️",a:"_23-12-18-☀️"},"59.2":{t:"23-12-19 🌬",p:`更新了面试相关的Javascript相关 40%
更新了ES6新特性(1)  更新了一部分， 后续持续更新
`,l:"guide/weekly/231218-231222.html#_23-12-19-🌬",a:"_23-12-19-🌬"},"59.3":{t:"23-12-20 🌬",p:`更新了面试相关的Javascript相关 100%
更新了面试相关的Vue相关 30%
`,l:"guide/weekly/231218-231222.html#_23-12-20-🌬",a:"_23-12-20-🌬"},"59.4":{t:"23-12-21 🌞",p:`更新了 原型与原型链相关
`,l:"guide/weekly/231218-231222.html#_23-12-21-🌞",a:"_23-12-21-🌞"},"61.0":{t:"# 小程序相关",p:"",l:"interview/applet.html",a:"小程序相关"},"61.1":{t:"小程序的优势",p:"",l:"interview/applet.html#小程序的优势",a:"小程序的优势"},"61.2":{t:"小程序的页面构成（4 个文件）",p:"",l:"interview/applet.html#小程序的页面构成-4-个文件",a:"小程序的页面构成-4-个文件"},"61.3":{t:"小程序的生命周期",p:"",l:"interview/applet.html#小程序的生命周期",a:"小程序的生命周期"},"61.4":{t:"小程序如何请求数据",p:"",l:"interview/applet.html#小程序如何请求数据",a:"小程序如何请求数据"},"61.5":{t:"如何提高小程序的首屏加载时间",p:"",l:"interview/applet.html#如何提高小程序的首屏加载时间",a:"如何提高小程序的首屏加载时间"},"61.6":{t:"请简述你经常使用的小程序的组件",p:"",l:"interview/applet.html#请简述你经常使用的小程序的组件",a:"请简述你经常使用的小程序的组件"},"61.7":{t:"Wxss 与 css 的区别请简述",p:"",l:"interview/applet.html#wxss-与-css-的区别请简述",a:"wxss-与-css-的区别请简述"},"61.8":{t:"小程序如何实现响应式",p:"",l:"interview/applet.html#小程序如何实现响应式",a:"小程序如何实现响应式"},"61.9":{t:"怎么优化小程序",p:"",l:"interview/applet.html#怎么优化小程序",a:"怎么优化小程序"},"61.10":{t:"小程序如何显示用户头像与用户名",p:"",l:"interview/applet.html#小程序如何显示用户头像与用户名",a:"小程序如何显示用户头像与用户名"},"61.11":{t:"请谈谈小程序的双向绑定和 vue 的异同",p:"",l:"interview/applet.html#请谈谈小程序的双向绑定和-vue-的异同",a:"请谈谈小程序的双向绑定和-vue-的异同"},"61.12":{t:"小程序中传参是怎么传的",p:"",l:"interview/applet.html#小程序中传参是怎么传的",a:"小程序中传参是怎么传的"},"61.13":{t:"和 vue 类比介绍",p:"",l:"interview/applet.html#和-vue-类比介绍",a:"和-vue-类比介绍"},"61.14":{t:"说一下微信小程序的适配问题",p:"",l:"interview/applet.html#说一下微信小程序的适配问题",a:"说一下微信小程序的适配问题"},"61.15":{t:"小程序页面间有哪些传递数据的方法？",p:"",l:"interview/applet.html#小程序页面间有哪些传递数据的方法",a:"小程序页面间有哪些传递数据的方法"},"61.16":{t:"你是怎么封装微信小程序的数据请求的",p:"",l:"interview/applet.html#你是怎么封装微信小程序的数据请求的",a:"你是怎么封装微信小程序的数据请求的"},"61.17":{t:"小程序跳转页面的方式",p:"",l:"interview/applet.html#小程序跳转页面的方式",a:"小程序跳转页面的方式"},"61.18":{t:"微信小程序如何跳转到其它小程序",p:"",l:"interview/applet.html#微信小程序如何跳转到其它小程序",a:"微信小程序如何跳转到其它小程序"},"61.19":{t:"小程序加载过慢的解决方式",p:"",l:"interview/applet.html#小程序加载过慢的解决方式",a:"小程序加载过慢的解决方式"},"62.0":{t:"# 前端基础 （HTML/JS/CSS/浏览器）",p:"",l:"interview/base/index.html",a:"前端基础-html-js-css-浏览器"},"63.0":{t:"# JavaScript 相关",p:"",l:"interview/base/javascript.html",a:"javascript-相关"},"63.1":{t:"JavaScript的语言特性",p:`
运行在客户端浏览器上
不用预编译，直接解析执行代码
弱类型语言，比较灵活
与操作系统无关，跨平台的语言
脚本语言
解释性语 ...`,l:"interview/base/javascript.html#javascript的语言特性",a:"javascript的语言特性"},"63.2":{t:"JavaScript 中的基本数据类型",p:`
前端数据类型

`,l:"interview/base/javascript.html#javascript-中的基本数据类型",a:"javascript-中的基本数据类型"},"63.3":{t:"Ajax使用",p:"Ajax（Asynchronous JavaScript and XML）是一种使用 JavaScript 和 XML 进行 ...",l:"interview/base/javascript.html#ajax使用",a:"ajax使用"},"63.4":{t:"Ajax请求返回的状态码(常用)",p:`


状态码
含义




100
表示客户端应该继续发送请求，是临时响应，用于通知客户端，部分的请求服务器已经接受，但是客 ...`,l:"interview/base/javascript.html#ajax请求返回的状态码-常用",a:"ajax请求返回的状态码-常用"},"63.5":{t:"闭包",p:"",l:"interview/base/javascript.html#闭包",a:"闭包"},"63.6":{t:"闭包的定义",p:`闭包可以简单理解成：定义在一个函数内部的函数， 其中一个内部函数在包含它们的外部函数之外被调用时，就会形成闭包
闭包就是函数 ...`,l:"interview/base/javascript.html#闭包的定义",a:"闭包的定义"},"63.7":{t:"为什么要用",p:"匿名自执行函数： 我们知道所有的变量，如果不架上 var 关键字，则默认的会添加到全局对象的属性上去，这样的临时变量加入全局 ...",l:"interview/base/javascript.html#为什么要用",a:"为什么要用"},"63.8":{t:"闭包的特性",p:`

闭包的写法一般是函数嵌套函数


可以访问函数外部的变量：闭包可以访问定义它的函数的参数和局部变量，甚至可以访问全局变量 ...`,l:"interview/base/javascript.html#闭包的特性",a:"闭包的特性"},"63.9":{t:"事件委托",p:`事件委托就是利用时间冒泡，只制定一个时间处理程序，就可以管理某一些类型的所有事件。 —— 《JS高级程序设计》
事件委托，称 ...`,l:"interview/base/javascript.html#事件委托",a:"事件委托"},"63.10":{t:"事件委托优点",p:`

提高整体运行性能
假如现在有有00个li标签，那个li事件都有相同的点击事件，如果使用循环遍历去触发每个li元素上的事件 ...`,l:"interview/base/javascript.html#事件委托优点",a:"事件委托优点"},"63.11":{t:"事件源",p:`Event 对象提供了一个属性叫 target， 可以返回事件的目标节点，我们称为事件源。
但这个有兼容性：

标准浏览器使 ...`,l:"interview/base/javascript.html#事件源",a:"事件源"},"63.12":{t:"事件冒泡",p:`当一个元素接收到事件的时候，会把接收到事件传递给自己的父级。这种传递分为三个阶段

捕获阶段：从window对象传导到目标节 ...`,l:"interview/base/javascript.html#事件冒泡",a:"事件冒泡"},"63.13":{t:"本地存储与cookie的区别",p:`本地存储(Local Storage)和Cookie都是用于在浏览器端存储数据的两种不同的机制，主要有以下区别


存储容量 ...`,l:"interview/base/javascript.html#本地存储与cookie的区别",a:"本地存储与cookie的区别"},"63.14":{t:"ES6新特性(常用)",p:`
ES6新特性

`,l:"interview/base/javascript.html#es6新特性-常用",a:"es6新特性-常用"},"63.15":{t:"数组的方法(常用)",p:`
常用的数组的方法

`,l:"interview/base/javascript.html#数组的方法-常用",a:"数组的方法-常用"},"63.16":{t:"JSON 新增/删除键值对",p:`
新增键值对

let jsonStr = {}
jsonStr.newKey = &quot;newValue&quot; ...`,l:"interview/base/javascript.html#json-新增-删除键值对",a:"json-新增-删除键值对"},"63.17":{t:"面向对象",p:"面向对象是一种思想，是基于面向过程而言的，就是说面向对象是将功能等通过对象来实现，将功能封装到对象之中，让对象去实现具体的细 ...",l:"interview/base/javascript.html#面向对象",a:"面向对象"},"63.18":{t:"普通函数与构造函数区别",p:`
构造函数也是一个普通函数，创建方式和普通函数一样，但是构造函数习惯首字母大写
调用方式不一样，普通函数直接调用，构造函数要 ...`,l:"interview/base/javascript.html#普通函数与构造函数区别",a:"普通函数与构造函数区别"},"63.19":{t:"原型与原型链",p:`
原型与原型链

`,l:"interview/base/javascript.html#原型与原型链",a:"原型与原型链"},"63.20":{t:"Promise",p:`

链接（ES6新特性二）


解决问题
回调地狱， 代码难以维护， 常常第一个的函数的输出是第二个函数的输入这种现象；
支 ...`,l:"interview/base/javascript.html#promise",a:"promise"},"63.21":{t:"async函数",p:"Async函数其实是 generatior函数和promise的语法糖， async就是将generator函数的 *换为  ...",l:"interview/base/javascript.html#async函数",a:"async函数"},"63.22":{t:"GET 请求传参长度误区",p:`误区
我们经常说 get 请求参数的大小存在限制， 而post请求的参数大小是无限制的。 实际上HTTP协议从未规定 GET ...`,l:"interview/base/javascript.html#get-请求传参长度误区",a:"get-请求传参长度误区"},"63.23":{t:"GET 请求和 POST 请求在缓存方面的区别",p:`GET 请求 一般是做查询操作， 是一个查找的过程， 可以不用每次都与数据库连接， 因此 GET 请求更适合请求缓存；
PO ...`,l:"interview/base/javascript.html#get-请求和-post-请求在缓存方面的区别",a:"get-请求和-post-请求在缓存方面的区别"},"63.24":{t:"事件流",p:"HTML 和 Javascript 的交互是通过事件驱动来实现的， 例如鼠标点击事件 onclick, 页面滚动事件 ons ...",l:"interview/base/javascript.html#事件流",a:"事件流"},"63.25":{t:"事件流定义",p:`事件流描述的是从页面中接收事件的顺序， DOM二级事件流包括几个阶段： 事件捕获阶段、处于目标阶段、 事件冒泡阶段


ad ...`,l:"interview/base/javascript.html#事件流定义",a:"事件流定义"},"63.26":{t:"改变this指针的指向函数(`call`、`apply`,`bind`)区别",p:`
call、bind、apply函数的恶区别

`,l:"interview/base/javascript.html#改变this指针的指向函数-call-、-apply-bind-区别",a:"改变this指针的指向函数-call-、-apply-bind-区别"},"63.27":{t:"JavaScript 中 clientHeight、scrollHeight、offsetHeight区别",p:`
具体可见 JS中的元素尺寸与布局信息

`,l:"interview/base/javascript.html#javascript-中-clientheight、scrollheight、offsetheight区别",a:"javascript-中-clientheight、scrollheight、offsetheight区别"},"63.28":{t:"拖拽功能的实现",p:"首先是三个事件: mousedown、 mousemove、 mouseup, 当鼠标点击按下的时候， 需要一个tag来标记 ...",l:"interview/base/javascript.html#拖拽功能的实现",a:"拖拽功能的实现"},"63.29":{t:"JavaScript的垃圾回收机制",p:"",l:"interview/base/javascript.html#javascript的垃圾回收机制",a:"javascript的垃圾回收机制"},"63.30":{t:"必要性",p:"由于字符串、对象和数组没有固定大小， 所以当它们大小已知时，才能够对它们进行动态的存储分配。JavaScript程序每次创建 ...",l:"interview/base/javascript.html#必要性",a:"必要性"},"63.31":{t:"常见的垃圾回收方式",p:`

标记清除
这是最常见的垃圾回收的方式，当变量进入环境时，就标记这个变量为进入环境， 从逻辑上来讲， 永远不能释放进入环境 ...`,l:"interview/base/javascript.html#常见的垃圾回收方式",a:"常见的垃圾回收方式"},"63.32":{t:"JavaScript监听对象属性的改变",p:`在ES5中， 我们可以通过Object.defineProperty来实现已有属性的监听：
Object.definepro ...`,l:"interview/base/javascript.html#javascript监听对象属性的改变",a:"javascript监听对象属性的改变"},"63.33":{t:"手动实现一个 `bind` 函数",p:`
原理： 通过 apply 或者 call 方法来实现。

Function.prototype.bind = functi ...`,l:"interview/base/javascript.html#手动实现一个-bind-函数",a:"手动实现一个-bind-函数"},"63.34":{t:"怎么控制一次加载一张图片，加载完后再加载下一张",p:"",l:"interview/base/javascript.html#怎么控制一次加载一张图片-加载完后再加载下一张",a:"怎么控制一次加载一张图片-加载完后再加载下一张"},"63.35":{t:"方法1",p:`var obj = new Image();
obj.src = 'http://www.phpernote.com/upl ...`,l:"interview/base/javascript.html#方法1",a:"方法1"},"63.36":{t:"方法2",p:`var obj=new Image();
obj.src='http://www.phpernote.com/uploadf ...`,l:"interview/base/javascript.html#方法2",a:"方法2"},"63.37":{t:"JavaScript 对象的深度克隆",p:"通过递归可以简单实现对象的深度克隆，但是这种方法不管是 ES6 还是 ES5 实现, 都有同样的缺陷， 就是只能实现特定的  ...",l:"interview/base/javascript.html#javascript-对象的深度克隆",a:"javascript-对象的深度克隆"},"63.38":{t:"JavaScript 全排列",p:`全排列是一种对给定字符串中的字符进行重新排列的操作，生成所有可能的排列组合。
function permutate(str) ...`,l:"interview/base/javascript.html#javascript-全排列",a:"javascript-全排列"},"63.39":{t:"跨域问题",p:"",l:"interview/base/javascript.html#跨域问题",a:"跨域问题"},"63.40":{t:"为什么会出现跨域",p:"在前后端分离的模式下，前后端的域名是不一致的， 此时就会发生跨域访问问题。在请求过程中我们想要发送/接收数据一般都是 POS ...",l:"interview/base/javascript.html#为什么会出现跨域",a:"为什么会出现跨域"},"63.41":{t:"同源策略",p:"是由 NetScape 提出的一个著名的安全策略。所谓的同源，指的是协议、域名、端口相同，浏览器处于安全方面考虑，只允许本域 ...",l:"interview/base/javascript.html#同源策略",a:"同源策略"},"63.42":{t:"减少页面加载时间",p:`
优化压缩图片
图片格式的选择(GIF:提供颜色较少，可以用在一些对颜色要求不高的地方)
优化CSS(压缩合并 CSS， 如 ...`,l:"interview/base/javascript.html#减少页面加载时间",a:"减少页面加载时间"},"63.43":{t:"this 指向",p:`在JavaScript中， this通常指向的是我们正在执行的函数本身，或者是指向该函数所属的对象
全局this -&gt; ...`,l:"interview/base/javascript.html#this-指向",a:"this-指向"},"63.44":{t:"数组去重",p:`
使用indexOf()/lastIndexOf() 方法
ES6的 Set结构 Array.form(new Set(ar ...`,l:"interview/base/javascript.html#数组去重",a:"数组去重"},"63.45":{t:"深拷贝与浅拷贝",p:`
手写深拷贝

深拷贝：指针赋值，并且内容拷贝 JSON.parse(JSON.stringify())不仅适用于数组还适用 ...`,l:"interview/base/javascript.html#深拷贝与浅拷贝",a:"深拷贝与浅拷贝"},"63.46":{t:"For循环与Map循环有什么区别",p:`
For循环 遍历对象自身和继承可枚举的属性，也就是说会包括那些在原型链上的属性
Map循环方法不会对空数组进行检测， ma ...`,l:"interview/base/javascript.html#for循环与map循环有什么区别",a:"for循环与map循环有什么区别"},"63.47":{t:"类的继承",p:`创建类有三种方法：

使用 function 和 this 关键字
原型方法 使用 prototype 和 this 关键字 ...`,l:"interview/base/javascript.html#类的继承",a:"类的继承"},"63.48":{t:"同步与异步的区别/阻塞与非阻塞区别",p:`同步(阻塞的)
异步(非阻塞)
比如：
同步，咱两在一起上班，到吃饭时间了，我去喊你一起吃饭，你很忙，我就坐着等你忙完再一起 ...`,l:"interview/base/javascript.html#同步与异步的区别-阻塞与非阻塞区别",a:"同步与异步的区别-阻塞与非阻塞区别"},"63.49":{t:"重绘和回流",p:`
重绘与回流

`,l:"interview/base/javascript.html#重绘和回流",a:"重绘和回流"},"63.50":{t:"HTTP HTTPS",p:`

HTTP
HTTP叫做超文本传输协议， 是互联网应用最广泛的一种网络协议
信息是明文传输
HTTP 基于 请求-响应 的 ...`,l:"interview/base/javascript.html#http-https",a:"http-https"},"63.51":{t:"如何对网站的文件和资源进行优化",p:`
文件合并(目的是减少 http 请求)
文件压缩(目的是减少文件下载体积)
使用 CDN 托管资源
使用缓存
gizp 压 ...`,l:"interview/base/javascript.html#如何对网站的文件和资源进行优化",a:"如何对网站的文件和资源进行优化"},"63.52":{t:"预加载与懒加载的区别",p:`预加载是指在页面加载完成之前，提前讲所需资源下载，之后使用的时候从缓存中调用；
懒加载是延迟加载，按照一定的条件活着需求，等 ...`,l:"interview/base/javascript.html#预加载与懒加载的区别",a:"预加载与懒加载的区别"},"63.53":{t:"防抖与节流",p:`
防抖与节流

`,l:"interview/base/javascript.html#防抖与节流",a:"防抖与节流"},"63.54":{t:"XSS 与 CSRF",p:`
XSS攻击与CSRF攻击

`,l:"interview/base/javascript.html#xss-与-csrf",a:"xss-与-csrf"},"64.0":{t:"# HTML CSS 浏览器",p:"",l:"interview/base/native.html",a:"html-css-浏览器"},"64.1":{t:"常用的图片的格式有哪些",p:`常用的图片格式有jpeg、png、gif, 比较流行的是jpeg格式, 可以把文件压缩到最小
`,l:"interview/base/native.html#常用的图片的格式有哪些",a:"常用的图片的格式有哪些"},"64.2":{t:"`jpeg`",p:`JPEG 是一种有损压缩格式,适合存储照片和复杂的图像,可以在文件大小和图像质量之间取得平衡
优点:文件大小相对较小,支持高 ...`,l:"interview/base/native.html#jpeg",a:"jpeg"},"64.3":{t:"`png`",p:`PNG 是一种无损压缩格式,适合存储图标、简单图形和带有透明度的图像。
优点:支持透明度、无损压缩；适合存储简单图形和带有透 ...`,l:"interview/base/native.html#png",a:"png"},"64.4":{t:"`gif`",p:`GIF 是一种支持动画和简单图形的格式,同时也支持透明度。
优点:支持动画、透明度；适合存储简单的动画图像。
缺点:色彩表现 ...`,l:"interview/base/native.html#gif",a:"gif"},"64.5":{t:"CSS的盒模型",p:"盒模型是一个盛放内容的容器, 它由四部分组成 元素的具体内容content、 内边距padding、边框border、外边距 ...",l:"interview/base/native.html#css的盒模型",a:"css的盒模型"},"64.6":{t:" 标准盒模型",p:`!标准盒模型
`,l:"interview/base/native.html#标准盒模型",a:"标准盒模型"},"64.7":{t:"IE盒模型",p:`!标准盒模型

css3中引入了box-sizing属性,box-sizing:content-box 表示标准盒子模型,b ...`,l:"interview/base/native.html#ie盒模型",a:"ie盒模型"},"64.8":{t:"视频/音频标签的使用",p:"",l:"interview/base/native.html#视频-音频标签的使用",a:"视频-音频标签的使用"},"64.9":{t:'视频标签 `<video src=""></video>`',p:`属性:



属性名称
功能




src
需要播放的视频地址


width
视频区域的宽度


height
视频区域 ...`,l:"interview/base/native.html#视频标签-video-src-video",a:"视频标签-video-src-video"},"64.10":{t:'音频标签`<audio> <source src="" type=""></source> </audio>`',p:`属性



属性名称
功能




src
需要播放的视频地址


type
视频类型, 支持ogg、mp3 wav


a ...`,l:"interview/base/native.html#音频标签-audio-source-src-type-source-audio",a:"音频标签-audio-source-src-type-source-audio"},"64.11":{t:"HTML5新增的内容",p:`
语义化标签
表单类型
表单元素
表单属性
表单事件
多媒体标签

`,l:"interview/base/native.html#html5新增的内容",a:"html5新增的内容"},"64.12":{t:"新增的语义化标签",p:`优点

提升可访问性
利于seo优化
结构清晰,利于维护

种类



标签名
标签作用




header
页面头部

 ...`,l:"interview/base/native.html#新增的语义化标签",a:"新增的语义化标签"},"64.13":{t:"CSS3新增特性",p:"",l:"interview/base/native.html#css3新增特性",a:"css3新增特性"},"64.14":{t:"`border`边框",p:`


属性名称
功能




border-radios
添加圆角


border-shadow
边框添加阴影 (水平位移 ...`,l:"interview/base/native.html#border-边框",a:"border-边框"},"64.15":{t:"`background`背景",p:`


属性名称
功能




background-size
背景图片尺寸


background-origin
规定ba ...`,l:"interview/base/native.html#background-背景",a:"background-背景"},"64.16":{t:"`gradient`渐变",p:`


属性名称
功能




linear-gradient
线性渐变


radial-gradient
径向渐变



`,l:"interview/base/native.html#gradient-渐变",a:"gradient-渐变"},"64.17":{t:"`word`文本效果",p:`


属性名称
功能




word-break
定义如何换行


word-wrap
允许长的内容可以自动换行


te ...`,l:"interview/base/native.html#word-文本效果",a:"word-文本效果"},"64.18":{t:"`transform`转换",p:`


属性名称
功能




transform
应用于 2D3D 转换,可以将元素旋转,缩放,移动,倾斜


transf ...`,l:"interview/base/native.html#transform-转换",a:"transform-转换"},"64.19":{t:"`transition`过渡",p:`


属性名称
功能




transition-proprety
过渡属性名


transition-duration ...`,l:"interview/base/native.html#transition-过渡",a:"transition-过渡"},"64.20":{t:"`animation`动画",p:`


属性名称
功能




animation-name
为@keyframes 动画名称


animation-dur ...`,l:"interview/base/native.html#animation-动画",a:"animation-动画"},"64.21":{t:"清除浮动(`float`)",p:`
当设置浮动属性时,并且父元素没有设置高度时, 父元素会出现高度塌陷问题



给父元素单独定义高度
这个方法简单快速, 代 ...`,l:"interview/base/native.html#清除浮动-float",a:"清除浮动-float"},"64.22":{t:"定位属性`position`",p:`
reactive: 相对定位,不脱离文档流,相对于自身定位
absolute: 绝对定位,脱离文档流,相对于父级定位
fi ...`,l:"interview/base/native.html#定位属性-position",a:"定位属性-position"},"64.23":{t:"元素居中",p:"",l:"interview/base/native.html#元素居中",a:"元素居中"},"64.24":{t:"水平居中",p:`
子父元素宽度固定,子元素设置margin: auto 并且子元素不能设置浮动(float)。否则居中失效
子父元素款素固定 ...`,l:"interview/base/native.html#水平居中",a:"水平居中"},"64.25":{t:"垂直居中",p:`
设置子元素和父元素的行高一样
子元素设置为行内块,再加 vertical-align:middle
已知父元素高度,子元素 ...`,l:"interview/base/native.html#垂直居中",a:"垂直居中"},"64.26":{t:"水平垂直居中",p:`

子元素相对于父元素绝对定位,子元素top、left设置 50%,子元素的margin-left和margin-top减去 ...`,l:"interview/base/native.html#水平垂直居中",a:"水平垂直居中"},"64.27":{t:"三栏布局方式两边固定, 中间自适应",p:`
margin 负值法：左右两栏均左浮动, 左右两栏采用负的margin值。中间栏被宽度为100%的浮动元素包起来
自身浮动 ...`,l:"interview/base/native.html#三栏布局方式两边固定-中间自适应",a:"三栏布局方式两边固定-中间自适应"},"64.28":{t:"浏览器显示小于12px的文字",p:`
可以添加谷歌私有属性webkit-text-size-adjust:none
使用 -webkit-transform:s ...`,l:"interview/base/native.html#浏览器显示小于12px的文字",a:"浏览器显示小于12px的文字"},"64.29":{t:"CSS选择器",p:"",l:"interview/base/native.html#css选择器",a:"css选择器"},"64.30":{t:"种类",p:`


选择器
功能





后代选择器



元素选择器


.
类名选择器


#
id选择器


*
通配符选择器

 ...`,l:"interview/base/native.html#种类",a:"种类"},"64.31":{t:"优先级(权重)",p:`


选择器
权重




元素选择器
1


伪元素选择器
1


class选择器
10


伪类选择器
10


属性 ...`,l:"interview/base/native.html#优先级-权重",a:"优先级-权重"},"64.32":{t:"可继承属性",p:`


类型
属性




所有元素
visibility和cursor


块级元素
text-indent和text-al ...`,l:"interview/base/native.html#可继承属性",a:"可继承属性"},"64.33":{t:"图片加载缓慢问题",p:`
图片懒加载, 在图片未可视区域加一个滚动条事件, 判断图片位置与浏览器顶端和页面的距离, 如果前者小于后者, 优先加载
使 ...`,l:"interview/base/native.html#图片加载缓慢问题",a:"图片加载缓慢问题"},"64.34":{t:"行内元素/块级元素",p:"行内元素: 相邻的行内元素会排列在同一行, 不会独占一行 设置宽高无效 span、a、br I em img input s ...",l:"interview/base/native.html#行内元素-块级元素",a:"行内元素-块级元素"},"64.35":{t:"margin与padding使用场景",p:`margin: 外边距 自身边框到另一个边框之间的距离
padding: 内边距 自身边距到自身内容之间的距离
当需要在 b ...`,l:"interview/base/native.html#margin与padding使用场景",a:"margin与padding使用场景"},"64.36":{t:"`flex`属性",p:`原理： 通过给父盒子添加 flex 属性, 来控制子盒子的位置和排列方式



属性名
功能




flex-direct ...`,l:"interview/base/native.html#flex-属性",a:"flex-属性"},"64.37":{t:"标签的禁用",p:`添加disable属性
`,l:"interview/base/native.html#标签的禁用",a:"标签的禁用"},"64.38":{t:"`px`、`rem`、`em`区别",p:`

px
绝对长度单位, 像素 px 是相对于显示器屏幕分辨率来说的


em
相对长度单位, 相对于当前对象内文本的字体尺 ...`,l:"interview/base/native.html#px-、-rem-、-em-区别",a:"px-、-rem-、-em-区别"},"64.39":{t:"媒体查询",p:`媒体查询扩展了 media 属性, 就是根据不同的媒体类型设置不同的css样式, 达到自适应的目的。
`,l:"interview/base/native.html#媒体查询",a:"媒体查询"},"64.40":{t:"网页的三层结构",p:`结构(html 或 xhtm 标记语言) 表现(css 样式表) 行为(js)
`,l:"interview/base/native.html#网页的三层结构",a:"网页的三层结构"},"64.41":{t:"DOCTYPE 作用",p:"DOCTYPE 是 HTML5 中的文档声明, 通过它可以告诉浏览器, 使用哪一个 HTML 的版本标准来解析文档, 如果没 ...",l:"interview/base/native.html#doctype-作用",a:"doctype-作用"},"64.42":{t:"HTML5 `drag`API",p:`


属性
功能




dragstart
事件主体是被拖放元素, 在开始拖放被拖放元素时触发


darg
事件主体是被 ...`,l:"interview/base/native.html#html5-drag-api",a:"html5-drag-api"},"64.43":{t:"浏览器性能优化 🌍",p:`如何让页面能够更快地显示和响应， 这里分为三个阶段

加载阶段：发出请求到网页渲染完成的这段过程，这里影响和优化的主要是网络 ...`,l:"interview/base/native.html#浏览器性能优化-🌍",a:"浏览器性能优化-🌍"},"64.44":{t:"加载阶段的优化",p:`加载阶段能做的主要优化：


减少关键资源个数

例如把css和js改为内联形式，关键资源比如原来有3个就减少到1个了
变成 ...`,l:"interview/base/native.html#加载阶段的优化",a:"加载阶段的优化"},"64.45":{t:"交互阶段的优化",p:`交互阶段的优化，其实就是说 优化渲染进程中渲染帧的速度，帧的速度决定了交互的流畅性

大部分情况下，生成一个新的帧，是由 J ...`,l:"interview/base/native.html#交互阶段的优化",a:"交互阶段的优化"},"64.46":{t:"回流和重绘",p:`
回流和重绘

`,l:"interview/base/native.html#回流和重绘",a:"回流和重绘"},"64.47":{t:"浏览器缓存机制",p:`
浏览器缓存

`,l:"interview/base/native.html#浏览器缓存机制",a:"浏览器缓存机制"},"64.48":{t:"浏览器输入网址到页面渲染的全过程",p:`

用户输入URL
用户在输入URL时候，浏览器会根据URL的协议， 在这段内容上加伤协议合成合法的URL， 按下回车后，导 ...`,l:"interview/base/native.html#浏览器输入网址到页面渲染的全过程",a:"浏览器输入网址到页面渲染的全过程"},"64.49":{t:"如何画一条0.5px的线",p:`
采用 meta viewport的方式

&lt;meta name=&quot;viewport&quot; conte ...`,l:"interview/base/native.html#如何画一条0-5px的线",a:"如何画一条0-5px的线"},"64.50":{t:"关于 JS动画和CSS3动画的差异",p:"渲染县城分为main thread 和 compositor thread, 如果css动画只改变 transfoem 和  ...",l:"interview/base/native.html#关于-js动画和css3动画的差异",a:"关于-js动画和css3动画的差异"},"64.51":{t:"双边距重叠(外边距折叠)",p:`多个相邻(兄弟或者父子关系)普通流的块级元素垂直方向的 margin 会重叠， 重叠结果为：

两者相邻的外边距皆为正数时： ...`,l:"interview/base/native.html#双边距重叠-外边距折叠",a:"双边距重叠-外边距折叠"},"65.0":{t:"# 框架相关",p:"",l:"interview/frame/index.html",a:"框架相关"},"66.0":{t:"# React相关",p:"",l:"interview/frame/react.html",a:"react相关"},"66.1":{t:"常用的React Hook",p:`

useState
用于管理功能组件中的状态


useEffect
用于在功能组件中执行副作用，例如获取数据或订阅事件
 ...`,l:"interview/frame/react.html#常用的react-hook",a:"常用的react-hook"},"66.2":{t:"什么是虚拟DOM",p:"虚拟DOM是React中的一个概念， 其中创建了实际DOM(文档对象模型)的轻量级虚拟表示。 它是一种用于优化web应用程序 ...",l:"interview/frame/react.html#什么是虚拟dom",a:"什么是虚拟dom"},"66.3":{t:"Vue 与 react 区别",p:`相同点：
都支持服务器渲染
都有虚拟 dom，组件化开发，通过 props 参数进行父子组件数据的传递，都实现 webcom ...`,l:"interview/frame/react.html#vue-与-react-区别",a:"vue-与-react-区别"},"66.4":{t:"受控组件和非受控组件的区别",p:`受控组件的与非受控组件之间的区别在于它们如何管理和更新其状态。
受控组件是状态通过React控制的组件， 组件接收其当前值并 ...`,l:"interview/frame/react.html#受控组件和非受控组件的区别",a:"受控组件和非受控组件的区别"},"66.5":{t:"基于类的 React 组件和函数式组件有什么区别",p:`基于类的组件和函数组件之间的主要区别在于它们的定义方式以及它们的使用方法
React.Component基于类的组件被定义为 ...`,l:"interview/frame/react.html#基于类的-react-组件和函数式组件有什么区别",a:"基于类的-react-组件和函数式组件有什么区别"},"66.6":{t:"组件的生命周期方法是什么",p:`生命周期方法是一种挂接到组件生命周期不通阶段的方法，允许你在特定时间执行特定的代码。



生命周期
功能




cons ...`,l:"interview/frame/react.html#组件的生命周期方法是什么",a:"组件的生命周期方法是什么"},"66.7":{t:"使用 `useState` 有什么特点",p:`useState 返回一个状态值和一个用于更新它的函数
const [value, setValue] = useState ...`,l:"interview/frame/react.html#使用-usestate-有什么特点",a:"使用-usestate-有什么特点"},"66.8":{t:"使用 `useEffect` 有什么特点",p:`useEffect钩子允许在功能组件中执行副作用
突变、订阅、计时器、日志记录和其它副作用不允许在称为React 渲染阶段的 ...`,l:"interview/frame/react.html#使用-useeffect-有什么特点",a:"使用-useeffect-有什么特点"},"66.9":{t:"如何跟踪功能组件的卸载",p:`通常 useEffect 创建需要在组件离开屏幕之前清理或重置的资源，例如订阅或计时器标识符。
为此 传递给useEffec ...`,l:"interview/frame/react.html#如何跟踪功能组件的卸载",a:"如何跟踪功能组件的卸载"},"66.10":{t:"React 中的道具(props)是什么",p:`Props 是从父级传递给组件的数据。 Props是固定的， 不能被更改
// Parent component
const ...`,l:"interview/frame/react.html#react-中的道具-props-是什么",a:"react-中的道具-props-是什么"},"66.11":{t:"什么是State管理器，曾与哪些库相连",p:"状态管理器是帮助管理应用程序状态的工具或库。它提供了一个集中式存储或容器，用于存储和管理可由应用程序中的不同组件访问和更新的 ...",l:"interview/frame/react.html#什么是state管理器-曾与哪些库相连",a:"什么是state管理器-曾与哪些库相连"},"66.12":{t:"在哪些状态下可以使用本地状态，何时应该使用全局状态",p:"如果本地状态仅在一个组件中使用，并且没有后计划将其传递给其它区组件，则建议使用本地状态。本地状态也用于表示列表中单个项的组件 ...",l:"interview/frame/react.html#在哪些状态下可以使用本地状态-何时应该使用全局状态",a:"在哪些状态下可以使用本地状态-何时应该使用全局状态"},"66.13":{t:"Redux 的 reducer 是什么，它需要哪些参数",p:"reducer是一个纯函数，它将状态和动作作为参数。在 reducer 内部， 我们跟踪接收到的动作的类型，并根据它修改状态 ...",l:"interview/frame/react.html#redux-的-reducer-是什么-它需要哪些参数",a:"redux-的-reducer-是什么-它需要哪些参数"},"66.14":{t:"什么是 action , 如何更改Redux的状态",p:`Action是一个简单的 JavaScript 对象， 它必须具有类型字段
{
  type: 'SOME_TYPE'
}
 ...`,l:"interview/frame/react.html#什么是-action-如何更改redux的状态",a:"什么是-action-如何更改redux的状态"},"66.15":{t:"Redux 实现了哪种模式",p:"Redux实现了 Flux 模式 这是一种可以预测的应用程序状态管理模式，它通过引入单向数据流和应用程序状态的集中存储来帮助 ...",l:"interview/frame/react.html#redux-实现了哪种模式",a:"redux-实现了哪种模式"},"66.16":{t:"简述 Flux 思想",p:"Flux 是一种用于数据处理的编程模型，它旨在处理流式数据和大规模数据集。 Flux 提供了一种功能强大且灵活的方式来处理数 ...",l:"interview/frame/react.html#简述-flux-思想",a:"简述-flux-思想"},"66.17":{t:"Axios Fetch 和 Ajax区别",p:`这三者都是用于发起网络请求的工具或技术，但它们有一些区别：


Ajax


Ajax(Asyncchronous Java ...`,l:"interview/frame/react.html#axios-fetch-和-ajax区别",a:"axios-fetch-和-ajax区别"},"66.18":{t:"React Hooks 为什么不能放在if 和 for 里",p:"React Hooks是 React16.8版本新增的特性它可以让函数组件既有类组件的状态和生命周期管理能力。再使用 Rea ...",l:"interview/frame/react.html#react-hooks-为什么不能放在if-和-for-里",a:"react-hooks-为什么不能放在if-和-for-里"},"66.19":{t:"React 组件之间的数据传递",p:`
Props

最常见的一种方式是通过 props 将数据从父组件传递到子组件。父组件可以将数据作为属性传递给子组件，并且子 ...`,l:"interview/frame/react.html#react-组件之间的数据传递",a:"react-组件之间的数据传递"},"66.20":{t:"Diff 算法",p:"Diff算法是一种用于比较两个数据结构(通常是树或数组)之间的差异的算法。在前端开发中，Diff算法通常用于虚拟DOM的比较 ...",l:"interview/frame/react.html#diff-算法",a:"diff-算法"},"66.21":{t:"为什么虚拟 DOM 会提高性能",p:"虚拟DOM没有立即更新真的DOM，是先把DOM结构抽象成DOM树，通过比较两棵虚拟DOM树 找出差异，并标记需要更新节点和操 ...",l:"interview/frame/react.html#为什么虚拟-dom-会提高性能",a:"为什么虚拟-dom-会提高性能"},"66.22":{t:"何为高阶组件(higher order component)？",p:`
高阶函数

`,l:"interview/frame/react.html#何为高阶组件-higher-order-component",a:"何为高阶组件-higher-order-component"},"67.0":{t:"# Vue",p:"",l:"interview/frame/vue.html",a:"vue"},"67.1":{t:"vue的核心",p:`Vue是一套构建用户界面的渐进式、自底向上增量开发的 MVVM 模型的框架， vue的核心只关注视图层
`,l:"interview/frame/vue.html#vue的核心",a:"vue的核心"},"67.2":{t:"核心思想",p:`
数据驱动(视图内容随着数据的改变而改变)
组件话(可以增加代码复用性、可维护性、可测试性，提高了开发效率， 方便重复使用， ...`,l:"interview/frame/vue.html#核心思想",a:"核心思想"},"67.3":{t:"Vue中的单项数据流",p:`父级 prop 的更新都会向下流动到子组件中，每次父组件发生更新，子组件所有的 prop 都会刷新为最新的值
数据从父组件传 ...`,l:"interview/frame/vue.html#vue中的单项数据流",a:"vue中的单项数据流"},"67.4":{t:"Vue中常用的修饰符",p:`


修饰符
功能




修饰符



.lazy
改变后触发，光标离开 input 输入框的时候值才会改变


.num ...`,l:"interview/frame/vue.html#vue中常用的修饰符",a:"vue中常用的修饰符"},"67.5":{t:"`v-text`、`}`、`v-html`区别",p:`
`,l:"interview/frame/vue.html#",a:""},"67.6":{t:"` }`",p:`模版插值{ { } } 将数据解析成纯文本，并不能显示输出 html
`,l:"interview/frame/vue.html#",a:""},"67.7":{t:"`v-text`",p:"v-text 指令操作网页元素的恶纯文本内容，与 {{}}等价， 只是 v-text叫指令， {{}}叫模版插值 {{}}是 ...",l:"interview/frame/vue.html#v-text",a:"v-text"},"67.8":{t:"`v-html`",p:`v-html可以渲染输出 html
`,l:"interview/frame/vue.html#v-html",a:"v-html"},"67.9":{t:"`v-on`是否可以绑定多个方法",p:`可以的， 如果绑定多个事件，可以使用键值对形式：事件类型: 事件名；
如果绑定的是多个相同事件， 直接使用逗号分隔就可以
`,l:"interview/frame/vue.html#v-on-是否可以绑定多个方法",a:"v-on-是否可以绑定多个方法"},"67.10":{t:"Vue `v-for`循环中 `key`的作用",p:"设置的 key 是保证唯一性， Vue在执行时，会对节点进行检查，如果没有key值，那么vue检查到这里有 DOM 节点，就 ...",l:"interview/frame/vue.html#vue-v-for-循环中-key-的作用",a:"vue-v-for-循环中-key-的作用"},"67.11":{t:"计算属性(`computed`)",p:`计算属性是用来声明式地描述一个值依赖了其它的值，当它依赖的这个值发生改变时，就更新 DOM
当在模版中把数据绑定到一个计算属 ...`,l:"interview/frame/vue.html#计算属性-computed",a:"计算属性-computed"},"67.12":{t:"Vue中跳转路由的方式",p:`Vue中路由跳转的方式有两种，分别是 声明式 和 编程式
用 js 方式进行跳转的叫做编程式导航 this.$router. ...`,l:"interview/frame/vue.html#vue中跳转路由的方式",a:"vue中跳转路由的方式"},"67.13":{t:"Vue 跨域解决方案",p:`
后台更改header
使用 http-proxy-middleware (配置代理服务器的中间件)

`,l:"interview/frame/vue.html#vue-跨域解决方案",a:"vue-跨域解决方案"},"67.14":{t:"Vue 生命周期",p:`
vue生命周期

`,l:"interview/frame/vue.html#vue-生命周期",a:"vue-生命周期"},"67.15":{t:"Vue 路由的实现",p:`vue路由有三种模式，分别是 hash、history、abstract

hash:  使用 URL的 hash值来做路由 ...`,l:"interview/frame/vue.html#vue-路由的实现",a:"vue-路由的实现"},"67.16":{t:"基本原理",p:"useRouter() 中的 push 和 replace 是手动调用内部路径切换方法 transitionTo，go、ba ...",l:"interview/frame/vue.html#基本原理",a:"基本原理"},"67.17":{t:"Vue 路由模式 hash 和 history",p:"",l:"interview/frame/vue.html#vue-路由模式-hash-和-history",a:"vue-路由模式-hash-和-history"},"67.18":{t:"hash",p:`hash 模式是用 createWebHashHistory() 创建的
import { createRouter, cr ...`,l:"interview/frame/vue.html#hash",a:"hash"},"67.19":{t:"history",p:`history就是 HTML5模式， 使用createWebHistory()创建 HTML5 模式，推荐使用这个模式
im ...`,l:"interview/frame/vue.html#history",a:"history"},"67.20":{t:"两者区别",p:`

History模式优势
pushState() 设置的新URL可以与当前URL同源的URL，而 Hash只能修改#的部分 ...`,l:"interview/frame/vue.html#两者区别",a:"两者区别"},"67.21":{t:"Vue 路由传参的两种方式，params 和 query方式与区别",p:"",l:"interview/frame/vue.html#vue-路由传参的两种方式-params-和-query方式与区别",a:"vue-路由传参的两种方式-params-和-query方式与区别"},"67.22":{t:"路由参数(params)",p:"路由参数通常用于标识性的信息，如资源ID、用户ID等，它们直接包含在路由的路径中，这些参数作为路径的一部分，提供了对特定资源 ...",l:"interview/frame/vue.html#路由参数-params",a:"路由参数-params"},"67.23":{t:"查询参数(query)",p:"查询参数适合用于传递非标识性信息，如筛选条件、搜索关键字、分页信息等，它们不包含在路由的路径中，而是作为键值对附加到URL后 ...",l:"interview/frame/vue.html#查询参数-query",a:"查询参数-query"},"67.24":{t:"何时使用",p:`

params
标识性信息：当需要传递标识性信息，如用户ID，帖子ID等，使用路由参数更合适
确保信息直接可见：如果希望用 ...`,l:"interview/frame/vue.html#何时使用",a:"何时使用"},"67.25":{t:"Vue 数据绑定的几种方式",p:"",l:"interview/frame/vue.html#vue-数据绑定的几种方式",a:"vue-数据绑定的几种方式"},"67.26":{t:"插值(interpolation)",p:`插值是最基本的数据绑定方式之一，使用双大括号{{}}将变量插入到模版中


&lt;template&gt;
  &lt;p ...`,l:"interview/frame/vue.html#插值-interpolation",a:"插值-interpolation"},"67.27":{t:"绑定属性(Binding Attributes)",p:`使用 v-bind 指令可以将一个变量的值绑定到HTML元素属性上


&lt;template&gt;
  &lt;div ...`,l:"interview/frame/vue.html#绑定属性-binding-attributes",a:"绑定属性-binding-attributes"},"67.28":{t:"动态类绑定(Dynamic Class Binding)",p:`使用v-bind:class可以根据条件动态绑定类名


&lt;template&gt;
  &lt;div v-bind ...`,l:"interview/frame/vue.html#动态类绑定-dynamic-class-binding",a:"动态类绑定-dynamic-class-binding"},"67.29":{t:"动态样式绑定(Dynamic Style Binding)",p:`使用 v-bind:style 可以根据条件动态绑定样式


&lt;template&gt;
  &lt;div&gt;
 ...`,l:"interview/frame/vue.html#动态样式绑定-dynamic-style-binding",a:"动态样式绑定-dynamic-style-binding"},"67.30":{t:"表单输入绑定(Form input Binding)",p:`使用v-model 可以实现表单输入和数据的双向绑定


&lt;template&gt;
&lt;form&gt;
  & ...`,l:"interview/frame/vue.html#表单输入绑定-form-input-binding",a:"表单输入绑定-form-input-binding"},"67.31":{t:"事件绑定(Event Binding)",p:`使用 v-on 可以将 DOM 事件绑定到 Vue 实例中的方法。


&lt;template&gt;
  &lt;but ...`,l:"interview/frame/vue.html#事件绑定-event-binding",a:"事件绑定-event-binding"},"67.32":{t:"Vue 的路由钩子函数/路由守卫有哪些",p:"",l:"interview/frame/vue.html#vue-的路由钩子函数-路由守卫有哪些",a:"vue-的路由钩子函数-路由守卫有哪些"},"67.33":{t:"全局路由钩子(Global Before Guards)",p:`beforeEach(to. from, next) 在路由改变前触发，常用于全局的身份验证检查等
const router ...`,l:"interview/frame/vue.html#全局路由钩子-global-before-guards",a:"全局路由钩子-global-before-guards"},"67.34":{t:"路由独享守卫(Per-Route Guards)",p:`beforeEnter(to, from, next)：在某个路由独享的守卫。
`,l:"interview/frame/vue.html#路由独享守卫-per-route-guards",a:"路由独享守卫-per-route-guards"},"67.35":{t:"组件内守卫(In-Component Guards)",p:`beforeRouteEnter(to, from, next)：在路由进入的时候，但是在组件渲染之前被调用。
before ...`,l:"interview/frame/vue.html#组件内守卫-in-component-guards",a:"组件内守卫-in-component-guards"},"67.36":{t:"Vue 中如何自定义指令",p:"vue中， 除了内置的一些列指令(如v-model和 v-show)之外， 还可以注册自定义的指令(Custom Direc ...",l:"interview/frame/vue.html#vue-中如何自定义指令",a:"vue-中如何自定义指令"},"67.37":{t:"组成",p:`一个自定义指令是由一个包含类似组件生命周期钩子的对象来定义，钩子函数会接收到指令所绑定元素作为其参数


&lt;templ ...`,l:"interview/frame/vue.html#组成",a:"组成"},"67.38":{t:"setup标签版本",p:`setup标签版本传递数据的方法还是跟函数版本一致，只是写法上有所不同：
父组件


&lt;template&gt;
   ...`,l:"interview/frame/vue.html#setup标签版本",a:"setup标签版本"},"67.39":{t:"子组件传递给父组件参数",p:"",l:"interview/frame/vue.html#子组件传递给父组件参数",a:"子组件传递给父组件参数"},"67.40":{t:"setup函数 子组件传参版本",p:`子组件传值

setup函数中 context 的 emit 用于传递事件给父组件
第一个参数要为传递的参数名，第二个参数为 ...`,l:"interview/frame/vue.html#setup函数-子组件传参版本",a:"setup函数-子组件传参版本"},"67.41":{t:"setup标签 子组件传参版本",p:`子组件


&lt;template&gt;
  &lt;div class=&quot;box&quot;&gt;
    ...`,l:"interview/frame/vue.html#setup标签-子组件传参版本",a:"setup标签-子组件传参版本"},"67.42":{t:"Vue 插槽(slot)",p:"简单来说就是子组件中的提供给父组件使用的一个坑位，用&lt;slot&gt;&lt;/slot&gt;表示， 父组件可以在这 ...",l:"interview/frame/vue.html#vue-插槽-slot",a:"vue-插槽-slot"},"67.43":{t:"默认内容",p:`在父组件中没有提供任何插槽内容的时候， 我们是可以为子组件的插槽指定默认内容的， 比如:
子组件
&lt;template& ...`,l:"interview/frame/vue.html#默认内容",a:"默认内容"},"67.44":{t:"具名插槽",p:"很多时候一个插槽满足不了需求， 需要多个插槽，于是就有了具名插槽， 比如带有name属性的插槽&lt;slot name=& ...",l:"interview/frame/vue.html#具名插槽",a:"具名插槽"},"67.45":{t:"动态插槽",p:"动态插槽就是插槽名变成了变量的形式，我们可以随时修改这个变量从而展示不同的效果。它的写法是v-slot:[变量名] 或者缩写 ...",l:"interview/frame/vue.html#动态插槽",a:"动态插槽"},"67.46":{t:"作用域插槽",p:`插槽也可以像组件传递 props 那样， 在slot标签绑定属性从而传递给父组件中的插槽内容
子组件
&lt;templat ...`,l:"interview/frame/vue.html#作用域插槽",a:"作用域插槽"},"67.47":{t:"具名作用域插槽",p:`具名作用域插槽接收参数的方式是通过template的标签的指令v-slot的值获取的
&lt;!-- 父组件 --&gt;
 ...`,l:"interview/frame/vue.html#具名作用域插槽",a:"具名作用域插槽"},"67.48":{t:"Vue watch",p:`vue watch 用于侦听一个或者多个响应式数据源，并在数据源变化时调用所给的回调函数
`,l:"interview/frame/vue.html#vue-watch",a:"vue-watch"},"67.49":{t:"类型",p:`// 侦听单个来源
function watch&lt;T&gt;(
  source: WatchSource&lt;T& ...`,l:"interview/frame/vue.html#类型",a:"类型"},"67.50":{t:"详细信息",p:`watch() 默认是懒侦听的， 即仅在侦听起源发生变化时才执行回调函数
第一个参数是侦听器的源，这个源来自以下几种

一个 ...`,l:"interview/frame/vue.html#详细信息",a:"详细信息"},"67.51":{t:"示例",p:`
侦听一个 getter 函数

const state = reactive({ count: 0 })
watch(
  ...`,l:"interview/frame/vue.html#示例",a:"示例"},"67.52":{t:"计算属性与watch的区别",p:`watch 和 computed 都是 vue2/vue3中用于监听数据变化的属性


功能: computed 是计算属性 ...`,l:"interview/frame/vue.html#计算属性与watch的区别",a:"计算属性与watch的区别"},"67.53":{t:"Vue 首屏加载慢的原因，怎么解决的，白屏时间怎么检测，怎么解决白屏问题",p:`
首页白屏

`,l:"interview/frame/vue.html#vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题",a:"vue-首屏加载慢的原因-怎么解决的-白屏时间怎么检测-怎么解决白屏问题"},"67.54":{t:"Vue中 Route 与 router 区别",p:`Vue中 Route 与 Router 依然表示路由相关的概念，但它们功能不尽相同


Route(路由)
Route 表示 ...`,l:"interview/frame/vue.html#vue中-route-与-router-区别",a:"vue中-route-与-router-区别"},"67.55":{t:"Vue 路由懒加载（按需加载路由）",p:"我们可以使用 defineAsyncComponent 函数来定义异步组件，该函数接收一个返回值为Promise的函数，用于 ...",l:"interview/frame/vue.html#vue-路由懒加载-按需加载路由",a:"vue-路由懒加载-按需加载路由"},"67.56":{t:"Vue3.0 是如何变得更快的？（底层，源码）",p:`Vue3在性能上进行了一系列的优化和改进，主要通过以下几个方面实现了更好的性能


Proxy 取代了 Object.def ...`,l:"interview/frame/vue.html#vue3-0-是如何变得更快的-底层-源码",a:"vue3-0-是如何变得更快的-底层-源码"},"67.57":{t:"Vuex",p:`!Vuex
Vuex 是一个专门为vue.js应用程序开发的状态管理模式，通过创建一个集中的数据存储，方便程序中的所有组件进 ...`,l:"interview/frame/vue.html#vuex",a:"vuex"},"68.0":{t:"# 面试相关问题",p:`!面试相关
`,l:"interview/index.html",a:"面试相关问题"},"69.0":{t:"# 2024-03-20 面试 React",p:`&lt;!-- 字节面试  --&gt;
`,l:"interview/weekly/240320.html",a:"_2024-03-20-面试-react"},"69.1":{t:"关于Vue组件通信",p:`常用的组件通信方式有以下几种


props


$emit


ref 和 defineExpose


provide  ...`,l:"interview/weekly/240320.html#关于vue组件通信",a:"关于vue组件通信"},"69.2":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.3":{t:"props",p:"&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;父组件将数 ...",l:"interview/weekly/240320.html#props",a:"props"},"69.4":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.5":{t:" $Emit",p:"&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;子组件通过 ...",l:"interview/weekly/240320.html#emit",a:"emit"},"69.6":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.7":{t:" ref 和 defineExpose",p:`&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;
在Vue ...`,l:"interview/weekly/240320.html#ref-和-defineexpose",a:"ref-和-defineexpose"},"69.8":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.9":{t:"provide 和 inject",p:`

&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;pro ...`,l:"interview/weekly/240320.html#provide-和-inject",a:"provide-和-inject"},"69.10":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.11":{t:"v-model",p:`&lt;div style=&quot;color:#89DDFF;margin:10px 0&quot;&gt;
v-mo ...`,l:"interview/weekly/240320.html#v-model",a:"v-model"},"69.12":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.13":{t:"mitt",p:`在Vue3中，可以使用第三方库mitt来实现组件之间的通信。
&lt;div style=&quot;color:#89DD ...`,l:"interview/weekly/240320.html#mitt",a:"mitt"},"69.14":{t:" ",p:"",l:"interview/weekly/240320.html#",a:""},"69.15":{t:"Pinia",p:"pinia 是一个为 vue3 设计的状态管理库，类似 Vuex 的设计模式，通过定义 store、状态、getter 和  ...",l:"interview/weekly/240320.html#pinia",a:"pinia"},"69.16":{t:"React中遇到过什么坑",p:"",l:"interview/weekly/240320.html#react中遇到过什么坑",a:"react中遇到过什么坑"},"69.17":{t:"不正确地使用状态更新",p:"直接修改状态（state）而不使用 setState 方法会导致不可预测的结果，因为 React 无法检测到状态的更改。正确 ...",l:"interview/weekly/240320.html#不正确地使用状态更新",a:"不正确地使用状态更新"},"69.18":{t:"使用索引作为 key",p:"在渲染列表时，将索引作为 React 元素的 key 值可能会导致性能问题和不稳定的 UI 行为。最好使用具有唯一标识的属性 ...",l:"interview/weekly/240320.html#使用索引作为-key",a:"使用索引作为-key"},"69.19":{t:"忘记绑定事件处理程序",p:"在类组件中，如果没有将事件处理程序绑定到实例上，可能会导致 this 关键字在事件处理程序中指向 undefined。可以使 ...",l:"interview/weekly/240320.html#忘记绑定事件处理程序",a:"忘记绑定事件处理程序"},"69.20":{t:"忘记在条件渲染中处理 null 或 undefined",p:`如果在条件渲染中返回 null 或 undefined，可能会导致 TypeError。请确保在返回之前处理这些情况。
// ...`,l:"interview/weekly/240320.html#忘记在条件渲染中处理-null-或-undefined",a:"忘记在条件渲染中处理-null-或-undefined"},"69.21":{t:"在渲染函数中定义函数",p:"在渲染函数中定义新的函数，可能会导致组件重新渲染时创建新的函数实例，影响性能。应该将这些函数提升到组件外部或使用 useCa ...",l:"interview/weekly/240320.html#在渲染函数中定义函数",a:"在渲染函数中定义函数"},"69.22":{t:"SSR中Node的配置消耗的QPS",p:`△ SSR之前接触并不深刻， 暂时留个坑  通过Next.js 和 Nuxt.js配置时深入了解一下
`,l:"interview/weekly/240320.html#ssr中node的配置消耗的qps",a:"ssr中node的配置消耗的qps"},"69.23":{t:"React的生命周期",p:"在旧版的 React 中，组件生命周期包括三个阶段：挂载阶段（Mounting）、更新阶段（Updating）、卸载阶段（U ...",l:"interview/weekly/240320.html#react的生命周期",a:"react的生命周期"},"69.24":{t:"挂载阶段（Mounting）",p:`

constructor()：构造函数，在组件被创建时调用，用于初始化状态（state）或绑定事件处理方法。


stat ...`,l:"interview/weekly/240320.html#挂载阶段-mounting",a:"挂载阶段-mounting"},"69.25":{t:"更新阶段（Updating）",p:`

static getDerivedStateFromProps(props, state)：见上文。
shouldCom ...`,l:"interview/weekly/240320.html#更新阶段-updating",a:"更新阶段-updating"},"69.26":{t:"卸载阶段（Unmounting）",p:`
componentWillUnmount()：在组件即将被销毁并从 DOM 中移除之前调用，通常用于清理定时器、取消订阅等 ...`,l:"interview/weekly/240320.html#卸载阶段-unmounting",a:"卸载阶段-unmounting"},"69.27":{t:"常用的React Hook 和功能",p:"",l:"interview/weekly/240320.html#常用的react-hook-和功能",a:"常用的react-hook-和功能"},"69.28":{t:"useState",p:`用于管理功能组件中的状态
`,l:"interview/weekly/240320.html#usestate",a:"usestate"},"69.29":{t:"useEffect",p:`用于在功能组件中执行副作用，例如获取数据或订阅事件
`,l:"interview/weekly/240320.html#useeffect",a:"useeffect"},"69.30":{t:"useContext",p:`用于访问功能组件中React 上下文的值
`,l:"interview/weekly/240320.html#usecontext",a:"usecontext"},"69.31":{t:"useRef",p:`用于创建对跨渲染保留的元素或值的可变引用
`,l:"interview/weekly/240320.html#useref",a:"useref"},"69.32":{t:"useCallback",p:`缓存回调函数，避免在每次渲染时都创建新的回调函数实例
当回调函数作为prop传递给子组件时，使用 useCallback可以 ...`,l:"interview/weekly/240320.html#usecallback",a:"usecallback"},"69.33":{t:"useMemo",p:`用于缓存计算值，类似于 useCallback，但是它缓存的是普通数值而不是回调函数
`,l:"interview/weekly/240320.html#usememo",a:"usememo"},"69.34":{t:"useReducer",p:`用于使用reducer函数的管理状态，类似于Redux的工作方式
`,l:"interview/weekly/240320.html#usereducer",a:"usereducer"},"69.35":{t:"useLayoutEffect",p:`类似于 useEffect 但效果在所有DOM突变后同步运行
这些Hook提供了强大的工具，用于管理状态，处理副作用和重新编 ...`,l:"interview/weekly/240320.html#uselayouteffect",a:"uselayouteffect"},"69.36":{t:"什么是虚拟滚动",p:"虚拟滚动列表通过只渲染可视区域的列表项，当用户滚动时，动态计算可视区域的起始索引，然后只渲染这部分列表项，避免了一次加载大量 ...",l:"interview/weekly/240320.html#什么是虚拟滚动",a:"什么是虚拟滚动"},"69.37":{t:"lightHouse主要使用什么性能指标",p:"lighthouse主要是用来做性能检测的工具，主要用于分析网络应用和网页，收集现代性能指标并提供对开发人员最佳实践的意见。 ...",l:"interview/weekly/240320.html#lighthouse主要使用什么性能指标",a:"lighthouse主要使用什么性能指标"},"69.38":{t:"主要检测指标",p:`


指标
说明




性能指标（Performance）
[1]


可访问性（Accessibility）
监测页面的 ...`,l:"interview/weekly/240320.html#主要检测指标",a:"主要检测指标"},"69.39":{t:"评分说明",p:"经过检测，Lighthouse 会对上述五个维度给出一个的评估得分，分值范围0-100，主要分为三个档次，分别用红黄绿三种颜 ...",l:"interview/weekly/240320.html#评分说明",a:"评分说明"},"69.40":{t:"三种使用方式",p:`

使用 chrome 调试面板中的 LightHouse (推荐)


使用 chrome 插件扩展


通过命令行使用  ...`,l:"interview/weekly/240320.html#三种使用方式",a:"三种使用方式"},"69.41":{t:"跨页面通信使用什么方式呢",p:`跨页面通信是指在Web开发中，不同页面之间进行数据或消息传递的过程。有几种常用的方式可以实现跨页面通信：
`,l:"interview/weekly/240320.html#跨页面通信使用什么方式呢",a:"跨页面通信使用什么方式呢"},"69.42":{t:"URL 参数传递",p:"可以通过URL参数在不同页面之间传递数据。例如，在链接中添加参数，然后在目标页面中读取这些参数。但这种方法适用于传递简单的数 ...",l:"interview/weekly/240320.html#url-参数传递",a:"url-参数传递"},"69.43":{t:"Local Storage",p:"HTML5的Local Storage提供了一种在浏览器中存储数据的方法，这些数据在不同页面之间是共享的。通过在一个页面中写 ...",l:"interview/weekly/240320.html#local-storage",a:"local-storage"},"69.44":{t:"Session Storage",p:"类似于Local Storage，但是会话存储的数据在会话结束后被清除。与Local Storage相比，Session S ...",l:"interview/weekly/240320.html#session-storage",a:"session-storage"},"69.45":{t:"Cookies",p:"通过设置cookie，在不同页面之间传递数据。但是，cookies的容量有限，并且会随着每个HTTP请求发送到服务器，可能会 ...",l:"interview/weekly/240320.html#cookies",a:"cookies"},"69.46":{t:"PostMessage API",p:"PostMessage API允许在不同的窗口或iframe之间安全地发送消息。通过在发送消息的窗口中调用postMessa ...",l:"interview/weekly/240320.html#postmessage-api",a:"postmessage-api"},"69.47":{t:"WebSocket",p:"WebSocket是一种在客户端和服务器之间进行全双工通信的协议。虽然WebSocket通常用于实时通信，但也可以用于不同页 ...",l:"interview/weekly/240320.html#websocket",a:"websocket"},"69.48":{t:"跨域的方法",p:"跨域是指在浏览器中，当一个网页向不同域名、不同端口或不同协议的资源发起请求时，会受到浏览器的同源策略限制，这样的请求就称为跨 ...",l:"interview/weekly/240320.html#跨域的方法",a:"跨域的方法"},"69.49":{t:"JSONP (JSON with Padding)",p:"JSONP 是一种利用 &lt;script&gt; 标签的 GET 请求来实现跨域通信的技术。虽然 JSONP 能解决部分 ...",l:"interview/weekly/240320.html#jsonp-json-with-padding",a:"jsonp-json-with-padding"},"69.50":{t:"CORS (Cross-Origin Resource Sharing)",p:"CORS 是一种由 W3C 提出的跨域解决方案。通过在服务器端设置相应的 HTTP 头部信息（例如 Access-Contr ...",l:"interview/weekly/240320.html#cors-cross-origin-resource-sharing",a:"cors-cross-origin-resource-sharing"},"69.51":{t:"代理服务器",p:"通过在同源服务器上设置代理服务器来转发请求，从而绕过浏览器的跨域限制。当浏览器无法直接访问目标资源时，可以发送请求到同源服务 ...",l:"interview/weekly/240320.html#代理服务器",a:"代理服务器"},"69.52":{t:"使用跨域资源共享 (CORS) 的服务器端代理",p:"如果目标服务器支持 CORS，可以使用服务器端代理向目标服务器发起请求，并将结果返回给客户端。这种方法将跨域问题留给了服务器 ...",l:"interview/weekly/240320.html#使用跨域资源共享-cors-的服务器端代理",a:"使用跨域资源共享-cors-的服务器端代理"},"69.53":{t:"JSON Web Token (JWT)",p:"可以在请求头中使用 JWT 来进行跨域身份验证。JWT 是一种基于 JSON 的安全传输令牌，可以在不同域之间传递身份验证信 ...",l:"interview/weekly/240320.html#json-web-token-jwt",a:"json-web-token-jwt"},"69.54":{t:"通过iframe标签跨页面通信遇到过什么问题",p:"同源策略限制：同源策略会限制在 &lt;iframe&gt; 中加载的页面与父页面之间的通信，除非它们具有相同的协议、域名和 ...",l:"interview/weekly/240320.html#通过iframe标签跨页面通信遇到过什么问题",a:"通过iframe标签跨页面通信遇到过什么问题"},"69.55":{t:"有了解过mono-repo开发方式吗",p:"Mono-repo 是指将一个项目的所有代码都存储在一个单独的代码仓库（Repository）中的开发方式。这种开发方式与将 ...",l:"interview/weekly/240320.html#有了解过mono-repo开发方式吗",a:"有了解过mono-repo开发方式吗"},"69.56":{t:"UseMemo可以在其它地方调用么",p:"在 React 中，useMemo 是一个自定义 Hook，用于在渲染过程中对值进行记忆（memoization）。useM ...",l:"interview/weekly/240320.html#usememo可以在其它地方调用么",a:"usememo可以在其它地方调用么"},"69.57":{t:"项目中做了哪些性能优化",p:"",l:"interview/weekly/240320.html#项目中做了哪些性能优化",a:"项目中做了哪些性能优化"},"69.58":{t:"构建工具有什么性能优化",p:"",l:"interview/weekly/240320.html#构建工具有什么性能优化",a:"构建工具有什么性能优化"},"69.59":{t:"基本数据类型",p:`
前端数据类型

`,l:"interview/weekly/240320.html#基本数据类型",a:"基本数据类型"},"69.60":{t:"在项目中有自己实现过Hook吗，举个例子说明",p:`import { useState, useEffect } from 'react';

// 自定义 Hook：使用本地 ...`,l:"interview/weekly/240320.html#在项目中有自己实现过hook吗-举个例子说明",a:"在项目中有自己实现过hook吗-举个例子说明"},"70.0":{t:"# 2024-03-22 面试二面 React",p:`&lt;!-- 字节二面 --&gt;
`,l:"interview/weekly/240322.html",a:"_2024-03-22-面试二面-react"},"70.1":{t:"Promise.allsettled",p:"",l:"interview/weekly/240322.html#promise-allsettled",a:"promise-allsettled"},"70.2":{t:"继承方式",p:"",l:"interview/weekly/240322.html#继承方式",a:"继承方式"},"70.3":{t:"项目中遇到哪些难点",p:"",l:"interview/weekly/240322.html#项目中遇到哪些难点",a:"项目中遇到哪些难点"},"70.4":{t:"封装一个Tree组件",p:"",l:"interview/weekly/240322.html#封装一个tree组件",a:"封装一个tree组件"},"70.5":{t:"Vue template 为什么分开写了 最终可以在一起渲染所有页面",p:"",l:"interview/weekly/240322.html#vue-template-为什么分开写了-最终可以在一起渲染所有页面",a:"vue-template-为什么分开写了-最终可以在一起渲染所有页面"},"70.6":{t:"防抖函数",p:"",l:"interview/weekly/240322.html#防抖函数",a:"防抖函数"},"70.7":{t:"实现一个Event类 包括 on once trigger remove 方法",p:"",l:"interview/weekly/240322.html#实现一个event类-包括-on-once-trigger-remove-方法",a:"实现一个event类-包括-on-once-trigger-remove-方法"},"70.8":{t:"适配多端 自适应布局",p:"",l:"interview/weekly/240322.html#适配多端-自适应布局",a:"适配多端-自适应布局"},"70.9":{t:"Taro如何实现多端适配的",p:"",l:"interview/weekly/240322.html#taro如何实现多端适配的",a:"taro如何实现多端适配的"},"70.10":{t:"小程序双线程有了解过吗",p:"",l:"interview/weekly/240322.html#小程序双线程有了解过吗",a:"小程序双线程有了解过吗"},"70.11":{t:"模块化",p:"",l:"interview/weekly/240322.html#模块化",a:"模块化"},"70.12":{t:"ESModule 和 CommonJS区别",p:"",l:"interview/weekly/240322.html#esmodule-和-commonjs区别",a:"esmodule-和-commonjs区别"},"71.0":{t:"# 24-03-25 面试 Vue",p:"",l:"interview/weekly/240325.html",a:"_24-03-25-面试-vue"},"71.1":{t:"项目中遇到过什么难点",p:"",l:"interview/weekly/240325.html#项目中遇到过什么难点",a:"项目中遇到过什么难点"},"71.2":{t:"拖拽的功能实现主要使用的什么API",p:"",l:"interview/weekly/240325.html#拖拽的功能实现主要使用的什么api",a:"拖拽的功能实现主要使用的什么api"},"71.3":{t:"Drag Events API",p:`

dragstart：当拖动操作开始时触发。


drag：在拖动过程中连续触发。


dragenter：当拖动元素进入 ...`,l:"interview/weekly/240325.html#drag-events-api",a:"drag-events-api"},"71.4":{t:"HTML5 Drag and Drop API",p:`

draggable 属性：用于设置元素是否可拖动。


dataTransfer 对象：用于在拖放操作之间传递数据，包括 ...`,l:"interview/weekly/240325.html#html5-drag-and-drop-api",a:"html5-drag-and-drop-api"},"71.5":{t:"CSS 属性",p:`

cursor：用于指定鼠标悬停在拖动元素上时的光标样式。


user-select：用于指定用户是否可以选择文本。

 ...`,l:"interview/weekly/240325.html#css-属性",a:"css-属性"},"71.6":{t:"JavaScript 编程",p:`

通过事件监听器监听拖拽相关事件，如 dragstart、dragover、drop 等。


在事件处理函数中实现拖拽操 ...`,l:"interview/weekly/240325.html#javascript-编程",a:"javascript-编程"},"71.7":{t:"Typescript常用的类型工具",p:`
Typescript常用类型工具

`,l:"interview/weekly/240325.html#typescript常用的类型工具",a:"typescript常用的类型工具"},"71.8":{t:"Vuex和Pinia的区别",p:"",l:"interview/weekly/240325.html#vuex和pinia的区别",a:"vuex和pinia的区别"},"71.9":{t:"option API 和 Composition API 区别",p:`

在逻辑组织和逻辑复用方面，Composition API是优于Options API


因为Composition A ...`,l:"interview/weekly/240325.html#option-api-和-composition-api-区别",a:"option-api-和-composition-api-区别"},"72.0":{t:"# 240326 面试",p:"",l:"interview/weekly/240326.html",a:"_240326-面试"},"72.1":{t:"15:00 线下",p:"",l:"interview/weekly/240326.html#_15-00-线下",a:"_15-00-线下"},"72.2":{t:"页面从url到渲染完成发生了什么",p:"",l:"interview/weekly/240326.html#页面从url到渲染完成发生了什么",a:"页面从url到渲染完成发生了什么"},"72.3":{t:"什么是强缓存 什么是协商缓存",p:`强缓存是
`,l:"interview/weekly/240326.html#什么是强缓存-什么是协商缓存",a:"什么是强缓存-什么是协商缓存"},"72.4":{t:"DNS解析的是什么",p:"",l:"interview/weekly/240326.html#dns解析的是什么",a:"dns解析的是什么"},"72.5":{t:"性能优化",p:"",l:"interview/weekly/240326.html#性能优化",a:"性能优化"},"72.6":{t:"React常用的Hook",p:"",l:"interview/weekly/240326.html#react常用的hook",a:"react常用的hook"},"72.7":{t:"useEffect的副作用指的是什么",p:"",l:"interview/weekly/240326.html#useeffect的副作用指的是什么",a:"useeffect的副作用指的是什么"},"72.8":{t:"重绘和重排",p:"",l:"interview/weekly/240326.html#重绘和重排",a:"重绘和重排"},"72.9":{t:"防抖和节流 实现一个防抖函数",p:"",l:"interview/weekly/240326.html#防抖和节流-实现一个防抖函数",a:"防抖和节流-实现一个防抖函数"},"72.10":{t:"DNS是去哪里获取IP呢",p:"",l:"interview/weekly/240326.html#dns是去哪里获取ip呢",a:"dns是去哪里获取ip呢"},"72.11":{t:"cookie和 storage区别",p:"",l:"interview/weekly/240326.html#cookie和-storage区别",a:"cookie和-storage区别"},"72.12":{t:"假如上线遇到一个bug 在命中缓存之前发生， 我们应该去执行什么操作让它获取到最新更新呢",p:"",l:"interview/weekly/240326.html#假如上线遇到一个bug-在命中缓存之前发生-我们应该去执行什么操作让它获取到最新更新呢",a:"假如上线遇到一个bug-在命中缓存之前发生-我们应该去执行什么操作让它获取到最新更新呢"},"72.13":{t:"20:00 线上",p:"",l:"interview/weekly/240326.html#_20-00-线上",a:"_20-00-线上"},"72.14":{t:"React简介和它的优点",p:"",l:"interview/weekly/240326.html#react简介和它的优点",a:"react简介和它的优点"},"72.15":{t:"常用的Hooks",p:"",l:"interview/weekly/240326.html#常用的hooks",a:"常用的hooks"},"72.16":{t:"React组件间通信方式",p:"",l:"interview/weekly/240326.html#react组件间通信方式",a:"react组件间通信方式"},"72.17":{t:"如何实现一个两边盒子固定 中间自适应的布局",p:"",l:"interview/weekly/240326.html#如何实现一个两边盒子固定-中间自适应的布局",a:"如何实现一个两边盒子固定-中间自适应的布局"},"72.18":{t:"如何实现盒子垂直居中",p:"",l:"interview/weekly/240326.html#如何实现盒子垂直居中",a:"如何实现盒子垂直居中"},"72.19":{t:"JS常用的数组方法 哪些改变了原数组 哪些没有改变",p:"",l:"interview/weekly/240326.html#js常用的数组方法-哪些改变了原数组-哪些没有改变",a:"js常用的数组方法-哪些改变了原数组-哪些没有改变"},"72.20":{t:"ES6新语法有哪些",p:"",l:"interview/weekly/240326.html#es6新语法有哪些",a:"es6新语法有哪些"},"72.21":{t:"reduce的方法",p:"",l:"interview/weekly/240326.html#reduce的方法",a:"reduce的方法"},"72.22":{t:"什么是闭包 它的功能是什么",p:"",l:"interview/weekly/240326.html#什么是闭包-它的功能是什么",a:"什么是闭包-它的功能是什么"},"72.23":{t:"Redux是什么",p:"",l:"interview/weekly/240326.html#redux是什么",a:"redux是什么"},"72.24":{t:"如何实现一个两个已经排序的数组合并后还是排序好的数组",p:"",l:"interview/weekly/240326.html#如何实现一个两个已经排序的数组合并后还是排序好的数组",a:"如何实现一个两个已经排序的数组合并后还是排序好的数组"},"72.25":{t:"JS中如何进行数组排序",p:"",l:"interview/weekly/240326.html#js中如何进行数组排序",a:"js中如何进行数组排序"},"72.26":{t:"输入 num = '1234567890' 输出 num = '1,234,567,890'",p:`
toLocaleString方法

let num = 1234567890;
let formattedNum = nu ...`,l:"interview/weekly/240326.html#输入-num-1234567890-输出-num-1-234-567-890",a:"输入-num-1234567890-输出-num-1-234-567-890"},"72.27":{t:"JS的事件循环机制",p:"",l:"interview/weekly/240326.html#js的事件循环机制",a:"js的事件循环机制"},"72.28":{t:"什么是原型链",p:"",l:"interview/weekly/240326.html#什么是原型链",a:"什么是原型链"},"72.29":{t:"基本数据类型",p:"",l:"interview/weekly/240326.html#基本数据类型",a:"基本数据类型"},"72.30":{t:"判断基本数据类型的方法",p:"",l:"interview/weekly/240326.html#判断基本数据类型的方法",a:"判断基本数据类型的方法"},"72.31":{t:"instanceof原理",p:"",l:"interview/weekly/240326.html#instanceof原理",a:"instanceof原理"},"73.0":{t:"# 240328面试 线上",p:"",l:"interview/weekly/240328.html",a:"_240328面试-线上"},"73.1":{t:"ES6常用语法",p:`
ES6新特性

`,l:"interview/weekly/240328.html#es6常用语法",a:"es6常用语法"},"73.2":{t:"CSS盒模型",p:"盒模型是一个盛放内容的容器, 它由四部分组成 元素的具体内容content、 内边距padding、边框border、外边距 ...",l:"interview/weekly/240328.html#css盒模型",a:"css盒模型"},"73.3":{t:"Promise和 Async Await用法区别",p:"",l:"interview/weekly/240328.html#promise和-async-await用法区别",a:"promise和-async-await用法区别"},"73.4":{t:"Promise",p:"Promise 是 JavaScript 中用来处理异步操作的对象，它代表一个异步操作最终的完成或失败，可以获取异步操作的结 ...",l:"interview/weekly/240328.html#promise",a:"promise"},"73.5":{t:"React组件传参",p:"",l:"interview/weekly/240328.html#react组件传参",a:"react组件传参"},"73.6":{t:"父组件传子组件",p:"",l:"interview/weekly/240328.html#父组件传子组件",a:"父组件传子组件"},"73.7":{t:"通过props参数进行传递",p:`
父组件

import React from 'react'

const Parent = ():React.FC =& ...`,l:"interview/weekly/240328.html#通过props参数进行传递",a:"通过props参数进行传递"},"73.8":{t:"子组件传递给父组件",p:`子组件传递给父组件严格来讲还是父传子， 通过props或者ref来实现传参效果
`,l:"interview/weekly/240328.html#子组件传递给父组件",a:"子组件传递给父组件"},"73.9":{t:"使用回调函数",p:"在父组件中定义一个回调函数getChildVal, 将这个函数绑定在子组件上通过props传入子组件，当子组件中是时间或者什 ...",l:"interview/weekly/240328.html#使用回调函数",a:"使用回调函数"},"73.10":{t:"通过ref",p:"子组件传递给父组件严格来讲还是父传子， 父组件传递给子组件ref，子组件将想要暴露给父组件的值放在上面， 然后父组件就可以使 ...",l:"interview/weekly/240328.html#通过ref",a:"通过ref"},"73.11":{t:"跨组件传值(父组件传孙组件)",p:`在跨组件传值过程中，我们可以使用父传子的方法，一层一层嵌套传递

父组件

const Parent = ():React. ...`,l:"interview/weekly/240328.html#跨组件传值-父组件传孙组件",a:"跨组件传值-父组件传孙组件"},"73.12":{t:"React 子组件如何传递给父组件参数",p:`父组件通过设置onchange事件传递给子组件， 子组件通过调用props.onchange事件来传递参数
`,l:"interview/weekly/240328.html#react-子组件如何传递给父组件参数",a:"react-子组件如何传递给父组件参数"},"73.13":{t:"CSS3常用属性",p:`
border-radius 边框圆角

允许创建元素的圆角边框
div {
  border-radius: 10px
} ...`,l:"interview/weekly/240328.html#css3常用属性",a:"css3常用属性"},"73.14":{t:"常用布局方式",p:`在网页设计和前端开发中，有许多常用的布局方式可以实现不同的页面结构和样式。以下是一些常用的布局方式：


传统布局：

基于 ...`,l:"interview/weekly/240328.html#常用布局方式",a:"常用布局方式"},"73.15":{t:"CSS实现垂直居中",p:`在 CSS 中实现垂直居中可以使用多种方法，以下是其中几种常见的方式：


使用 Flexbox
.container {
 ...`,l:"interview/weekly/240328.html#css实现垂直居中",a:"css实现垂直居中"},"73.16":{t:"宏任务和微任务的关系",p:`宏任务（Macro Task）和微任务（Micro Task）是 JavaScript 中处理异步操作的两种不同类型。

宏 ...`,l:"interview/weekly/240328.html#宏任务和微任务的关系",a:"宏任务和微任务的关系"},"73.17":{t:"闭包",p:"是什么 当一个函数中的内部函数被拿到函数外部调用，又因为在js中内层作用域总是能访问外层作用域的，那么内部函数存在对外部函数 ...",l:"interview/weekly/240328.html#闭包",a:"闭包"},"73.18":{t:"使用场景",p:`创建私有变量 （全局变量不易维护）
延长变量的生命周期
实现柯里化（颗粒）
`,l:"interview/weekly/240328.html#使用场景",a:"使用场景"},"73.19":{t:"React18新特性",p:"",l:"interview/weekly/240328.html#react18新特性",a:"react18新特性"},"73.20":{t:"升级",p:`
React18 不再支持IE浏览器
新项目直接使用 npm 或者 yarn 安装最新版依赖即可
改变根节点的挂在方式： 使 ...`,l:"interview/weekly/240328.html#升级",a:"升级"},"73.21":{t:"setState异步同步",p:`

异步更新(默认行为)
在 React 18 中，默认情况下，setState 方法会以异步方式进行更新。这意味着它会将多 ...`,l:"interview/weekly/240328.html#setstate异步同步",a:"setstate异步同步"},"73.22":{t:"新增API",p:`

startTransition
startTransition 是一个新的 React API，旨在帮助开发者优化应用程 ...`,l:"interview/weekly/240328.html#新增api",a:"新增api"},"73.23":{t:"严格模式",p:"React 严格模式（Strict Mode）是一个开发模式，可以帮助开发者发现一些潜在的问题，以提高应用程序的质量。启用严 ...",l:"interview/weekly/240328.html#严格模式",a:"严格模式"},"73.24":{t:"在应用程序启动时禁用严格模式",p:"在一些情况下，移除 React.StrictMode 组件可能不太方便，例如：在大型项目中或已经存在大量的 console. ...",l:"interview/weekly/240328.html#在应用程序启动时禁用严格模式",a:"在应用程序启动时禁用严格模式"},"73.25":{t:"并发模式",p:"React 并发模式（React Concurrent Mode）是 React 的一项新功能，旨在改善在复杂应用程序中的用 ...",l:"interview/weekly/240328.html#并发模式",a:"并发模式"},"74.0":{t:"# 2024-04-07 React",p:"",l:"interview/weekly/240407.html",a:"_2024-04-07-react"},"74.1":{t:"null 和 undefined 的区别",p:"",l:"interview/weekly/240407.html#null-和-undefined-的区别",a:"null-和-undefined-的区别"},"74.2":{t:"undefined(未定义)",p:`

在javascript中， undefined表示一个变量已经被声明了，但尚未被赋值，或者一个不存在的属性


当访问一 ...`,l:"interview/weekly/240407.html#undefined-未定义",a:"undefined-未定义"},"74.3":{t:"null(空值)",p:`

null表示一个变量被明确地赋值为一个空值，表示&quot;无&quot;、&quot;空&quot;或者&quot;不 ...`,l:"interview/weekly/240407.html#null-空值",a:"null-空值"},"74.4":{t:"联合类型和交叉类型的区别",p:"",l:"interview/weekly/240407.html#联合类型和交叉类型的区别",a:"联合类型和交叉类型的区别"},"74.5":{t:"交叉类型 `&`",p:"交叉类型是将多个类型合并为同一个类型，这样可以把现有的类型叠加到一起成为一种类型， 它包含了所需的所有类型的特性， 但不适用 ...",l:"interview/weekly/240407.html#交叉类型",a:"交叉类型"},"74.6":{t:"联合类型 `|`",p:"联合类型与交叉类型很有关联，但使用上完全不同， 联合类型会产生一个包含所有类型选择集的类型，表示一个值的类型是定义的联合类型 ...",l:"interview/weekly/240407.html#联合类型",a:"联合类型"},"74.7":{t:"实现千分号分隔符功能",p:`
使用 toLocalString方法

const num:number = 1234567890;
const form ...`,l:"interview/weekly/240407.html#实现千分号分隔符功能",a:"实现千分号分隔符功能"},"74.8":{t:"虚拟滚动 最终到底部后，所有的节点都被push进去， 那么此时上拉的时候会不会卡顿",p:`会卡顿
`,l:"interview/weekly/240407.html#虚拟滚动-最终到底部后-所有的节点都被push进去-那么此时上拉的时候会不会卡顿",a:"虚拟滚动-最终到底部后-所有的节点都被push进去-那么此时上拉的时候会不会卡顿"},"74.9":{t:"React有哪些性能优化",p:"",l:"interview/weekly/240407.html#react有哪些性能优化",a:"react有哪些性能优化"},"74.10":{t:"React.memo",p:"React.memo是react中用于性能优化的高阶组件(HOC),它类似于类组件中的 shouldComponentUpd ...",l:"interview/weekly/240407.html#react-memo",a:"react-memo"},"74.11":{t:"var a =  var b = a a.x = a = { n: 2 } console.log(a.x) console.log(b.x) 分别打印什么",p:`分别打印undefined和 {n: 2}

分析

这段代码涉及到 JavaScript 中变量引用和赋值的机制，需要分析 ...`,l:"interview/weekly/240407.html#n-1",a:"n-1"},"74.12":{t:"for (var i = 0; i < 3; i++) )} 输出结果是什么，有什么好的优化方式",p:"打印结果为三次3。 这是因为 setTimeout 函数是异步执行的，当循环结束后，i 的值已经变成了 3。而在每个 set ...",l:"interview/weekly/240407.html#settimeout-function-console-log-i",a:"settimeout-function-console-log-i"},"74.13":{t:"网格布局",p:`网格布局是一种基于网络的二维布局系统，旨在完全改变我们设计基于网格的用户界面的方式。
`,l:"interview/weekly/240407.html#网格布局",a:"网格布局"},"74.14":{t:"容器属性",p:`
示例

&lt;div class=&quot;wrapper&quot;&gt;
  &lt;div class=&qu ...`,l:"interview/weekly/240407.html#容器属性",a:"容器属性"},"74.15":{t:"display属性",p:`display:grid声明的是一个块级元素
display:inline-grid声明的是一个行内元素
`,l:"interview/weekly/240407.html#display属性",a:"display属性"},"74.16":{t:"grid-template-columns 属性和 grid-template-rows 属性（设置行列宽高）",p:`grid-template-columns 属性设置列宽
grid-template-rows 属性设置行高

固定的列宽和 ...`,l:"interview/weekly/240407.html#grid-template-columns-属性和-grid-template-rows-属性-设置行列宽高",a:"grid-template-columns-属性和-grid-template-rows-属性-设置行列宽高"},"74.17":{t:"grid-row-gap 属性、grid-column-gap 属性以及 grid-gap 属性（设置间距）",p:`grid-row-gap: 设置行间距
grid-column-gap: 设置列间距
grid-gap:grid-row-g ...`,l:"interview/weekly/240407.html#grid-row-gap-属性、grid-column-gap-属性以及-grid-gap-属性-设置间距",a:"grid-row-gap-属性、grid-column-gap-属性以及-grid-gap-属性-设置间距"},"74.18":{t:"grid-template-areas 属性（定义区域）",p:`grid-template-areas 属性用于定义区域，一个区域由一个或者多个单元格组成
一般这个属性跟网格元素的grid ...`,l:"interview/weekly/240407.html#grid-template-areas-属性-定义区域",a:"grid-template-areas-属性-定义区域"},"74.19":{t:"grid-auto-flow 属性（设置排列先后顺序）",p:"grid-auto-flow属性控制着自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列。默认的放置顺序是&qu ...",l:"interview/weekly/240407.html#grid-auto-flow-属性-设置排列先后顺序",a:"grid-auto-flow-属性-设置排列先后顺序"},"74.20":{t:"justify-items 属性、align-items 属性（单元格位置设置）",p:`justify-items 属性设置单元格内容的水平位置（左中右）
align-items 属性设置单元格的垂直位置（上中下 ...`,l:"interview/weekly/240407.html#justify-items-属性、align-items-属性-单元格位置设置",a:"justify-items-属性、align-items-属性-单元格位置设置"},"74.21":{t:"justify-content 属性、align-content 属性(内容区域位置设置)",p:`justify-content 属性是整个内容区域在容器里面的水平位置（左中右）
align-content 属性是整个内容 ...`,l:"interview/weekly/240407.html#justify-content-属性、align-content-属性-内容区域位置设置",a:"justify-content-属性、align-content-属性-内容区域位置设置"},"74.22":{t:"grid-auto-columns 属性和 grid-auto-rows 属性",p:`:::info 隐式网格
隐式和显示网格 显式网格包含了在grid-template-columns和grid-templa ...`,l:"interview/weekly/240407.html#grid-auto-columns-属性和-grid-auto-rows-属性",a:"grid-auto-columns-属性和-grid-auto-rows-属性"},"74.23":{t:"项目属性",p:"",l:"interview/weekly/240407.html#项目属性",a:"项目属性"},"74.24":{t:"grid-column-start 属性、grid-column-end 属性、grid-row-start 属性以及grid-row-end 属性（指定网格边框定位的网格线）",p:`
可以指定网格项目所在的四个边框，分别定位在哪根网格线，从而指定项目的位置

grid-column-start 属性：左边 ...`,l:"interview/weekly/240407.html#grid-column-start-属性、grid-column-end-属性、grid-row-start-属性以及grid-row-end-属性-指定网格边框定位的网格线",a:"grid-column-start-属性、grid-column-end-属性、grid-row-start-属性以及grid-row-end-属性-指定网格边框定位的网格线"},"74.25":{t:"grid-area属性",p:`grid-area: 指定项目放在哪一个区域， 常与grid-template-areas一起使用
`,l:"interview/weekly/240407.html#grid-area属性",a:"grid-area属性"},"74.26":{t:"justify-self 属性、align-self 属性以及 place-self 属性(单个单元格的位置)",p:"justify-self属性设置单元格内容的水平位置（左中右），跟justify-items属性的用法完全一致，但只作用于单 ...",l:"interview/weekly/240407.html#justify-self-属性、align-self-属性以及-place-self-属性-单个单元格的位置",a:"justify-self-属性、align-self-属性以及-place-self-属性-单个单元格的位置"},"75.0":{t:"# 2024-04-15",p:"",l:"interview/weekly/240415.html",a:"_2024-04-15"},"75.1":{t:"创建一个递增的数字数组",p:`const nums = 100
const arr = Array.from(Array(nums).keys())

`,l:"interview/weekly/240415.html#创建一个递增的数字数组",a:"创建一个递增的数字数组"},"75.2":{t:"reduce方法的使用",p:`
给定数组arr, 执行以下操作后最后打印结果

const arr = [2, 4, 6, 8]

arr.map(n=& ...`,l:"interview/weekly/240415.html#reduce方法的使用",a:"reduce方法的使用"},"75.3":{t:"JS事件循环机制",p:`console.log(1);
setTimeout(function () { console.log(2); }, 0) ...`,l:"interview/weekly/240415.html#js事件循环机制",a:"js事件循环机制"},"75.4":{t:"封装一个多维数组转一维数组的方法",p:`const arr = [1, 2, 3, [4, 5, [6]]]

const myFlat = &lt;T&gt;(a ...`,l:"interview/weekly/240415.html#封装一个多维数组转一维数组的方法",a:"封装一个多维数组转一维数组的方法"},"75.5":{t:"解析URL参数的函数",p:`
eg:

const url =  'http://www.baidu.com?k=1&amp;k=1&amp;kk=2# ...`,l:"interview/weekly/240415.html#解析url参数的函数",a:"解析url参数的函数"},"75.6":{t:"option请求",p:"HTTP中的OPTIONS请求是用于确定服务器支持哪些HTTP方法和信息，它是一种预检请求， 通常用于跨域请求和CORS(跨 ...",l:"interview/weekly/240415.html#option请求",a:"option请求"},"75.7":{t:"用途",p:`

检查服务器支持的方法
OPTIONS请求可以告诉客户端服务器支持哪些 HTTP 方法（如 GET、POST、PUT、DE ...`,l:"interview/weekly/240415.html#用途",a:"用途"},"75.8":{t:"封装一个判断是否为数字类型的方法，返回布尔值",p:`
const isNumber = &lt;T&gt;(num: T): boolean =&gt; {
  if (isN ...`,l:"interview/weekly/240415.html#封装一个判断是否为数字类型的方法-返回布尔值",a:"封装一个判断是否为数字类型的方法-返回布尔值"},"75.9":{t:"箭头函数指向",p:`箭头函数的this指向 指向的是由其所属函数或全局作用域决定的
let config = {a: 1, b: () =&gt ...`,l:"interview/weekly/240415.html#箭头函数指向",a:"箭头函数指向"},"75.10":{t:"Promise类方法",p:"",l:"interview/weekly/240415.html#promise类方法",a:"promise类方法"},"75.11":{t:"Promise.all()",p:"Promise.all的作用是将多个Promise包裹在一起形成一个新的Promise，并且这个新的Promise的状态是由 ...",l:"interview/weekly/240415.html#promise-all",a:"promise-all"},"75.12":{t:"Promise.resolve",p:"Promise.resolve(res)方法返回一个以给定值解析后的Promise对象，有时候我们已经有一个现成的值希望将其 ...",l:"interview/weekly/240415.html#promise-resolve",a:"promise-resolve"},"75.13":{t:"Promise.race",p:`如果有一个Promise有了结果，我们就希望决定最终新Promise的状态，那么可以使用race方法
`,l:"interview/weekly/240415.html#promise-race",a:"promise-race"},"75.14":{t:"Promise.any",p:"any方法是ES12中新增的方法，和race方法是类似的,不同的是any方法会等到一个fulfilled状态，才会决定新Pr ...",l:"interview/weekly/240415.html#promise-any",a:"promise-any"},"75.15":{t:"Promise.allSettled",p:"all方法有一个缺陷：当有其中一个Promise变成reject状态时，新Promise就会立即变成对应的reject状态。 ...",l:"interview/weekly/240415.html#promise-allsettled",a:"promise-allsettled"},"75.16":{t:"Typescript问题",p:`interface TreeData {
  username: string,
  userid: string,
  c ...`,l:"interview/weekly/240415.html#typescript问题",a:"typescript问题"},"76.0":{t:"# 2024-04-23",p:`

前端笔试题


实现一个返回 Promise 的异步函数，能够在 1000 毫秒后向调用方返回字符串 &quot;OK& ...`,l:"interview/weekly/240423.html",a:"_2024-04-23"},"77.0":{t:"# 24-05-07",p:"",l:"interview/weekly/240507.html",a:"_24-05-07"},"77.1":{t:"自我介绍",p:"",l:"interview/weekly/240507.html#自我介绍",a:"自我介绍"},"77.2":{t:"React 动态还是静态的？单线程还是多线程？有异步队列吗？",p:"",l:"interview/weekly/240507.html#react-动态还是静态的-单线程还是多线程-有异步队列吗",a:"react-动态还是静态的-单线程还是多线程-有异步队列吗"},"77.3":{t:"VUE2和VUE3区别 存储状态管理的问题",p:"",l:"interview/weekly/240507.html#vue2和vue3区别-存储状态管理的问题",a:"vue2和vue3区别-存储状态管理的问题"},"77.4":{t:"JS 动态还是静态的？",p:"",l:"interview/weekly/240507.html#js-动态还是静态的",a:"js-动态还是静态的"},"77.5":{t:"JS 异步队列",p:"",l:"interview/weekly/240507.html#js-异步队列",a:"js-异步队列"},"77.6":{t:"微任务和宏任务哪个优先级更高？",p:"",l:"interview/weekly/240507.html#微任务和宏任务哪个优先级更高",a:"微任务和宏任务哪个优先级更高"},"77.7":{t:"HTTP S的原理",p:"",l:"interview/weekly/240507.html#http-s的原理",a:"http-s的原理"},"77.8":{t:"HTTP 底层用什么实现的？建立链接是哪些？",p:"",l:"interview/weekly/240507.html#http-底层用什么实现的-建立链接是哪些",a:"http-底层用什么实现的-建立链接是哪些"},"77.9":{t:"浏览器加载URL发生了哪些过程",p:"",l:"interview/weekly/240507.html#浏览器加载url发生了哪些过程",a:"浏览器加载url发生了哪些过程"},"77.10":{t:"缓存判断什么来判断？",p:"",l:"interview/weekly/240507.html#缓存判断什么来判断",a:"缓存判断什么来判断"},"77.11":{t:"做一个性能监控工具，应该有哪些指标？",p:"",l:"interview/weekly/240507.html#做一个性能监控工具-应该有哪些指标",a:"做一个性能监控工具-应该有哪些指标"},"77.12":{t:"跨域问题",p:"",l:"interview/weekly/240507.html#跨域问题",a:"跨域问题"},"77.13":{t:"做过小程序吗？ 实现顶部导航栏固定有哪些方法",p:"",l:"interview/weekly/240507.html#做过小程序吗-实现顶部导航栏固定有哪些方法",a:"做过小程序吗-实现顶部导航栏固定有哪些方法"},"77.14":{t:"项目详细介绍一下，项目的难点？",p:"",l:"interview/weekly/240507.html#项目详细介绍一下-项目的难点",a:"项目详细介绍一下-项目的难点"},"77.15":{t:"TS 使用的原因？优缺点",p:"",l:"interview/weekly/240507.html#ts-使用的原因-优缺点",a:"ts-使用的原因-优缺点"},"77.16":{t:"TS 是静态语言还是动态语言？",p:"",l:"interview/weekly/240507.html#ts-是静态语言还是动态语言",a:"ts-是静态语言还是动态语言"},"77.17":{t:"怎么区分动态还是静态语言？",p:"",l:"interview/weekly/240507.html#怎么区分动态还是静态语言",a:"怎么区分动态还是静态语言"},"77.18":{t:"浏览器协商缓存，怎么判断用不用缓存？",p:"",l:"interview/weekly/240507.html#浏览器协商缓存-怎么判断用不用缓存",a:"浏览器协商缓存-怎么判断用不用缓存"},"77.19":{t:"HTTP 底层用什么实现的？ 建立链接是哪些？",p:"",l:"interview/weekly/240507.html#http-底层用什么实现的-建立链接是哪些",a:"http-底层用什么实现的-建立链接是哪些"},"77.20":{t:"HTTP 协议",p:"",l:"interview/weekly/240507.html#http-协议",a:"http-协议"},"77.21":{t:"JS 单线程还是多线程？   为什么是单线程？",p:"",l:"interview/weekly/240507.html#js-单线程还是多线程-为什么是单线程",a:"js-单线程还是多线程-为什么是单线程"},"77.22":{t:"JS 异步队列 事件阻塞",p:"",l:"interview/weekly/240507.html#js-异步队列-事件阻塞",a:"js-异步队列-事件阻塞"},"77.23":{t:"set time out 异步原理",p:"",l:"interview/weekly/240507.html#set-time-out-异步原理",a:"set-time-out-异步原理"},"77.24":{t:"宏任务队列 微任务队列",p:"",l:"interview/weekly/240507.html#宏任务队列-微任务队列",a:"宏任务队列-微任务队列"},"78.0":{t:"# 2024-11-11",p:`&lt;!-- 小红书面试 --&gt;
`,l:"interview/weekly/241111.html",a:"_2024-11-11"},"78.1":{t:"自我介绍",p:"",l:"interview/weekly/241111.html#自我介绍",a:"自我介绍"},"78.2":{t:"React的React.memo和useMemo的区别",p:`React.memo和 useMemo都是用于优化React应用性能的工具，但是他们的应用场景和使用方式有所不同。


Re ...`,l:"interview/weekly/241111.html#react的react-memo和usememo的区别",a:"react的react-memo和usememo的区别"},"78.3":{t:"React中useMemo、useCallback的区别",p:`
useCallback

useCallback是一个用于优化性能的React Hook，它的主要作用是避免在每次渲染的时 ...`,l:"interview/weekly/241111.html#react中usememo、usecallback的区别",a:"react中usememo、usecallback的区别"},"78.4":{t:"React中常见的Hooks",p:`

useState
用于管理功能组件中的状态


useEffect
用于在功能组件中执行副作用，例如获取数据或订阅事件
 ...`,l:"interview/weekly/241111.html#react中常见的hooks",a:"react中常见的hooks"},"78.5":{t:"React中 组件我如果不想让他重复渲染 但是它内部又有许多useState变量 我应该如何操作",p:`

可以使用React.memo来实现

React.memo 是一个高阶组件，它会对传入的组件进行浅比较（props 是否 ...`,l:"interview/weekly/241111.html#react中-组件我如果不想让他重复渲染-但是它内部又有许多usestate变量-我应该如何操作",a:"react中-组件我如果不想让他重复渲染-但是它内部又有许多usestate变量-我应该如何操作"},"78.6":{t:"Vue2和Vue3的区别",p:`

根节点不同
vue2中必须要有根标签，vue3中可以没有根标签，会默认将多个根标签包裹在一个fragement文档碎片中 ...`,l:"interview/weekly/241111.html#vue2和vue3的区别",a:"vue2和vue3的区别"},"78.7":{t:"总结",p:`
更快的渲染性能
更小的体积
更好的Typescript支持
更灵活的组合式API
更好的响应式系统

`,l:"interview/weekly/241111.html#总结",a:"总结"},"78.8":{t:"Vue响应式如何实现的",p:`

Vue2


Vue2中的数据响应式会根据数据类型做不同的处理。如果是对象，则通过Object.defineProper ...`,l:"interview/weekly/241111.html#vue响应式如何实现的",a:"vue响应式如何实现的"},"78.9":{t:"Typescript中 type和interface的区别",p:`

type
type是类型别名，顾名思义，类型别名只是给类型起一个新名字。它并不是一个类型，只是一个别名而已； 有了typ ...`,l:"interview/weekly/241111.html#typescript中-type和interface的区别",a:"typescript中-type和interface的区别"},"78.10":{t:"Css中我想实现一个上下固定容器 中间自适应的布局我应该如何实现",p:`
可以使用flex布局来实现

通过给父级容器设置flex属性，并且让他排列方式为垂直排列：flex-direction:c ...`,l:"interview/weekly/241111.html#css中我想实现一个上下固定容器-中间自适应的布局我应该如何实现",a:"css中我想实现一个上下固定容器-中间自适应的布局我应该如何实现"},"78.11":{t:"Vue3中 watch和watchEffect的区别",p:`
watch和watchEffect都是监听器，watchEffect是一个副作用函数，他们之间的区别有：

watch：既 ...`,l:"interview/weekly/241111.html#vue3中-watch和watcheffect的区别",a:"vue3中-watch和watcheffect的区别"},"78.12":{t:"手写题",p:`

编写一个函数来查找字符串数组中的最长公共前缀，如果不存在公共前缀，返回空字符串 &quot;&quot;

示例1： 输 ...`,l:"interview/weekly/241111.html#手写题",a:"手写题"},"79.0":{t:"# css 拉斯维加斯场馆3D数字动画",p:`
实际效果

&lt;TextAnimation/&gt;
&lt;!-- &lt;TextAnimation3D/&gt; ...`,l:"native/css/3D数字动画.html",a:"css-拉斯维加斯场馆3d数字动画"},"80.0":{t:"# CSS box-shdow 示例",p:`
实际效果

&lt;BoxShadow/&gt;

原文链接: box-shadow属性高级用法

`,l:"native/css/css-box-shdow.html",a:"css-box-shdow-示例"},"81.0":{t:"# CSS一些加载样式",p:`

`,l:"native/css/css一些加载样式.html",a:"css一些加载样式"},"81.1":{t:"动画效果一",p:`&lt;Spinner/&gt;

HTML

&lt;div class=&quot;spinner&quot;&gt;
 ...`,l:"native/css/css一些加载样式.html#动画效果一",a:"动画效果一"},"81.2":{t:"动画效果二",p:`&lt;TurnOverCSS/&gt;

HTML

  &lt;div class=&quot;turn-over&qu ...`,l:"native/css/css一些加载样式.html#动画效果二",a:"动画效果二"},"81.3":{t:"动画效果三",p:`&lt;ScaleCSS/&gt;

HTML

  &lt;div class=&quot;scale-style&quo ...`,l:"native/css/css一些加载样式.html#动画效果三",a:"动画效果三"},"81.4":{t:"动画效果四",p:`&lt;CubeRotation/&gt;

HTML

  &lt;div class=&quot;cube-roate& ...`,l:"native/css/css一些加载样式.html#动画效果四",a:"动画效果四"},"81.5":{t:"动画效果五",p:`&lt;DotRoate/&gt;

HTML

  &lt;div class=&quot;dot-rotate&quot ...`,l:"native/css/css一些加载样式.html#动画效果五",a:"动画效果五"},"81.6":{t:"动画效果六",p:`&lt;ScaleLoading/&gt;

HTML

  &lt;div class=&quot;scale-loadi ...`,l:"native/css/css一些加载样式.html#动画效果六",a:"动画效果六"},"81.7":{t:"动画效果七",p:`&lt;GradientRotate/&gt;

HTML

  &lt;div class=&quot;gradient- ...`,l:"native/css/css一些加载样式.html#动画效果七",a:"动画效果七"},"81.8":{t:"动画效果八",p:`&lt;CircleLoading/&gt;

HTML

&lt;div class=&quot;circle&quot; ...`,l:"native/css/css一些加载样式.html#动画效果八",a:"动画效果八"},"81.9":{t:"动画样式九",p:`&lt;Diverge/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot ...`,l:"native/css/css一些加载样式.html#动画样式九",a:"动画样式九"},"81.10":{t:"动画效果十",p:`&lt;RotationContraction/&gt;

HTML

&lt;template&gt;
  &lt;div ...`,l:"native/css/css一些加载样式.html#动画效果十",a:"动画效果十"},"81.11":{t:"动画效果11 旋转收缩",p:`&lt;Contraction/&gt;

HTML

&lt;template&gt;
  &lt;div class=& ...`,l:"native/css/css一些加载样式.html#动画效果11-旋转收缩",a:"动画效果11-旋转收缩"},"81.12":{t:"动画效果12 动态位置",p:`&lt;Moving/&gt;

HTML

&lt;template&gt;
  &lt;div class=&quot; ...`,l:"native/css/css一些加载样式.html#动画效果12-动态位置",a:"动画效果12-动态位置"},"81.13":{t:"动画效果13",p:`&lt;RiceRotate/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果13",a:"动画效果13"},"81.14":{t:"动画效果14",p:`&lt;MusicDance/&gt;

HTML

&lt;template&gt;
  &lt;div class=&q ...`,l:"native/css/css一些加载样式.html#动画效果14",a:"动画效果14"},"81.15":{t:"动画效果15",p:`&lt;TriangleBloom/&gt;

HTML

&lt;template&gt;
  &lt;div class ...`,l:"native/css/css一些加载样式.html#动画效果15",a:"动画效果15"},"82.0":{t:"# CSS权重规则",p:`

优先级
浏览器通过优先级来判断哪些属性值与一个元素最为相关，从而在该元素上应用这些属性值。优先级是基于不同种类选择器组成 ...`,l:"native/css/css权重规则.html",a:"css权重规则"},"83.0":{t:"# CSS背景动画",p:`
实际效果

&lt;BackgroundDemo/&gt;

代码块



&lt;template&gt;
  &lt; ...`,l:"native/css/css背景动画.html",a:"css背景动画"},"84.0":{t:"# 方块跳动动画",p:`
实际效果

&lt;BlockBounce/&gt;

原文链接：CSS 实现跳动的方块动画

`,l:"native/css/css跳动方块.html",a:"方块跳动动画"},"85.0":{t:"# 一些原生CSS样式与概念",p:`!CSS
`,l:"native/css/index.html",a:"一些原生css样式与概念"},"86.0":{t:"# 炫目动画",p:`&lt;DazzlingCss/&gt;
`,l:"native/css/炫目动画.html",a:"炫目动画"},"86.1":{t:"代码实现",p:`  &lt;template&gt;
    &lt;div class=&quot;partial-container&q ...`,l:"native/css/炫目动画.html#代码实现",a:"代码实现"},"87.0":{t:"# ES6 数据类型的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html",a:"es6-数据类型的扩展"},"87.1":{t:"字符串类型的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#字符串类型的扩展",a:"字符串类型的扩展"},"87.2":{t:"模版字符串",p:`使用反引号(\`)包裹的字符串, 支持多行文本和嵌入表达式
const name = 'world'
const str =  ...`,l:"native/javascript/ES6数据类型的扩展.html#模版字符串",a:"模版字符串"},"87.3":{t:"模版标签函数",p:`允许定义自定义的字符串处理函数,以处理模版字符串
const customTag = (strings, ...values ...`,l:"native/javascript/ES6数据类型的扩展.html#模版标签函数",a:"模版标签函数"},"87.4":{t:"`String.prototype.includes()`",p:`判断字符串是否包含指定字符, 返回布尔值
const str = 'hello world'

console.log(st ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-includes",a:"string-prototype-includes"},"87.5":{t:"`String.prototype.startWith()`/`String.prototype.endWith()`",p:`判断字符串是否以指定的字符开始/结束, 返回布尔值
const str = 'hello world'

// 开始
con ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-startwith-string-prototype-endwith",a:"string-prototype-startwith-string-prototype-endwith"},"87.6":{t:"`String.propotype.repeat()`",p:`将字符串指定次数，返回新的字符串
const str = 'hello world'

console.log(str.re ...`,l:"native/javascript/ES6数据类型的扩展.html#string-propotype-repeat",a:"string-propotype-repeat"},"87.7":{t:"`String.prototype.fromCodePoint()`",p:`根据给定的码点创建一个字符串，它可以将一个或者多个码点转换为相应的字符
console.log(String.formCod ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-fromcodepoint",a:"string-prototype-fromcodepoint"},"87.8":{t:"`String.prototype.raw()`",p:`用于获取一个模版字符串的原始字符串形式，忽略其中的转义字符
const path = 'C:\\\\Users\\\\hhh\\\\Do ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-raw",a:"string-prototype-raw"},"87.9":{t:"`String.prototype.codePointAt()`",p:`用于返回指定位置的字符的码点
const str = 'abc'

console.log(str.codePointAt( ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-codepointat",a:"string-prototype-codepointat"},"87.10":{t:"`String.prototype.normalize()`",p:`用于将字符串的Unicode 标准化形式，它主要用于处理 Unicode 字符串的表达形式
const str = 'c\\u ...`,l:"native/javascript/ES6数据类型的扩展.html#string-prototype-normalize",a:"string-prototype-normalize"},"87.11":{t:"数组类型的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#数组类型的扩展",a:"数组类型的扩展"},"87.12":{t:"扩展运算符(`...`)",p:`扩展运算符类似 rest 参数的逆运算， 将一个数组转为用逗号分隔的参数序列
console.log(...[1, 2, 3 ...`,l:"native/javascript/ES6数据类型的扩展.html#扩展运算符",a:"扩展运算符"},"87.13":{t:"`Array.prototype.from`",p:"该方法用于将两类对象转为真正的数组：类似数组的对象（array-like object）和可遍历（iterable）的对象（ ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-from",a:"array-prototype-from"},"87.14":{t:"`Array.prototype.of`",p:`根据传入的参数创建一个新数组
const arr = Array.of(1, 2, 3)
console.log(arr)  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-of",a:"array-prototype-of"},"87.15":{t:"`Array.prototype.find()`、`Array.prototype.findIndex()`",p:`find() 方法 返回数组中满足条件的第一个元素
findIndex()方法 返回数组中满足条件的第一个元素的索引
//  ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-find-、-array-prototype-findindex",a:"array-prototype-find-、-array-prototype-findindex"},"87.16":{t:"`Array.prototype.fill()`",p:`使用固定值填充一个数组中从起始索引（默认为 0）到终止索引（默认为 array.length）内的全部元素
const ar ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-fill",a:"array-prototype-fill"},"87.17":{t:"`Array.prototype.copyWithin()`",p:`用于将数组中的一部分元素复制到指定位置，覆盖原有的元素
const arr = [1, 2, 3, 4, 5]
arr.co ...`,l:"native/javascript/ES6数据类型的扩展.html#array-prototype-copywithin",a:"array-prototype-copywithin"},"87.18":{t:"`Array.prototype.keys()`、`Array.prototype.values()`、`Array.prototype.entries()`",p:"ES6 提供三个新的方法——entries()，keys()和values()——用于遍历数组。它们都返回一个遍历器对象,  ...",l:"native/javascript/ES6数据类型的扩展.html#array-prototype-keys-、-array-prototype-values-、-array-prototype-entries",a:"array-prototype-keys-、-array-prototype-values-、-array-prototype-entries"},"87.19":{t:"对象类型的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#对象类型的扩展",a:"对象类型的扩展"},"87.20":{t:"属性的简洁表示法",p:`ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法，这样的书写更加简洁
const foo = 'bar'
 ...`,l:"native/javascript/ES6数据类型的扩展.html#属性的简洁表示法",a:"属性的简洁表示法"},"87.21":{t:"属性名表达式",p:`Javascript 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二
obj['a ...`,l:"native/javascript/ES6数据类型的扩展.html#属性名表达式",a:"属性名表达式"},"87.22":{t:"`Object.is(value1, value2)`",p:`用于比较两个值是否相同
与&quot;===&quot;操作符的行为类似，但有两个区别：一是Object.is(NaN, N ...`,l:"native/javascript/ES6数据类型的扩展.html#object-is-value1-value2",a:"object-is-value1-value2"},"87.23":{t:"`Object.assign(target, ...sources)`",p:"将一个或多个源对象的属性复制到目标对象中。它返回目标对象。如果多个源对象具有相同的属性，则后面的对象的属性将覆盖前面的对象的 ...",l:"native/javascript/ES6数据类型的扩展.html#object-assign-target-sources",a:"object-assign-target-sources"},"87.24":{t:"`Object.getPrototypeOf(obj)`",p:`用于获取对象的原型。它返回指定对象的原型。
const obj = {};
const prototype = Object ...`,l:"native/javascript/ES6数据类型的扩展.html#object-getprototypeof-obj",a:"object-getprototypeof-obj"},"87.25":{t:"`Object.setPrototypeOf(obj, prototype)`",p:`用于设置对象的原型。它将指定对象的原型设置为另一个对象或null。
const obj = {};
const protot ...`,l:"native/javascript/ES6数据类型的扩展.html#object-setprototypeof-obj-prototype",a:"object-setprototypeof-obj-prototype"},"87.26":{t:"正则的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#正则的扩展",a:"正则的扩展"},"87.27":{t:"`RegExp构造函数的扩展`",p:"在ES6之前，RegExp构造函数不允许使用第二个参数添加修饰符。在ES6中，如果RegExp构造函数第一个参数是一个正则对 ...",l:"native/javascript/ES6数据类型的扩展.html#regexp构造函数的扩展",a:"regexp构造函数的扩展"},"87.28":{t:"`Flags属性`",p:`用于返回正则表达式的修饰符
const regex = /abc/gi;
console.log(regex.flags); ...`,l:"native/javascript/ES6数据类型的扩展.html#flags属性",a:"flags属性"},"87.29":{t:"`u修饰符`",p:`用于处理大于\\uFFFF的Unicode字符。
console.log(/^\\S$/.test('𠮷'));// fals ...`,l:"native/javascript/ES6数据类型的扩展.html#u修饰符",a:"u修饰符"},"87.30":{t:"`y修饰符`",p:`也称为“粘连”修饰符，用于指定只从目标字符串的当前位置开始匹配
const regex = /abc/y;
console. ...`,l:"native/javascript/ES6数据类型的扩展.html#y修饰符",a:"y修饰符"},"87.31":{t:"`RegExp.prototype.sticky`/`RegExp.prototype.unicode`",p:`表示是否有y修饰符/表示是否有u修饰符
console.log(/hello\\d/y.sticky);//true
cons ...`,l:"native/javascript/ES6数据类型的扩展.html#regexp-prototype-sticky-regexp-prototype-unicode",a:"regexp-prototype-sticky-regexp-prototype-unicode"},"87.32":{t:"正则方法调用变更",p:"字符串对象的match()、replace()、search()、split()内部调用转为调用RegExp实例对应的Reg ...",l:"native/javascript/ES6数据类型的扩展.html#正则方法调用变更",a:"正则方法调用变更"},"87.33":{t:"函数类型的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#函数类型的扩展",a:"函数类型的扩展"},"87.34":{t:"基本用法",p:`ES6 之前，不能直接为函数的参数指定默认值，只能采用变通的方法。
function func(x, y) {
  y =  ...`,l:"native/javascript/ES6数据类型的扩展.html#基本用法",a:"基本用法"},"87.35":{t:"运算符的扩展",p:"",l:"native/javascript/ES6数据类型的扩展.html#运算符的扩展",a:"运算符的扩展"},"87.36":{t:"ES6 新增了一个指数运算符(`**`)",p:`2 2 // 4
2 3 // 8

这个运算符的一个特点是右结合，而不是常见的左结合。多个指数运算符连用时，是从最右边开始 ...`,l:"native/javascript/ES6数据类型的扩展.html#es6-新增了一个指数运算符",a:"es6-新增了一个指数运算符"},"88.0":{t:"# ES6新特性(一)(常用)",p:"ES是ECMAScript的缩写， 也就是JavaScript的标准化规范，ECMAScript是一种由 Ecma 国际组织 ...",l:"native/javascript/ES6新特性一.html",a:"es6新特性-一-常用"},"88.1":{t:"声明方式 `let`、`const`",p:"",l:"native/javascript/ES6新特性一.html#声明方式-let-、-const",a:"声明方式-let-、-const"},"88.2":{t:"let",p:"let 关键字用于声明一个块级作用域的变量。与 var 关键字的区别在于 let 声明的变量只在其所在的块级作用域中有效，而 ...",l:"native/javascript/ES6新特性一.html#let",a:"let"},"88.3":{t:"const",p:"const 关键字是用于声明一个常量，其值在声明后不能再被改变。 const 声明的变量也是块级作用域的，与 let 类似， ...",l:"native/javascript/ES6新特性一.html#const",a:"const"},"88.4":{t:"变量的解构赋值",p:"",l:"native/javascript/ES6新特性一.html#变量的解构赋值",a:"变量的解构赋值"},"88.5":{t:"数组的解构",p:`ES6 允许按照一定的模式，从数组和对象中提取值，对变量进行赋值， 这个过程被称为解构(Destructuring)
基本用 ...`,l:"native/javascript/ES6新特性一.html#数组的解构",a:"数组的解构"},"88.6":{t:"对象的解构",p:`
对象的解构与数组有一个重要的不同，数组的元素是按次序排列的，变量的取值由它们的位置决定； 而对象的属性没有次序，变量必须与 ...`,l:"native/javascript/ES6新特性一.html#对象的解构",a:"对象的解构"},"88.7":{t:"字符串的解构",p:`字符串也可以解构赋值， 这是因为在解构字符串的时候， 字符串被转化成了一个类数组对象
const [a, b, c, d,  ...`,l:"native/javascript/ES6新特性一.html#字符串的解构",a:"字符串的解构"},"88.8":{t:"数值与布尔值的解构",p:`解构赋值时候， 如果等号右边是数值和布尔值， 则先会转换为对象
let { toString: s } = 123
s == ...`,l:"native/javascript/ES6新特性一.html#数值与布尔值的解构",a:"数值与布尔值的解构"},"88.9":{t:"函数的参数的解构",p:`function add ([x, y]) {
  return x + y
}
add([1, 2]) // 3

上述示 ...`,l:"native/javascript/ES6新特性一.html#函数的参数的解构",a:"函数的参数的解构"},"88.10":{t:"函数参数默认值",p:"ES6 中， 我们可以在函数参数中设置默认值，这意味着如果调用函数的时候没有为参数提供有效值，它们将会使用默认值， 这对简化 ...",l:"native/javascript/ES6新特性一.html#函数参数默认值",a:"函数参数默认值"},"88.11":{t:"箭头函数",p:`
箭头函数具有简洁的语法，清晰的上下文，继承外部作用域的arguments等特点， 适合简化代码，避免this指向问题和明确 ...`,l:"native/javascript/ES6新特性一.html#箭头函数",a:"箭头函数"},"88.12":{t:"使用注意点",p:`
箭头函数没有自己的this对象
不可以当作构造函数，也就是说， 不可以对箭头函数使用new指令， 否则会抛出错误
不可以使 ...`,l:"native/javascript/ES6新特性一.html#使用注意点",a:"使用注意点"},"88.13":{t:"箭头函数与普通函数的区别",p:`
箭头函数是匿名函数，不能作为构造函数， 不能使用new
箭头函数不能绑定 arguments，要用 rest 参数 解决
 ...`,l:"native/javascript/ES6新特性一.html#箭头函数与普通函数的区别",a:"箭头函数与普通函数的区别"},"88.14":{t:"模版字符串",p:"模版字符串是ES6中引入的一种新的字符串语法，它允许字符串中插入变量或者表达式，而不需要使用字符串拼接符号。模版字符串使用反 ...",l:"native/javascript/ES6新特性一.html#模版字符串",a:"模版字符串"},"88.15":{t:"扩展操作符",p:"扩展操作符用于展开可迭代对象(数组、字符串等)，好比 rest 参数的逆运算，将其元素逐个展开，以便于在函数调用、数组字面量 ...",l:"native/javascript/ES6新特性一.html#扩展操作符",a:"扩展操作符"},"88.16":{t:"展开数组",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1, 4, 5] // [1, 2,  ...`,l:"native/javascript/ES6新特性一.html#展开数组",a:"展开数组"},"88.17":{t:"传递参数给函数",p:`
function sum(a, b, c) {
  return a + b + c
}
const numbers =  ...`,l:"native/javascript/ES6新特性一.html#传递参数给函数",a:"传递参数给函数"},"88.18":{t:"浅拷贝数组或对象",p:`const arr1 = [1, 2, 3]
const arr2 = [...arr1] // [1, 2, 3]

co ...`,l:"native/javascript/ES6新特性一.html#浅拷贝数组或对象",a:"浅拷贝数组或对象"},"88.19":{t:"对象字面量简化",p:"ES6引入了一种更简洁的方式来定义对象字面量，即ES6对象字面量语法。它提供了一种更方便的方法来定义和初始化对象属性。它是E ...",l:"native/javascript/ES6新特性一.html#对象字面量简化",a:"对象字面量简化"},"88.20":{t:"属性的简介表示法",p:`ES6中， 可以使用更简洁的语法来定义对象字面量， 还可以直接在对象字面量中定义方法，而不需要使用function关键字
c ...`,l:"native/javascript/ES6新特性一.html#属性的简介表示法",a:"属性的简介表示法"},"88.21":{t:"属性名表达式",p:`Javascript中 定义对象的属性， 有两种方法
// 方法一
obj.foo = true

// 方法二(ES6)
 ...`,l:"native/javascript/ES6新特性一.html#属性名表达式",a:"属性名表达式"},"88.22":{t:"类",p:"ES6引入了类（class）的概念，使得面向对象的编程变得更加直观和易于理解。类是一种蓝图或模板，用于创建具有相同属性和方法 ...",l:"native/javascript/ES6新特性一.html#类",a:"类"},"88.23":{t:"模块化",p:`

模块化是一种组织和管理JavaScript代码的方法，它将代码拆分为独立的模块，每个模块都有自己的作用域和功能。这种方法 ...`,l:"native/javascript/ES6新特性一.html#模块化",a:"模块化"},"89.0":{t:"# ES6新特性(二)(常用)",p:"",l:"native/javascript/ES6新特性二.html",a:"es6新特性-二-常用"},"89.1":{t:"proxy",p:"proxy 用于修改某些操作的默认行为，等同于在语言层面做出修改，所以属于一种 元编程(meta programming), ...",l:"native/javascript/ES6新特性二.html#proxy",a:"proxy"},"89.2":{t:"Proxy handler 支持的拦截操作",p:`


操作
功能
返回值




get(target, propKey, receiver)
拦截对象属性的读取，比如 p ...`,l:"native/javascript/ES6新特性二.html#proxy-handler-支持的拦截操作",a:"proxy-handler-支持的拦截操作"},"89.3":{t:"Proxy 实例的方法(常用)",p:"",l:"native/javascript/ES6新特性二.html#proxy-实例的方法-常用",a:"proxy-实例的方法-常用"},"89.4":{t:"get()",p:"get 方法用于拦截某个属性的读取操作，可以接收三个函数，依次为目标对象、属性名和proxy实例本身(严格地说，是操作行为所 ...",l:"native/javascript/ES6新特性二.html#get",a:"get"},"89.5":{t:"set()",p:"set 方法用来拦截某个属性的赋值操作, 可以接受四个参数，依次为目标对象、属性名、属性值和 Proxy 实例本身，其中最后 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"89.6":{t:"apply()",p:`apply 方法拦截函数的调用、call 、apply 操作
apply 方法可以接受三个参数， 分别是目标对象、目标对象的 ...`,l:"native/javascript/ES6新特性二.html#apply",a:"apply"},"89.7":{t:"Reflect",p:"Reflect 是ES6 中操作对象而提供的新API, 是为了解决在ES6之前使用对象的操作存在一些不一致和不直观的地方，有 ...",l:"native/javascript/ES6新特性二.html#reflect",a:"reflect"},"89.8":{t:"常用方法",p:`

Reflect.apply(target, thisArg, args) 调用一个函数，并传入指定的参数


Refle ...`,l:"native/javascript/ES6新特性二.html#常用方法",a:"常用方法"},"89.9":{t:"利用 `Reflect` 和 `Proxy` 实现一个观察者模式",p:`// 创建一个观察者对象

class Observer {
  constructor () {
    this.lis ...`,l:"native/javascript/ES6新特性二.html#利用-reflect-和-proxy-实现一个观察者模式",a:"利用-reflect-和-proxy-实现一个观察者模式"},"89.10":{t:"Symbol",p:"在 ES6 之前对象属性名都是字符串，这容易造成属性名的冲突。 ES6 引入了一种新的原始数据类型 Symbol, 表示独一 ...",l:"native/javascript/ES6新特性二.html#symbol",a:"symbol"},"89.11":{t:"Map/WeakMap、Set/WeakSet 数据结构",p:"",l:"native/javascript/ES6新特性二.html#map-weakmap、set-weakset-数据结构",a:"map-weakmap、set-weakset-数据结构"},"89.12":{t:"Map",p:"Map是一种键值对的集合(Hash结构)， 它类似于对象， 但有一些不同之处。 Map的键可以是任意类型的值，包括对象和函数 ...",l:"native/javascript/ES6新特性二.html#map",a:"map"},"89.13":{t:"方法",p:`


方法
功能




\`\`get()\`
返回键值对


set()
添加键值对， 返回实例


delete()
删除键 ...`,l:"native/javascript/ES6新特性二.html#方法",a:"方法"},"89.14":{t:"WeekMap",p:`WeakMap 也是一种键值对的集合，但是只接受对象作为键，不接受其它类型的数据
WeakMap中的键是弱引用的，这意味着如 ...`,l:"native/javascript/ES6新特性二.html#weekmap",a:"weekmap"},"89.15":{t:"应用",p:`

存储 DOM 节点： DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


部署私有属性: ...`,l:"native/javascript/ES6新特性二.html#应用",a:"应用"},"89.16":{t:"WeakMap 方法",p:`


方法
功能




get()
返回键值对


set()
添加键值对，返回实例


delete()
删除键值对，  ...`,l:"native/javascript/ES6新特性二.html#weakmap-方法",a:"weakmap-方法"},"89.17":{t:"Set",p:"Set 是一种不重复值的集合， 类似于数组，但是它的值是唯一的， 不会重复。 Set可以存储任意类型的值，报苦熬原始类型和对 ...",l:"native/javascript/ES6新特性二.html#set",a:"set"},"89.18":{t:"Set 方法",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#set-方法",a:"set-方法"},"89.19":{t:"WeakSet",p:"WeakSet 是一种弱引用集合，它只能存储对象类型的值，并且这些对象是弱引用的，这意味着如果一个对象在 WeakSet 中 ...",l:"native/javascript/ES6新特性二.html#weakset",a:"weakset"},"89.20":{t:"WeakSet应用",p:`

储存DOM节点：DOM节点被移除时自动释放此成员键，不用担心这些节点从文档移除时会引发内存泄漏


临时存放一组对象或存 ...`,l:"native/javascript/ES6新特性二.html#weakset应用",a:"weakset应用"},"89.21":{t:"WeakSet  方法",p:`|方法|功能|
|add()|添加值， 返回实例|
|delete()| 删除值， 返回布尔值|
|has()|检查值，返回 ...`,l:"native/javascript/ES6新特性二.html#weakset-方法",a:"weakset-方法"},"89.22":{t:"迭代器(Iterator) 和 for...of循环",p:"",l:"native/javascript/ES6新特性二.html#迭代器-iterator-和-for-of循环",a:"迭代器-iterator-和-for-of循环"},"89.23":{t:"迭代器(Iterator)",p:"迭代器(Iterator) 是一种迭代机制，为各种不同的数据结构提供统一的访问机制，任何数据结构只要内部有 Iterator ...",l:"native/javascript/ES6新特性二.html#迭代器-iterator",a:"迭代器-iterator"},"89.24":{t:"迭代器功能",p:`
为各种数据结构提供一个统一的、简便的访问接口
使得数据结构成员能够按照某种次序排列
为ES6 创造了一种新的遍历命令 fo ...`,l:"native/javascript/ES6新特性二.html#迭代器功能",a:"迭代器功能"},"89.25":{t:"遍历过程",p:`
创建一个指针对象， 指向当前数据结构的起始位置。也就是说，遍历器对象本质上 就是一个指针对象
第一次调用指针对象的 nex ...`,l:"native/javascript/ES6新特性二.html#遍历过程",a:"遍历过程"},"89.26":{t:"原生具备 Iterator 接口的数据结构",p:`
Array
Map
Set
String
TypedArray
函数的 arguments 对象
NodeList对象

`,l:"native/javascript/ES6新特性二.html#原生具备-iterator-接口的数据结构",a:"原生具备-iterator-接口的数据结构"},"89.27":{t:"迭代器对象方法",p:`|next()| 下一步操作， 返回 { value, done }(必须部署)|
|return()|for-of提前退出 ...`,l:"native/javascript/ES6新特性二.html#迭代器对象方法",a:"迭代器对象方法"},"89.28":{t:"使用场合",p:`
解构赋值

对数组和 Set 结构进行解构赋值时， 会默认使用 Symbol.iterator 方法
let set =  ...`,l:"native/javascript/ES6新特性二.html#使用场合",a:"使用场合"},"89.29":{t:"for...of 循环",p:"for...of 循环用于遍历可迭代对象(例如数组、字符串、Set、Map 等)， 它会迭代对象的每个元素并执行指定的代码块 ...",l:"native/javascript/ES6新特性二.html#for-of-循环",a:"for-of-循环"},"89.30":{t:"生成器(Generator)",p:`Gererator 函数在语法上， 可以把它理解成一个状态及， 内部封装了多个状态
执行 Generator 函数会返回一个 ...`,l:"native/javascript/ES6新特性二.html#生成器-generator",a:"生成器-generator"},"89.31":{t:"特征",p:`
function 关键字与函数名之间有一个星号
函数体内部使用 yield 表达式， 定义不同的内部状态

functio ...`,l:"native/javascript/ES6新特性二.html#特征",a:"特征"},"90.0":{t:"# JS下载文件",p:`
a标签直接下载

data = data.replace(/\\\\/g, '/');
var aLink = documen ...`,l:"native/javascript/JS下载文件.html",a:"js下载文件"},"91.0":{t:"# JS中的元素尺寸与布局信息",p:`

Attributes
offsetWidth：代表了元素的宽度，包括边框和填充，但不是边距；
offsetHeight： ...`,l:"native/javascript/JS中的元素尺寸与布局信息.html",a:"js中的元素尺寸与布局信息"},"92.0":{t:"# JS解析URL参数",p:`
方法一

let url = &quot;https: //zhidao.baidu.com/question/17684 ...`,l:"native/javascript/JS解析URL参数.html",a:"js解析url参数"},"93.0":{t:"# TCP的三次握手与四次挥手",p:"",l:"native/javascript/TCP三次握手与四次挥手.html",a:"tcp的三次握手与四次挥手"},"93.1":{t:"TCP三次握手",p:`这里我们将发出方成为客户端， 接收方成为服务端。 TCP建立连接主要分为三部分， 可简单描述为

客户端向服务端发起TCP请 ...`,l:"native/javascript/TCP三次握手与四次挥手.html#tcp三次握手",a:"tcp三次握手"},"93.2":{t:"TCP四次挥手",p:"在数据传输完毕之后会进行TCP四次握手即是TCP连接关闭，TCP需要进行四次挥手的原因在于TCP连接是双全工，即双方通信，每 ...",l:"native/javascript/TCP三次握手与四次挥手.html#tcp四次挥手",a:"tcp四次挥手"},"93.3":{t:"引用",p:`Internet通信
`,l:"native/javascript/TCP三次握手与四次挥手.html#引用",a:"引用"},"94.0":{t:"# TCP/IP 四、五层，OSI七层模型区别",p:"网络层次可划分为 四层因特网协议栈 和 七层因特网协议栈, 起初网络分层是标准的七层，也就是我们说的 OSI七层模型,参考模 ...",l:"native/javascript/TCP四层五层与OSI七层模型区别.html",a:"tcp-ip-四、五层-osi七层模型区别"},"95.0":{t:"# XSS攻击与 CSRF攻击",p:"",l:"native/javascript/XSS攻击与CSRF攻击.html",a:"xss攻击与-csrf攻击"},"95.1":{t:"XSS攻击",p:"Cross-site Scripting(跨站脚本攻击)简称 XSS，是一种代码注入攻击。攻击者通过在目标网站上注入恶意脚本 ...",l:"native/javascript/XSS攻击与CSRF攻击.html#xss攻击",a:"xss攻击"},"95.2":{t:"常见注入方法",p:`
在 HTML 中内嵌的文本中，恶意内容以 Script 标签形成注入
在内联的 JavaScript 中， 拼接的数据突破 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#常见注入方法",a:"常见注入方法"},"95.3":{t:"XSS 攻击分类",p:`根据攻击的来源， XSS攻击可以分为存储行，反射型和DOM型三种

存储型: 即攻击被存储到服务到，常见的是在评论区插入攻击 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-攻击分类",a:"xss-攻击分类"},"95.4":{t:"防范方法",p:`
HttpOnly: 在cookie中设置httponly属性之后，js脚本将无法获取到cookie信息
输入过滤: 一般是 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防范方法",a:"防范方法"},"95.5":{t:"CSRF攻击",p:"Cross-site request forgery (跨站请求伪造),也被称为one-click attack 或者 se ...",l:"native/javascript/XSS攻击与CSRF攻击.html#csrf攻击",a:"csrf攻击"},"95.6":{t:"防御方法",p:`
验证码: 强制用户必须与应用进行交互，才能最终完成请求。此种方式能很好的遏制CSRF，但用户体验较差
Refer Chec ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#防御方法",a:"防御方法"},"95.7":{t:"XSS 和 CSRF 的区别",p:`
通常来讲CSRF是由XSS实现的，CSRF时常也被成为XSRF(CSRF实现的方式还可以是直接通过命令行发起请求等)
本质 ...`,l:"native/javascript/XSS攻击与CSRF攻击.html#xss-和-csrf-的区别",a:"xss-和-csrf-的区别"},"95.8":{t:"来源",p:`XSS攻击和CSRF攻击
`,l:"native/javascript/XSS攻击与CSRF攻击.html#来源",a:"来源"},"96.0":{t:"# JS中call apply bind 的区分",p:`在原生js中会有三个很常见的函数，call,apply,bind
它们的作用就是改变当前函数的this指针，
但是细微来说它 ...`,l:"native/javascript/call-apply-bind的区别.html",a:"js中call-apply-bind-的区分"},"96.1":{t:"总结",p:"call和apply都是改变上下文中的this并立即执行这个函数，bind方法可以让对应的函数想什么时候调就什么时候调用，并 ...",l:"native/javascript/call-apply-bind的区别.html#总结",a:"总结"},"97.0":{t:"# Cookie (document.cookie)",p:`cookie是直接存储在浏览器的一小串数据， 它们是HTTP协议的一部分，由 [RFC 6265][1] 规范定义。
Coo ...`,l:"native/javascript/cookie参数.html",a:"cookie-document-cookie"},"97.1":{t:"从document.cookie中读取",p:`你的浏览器是否存储了本网站的任何cookie？ 让我们来看看：
// 在javascript.info 我们使用谷歌分析来统 ...`,l:"native/javascript/cookie参数.html#从document-cookie中读取",a:"从document-cookie中读取"},"97.2":{t:"写入document.cookie",p:`我们可以写入document.cookie。但这不是一个数据属性， 它是一个[访问器][2]。对其的赋值操作会被特殊处理。
 ...`,l:"native/javascript/cookie参数.html#写入document-cookie",a:"写入document-cookie"},"97.3":{t:"path",p:`
path=/mypath

url路径前缀必须是绝对路径。它使得该路径下的页面可以访问该cookie。默认为当前路径。
如 ...`,l:"native/javascript/cookie参数.html#path",a:"path"},"97.4":{t:"domain",p:`
domain=site.com
domain控制了可访问cookie的域。但是在实际中，有一些限制。 我们无法设置任何域。 ...`,l:"native/javascript/cookie参数.html#domain",a:"domain"},"97.5":{t:"expires  max-age",p:"默认情况下， 如果一个cookie没有设置这两个参数中的任何一个， 那么在关闭浏览器后，它就会消失。此类cookie被称为“ ...",l:"native/javascript/cookie参数.html#expires-max-age",a:"expires-max-age"},"97.6":{t:"secure",p:`
secure
cookiey应该只能被通过https传输。

`,l:"native/javascript/cookie参数.html#secure",a:"secure"},"98.0":{t:"# Eslint 的一些配置命令",p:`{  
  &quot;env&quot;: {  
    &quot;browser&quot;: true,  
   ...`,l:"native/javascript/eslint常见配置.html",a:"eslint-的一些配置命令"},"99.0":{t:"# 一些Javascript基础知识与方法",p:`!JavaScript
`,l:"native/javascript/index.html",a:"一些javascript基础知识与方法"},"100.0":{t:"# JS模块化",p:`JavaScript的 ESM AMD UMD CJS

ESM


​ESM代表ES模块，是Javascript提出的实现 ...`,l:"native/javascript/js模块化.html",a:"js模块化"},"101.0":{t:"# Array.map与Array.forEach的区别",p:"",l:"native/javascript/map与forEach的区别.html",a:"array-map与array-foreach的区别"},"101.1":{t:"定义",p:`

Array.map: map() 方法创建一个新数组，这个新数组由原数组中的每个元素都调用一次提供的函数后的返回值组成。 ...`,l:"native/javascript/map与forEach的区别.html#定义",a:"定义"},"101.2":{t:"简单实现",p:`

map
function myMap(array, callback) {
  const result  = [];
 ...`,l:"native/javascript/map与forEach的区别.html#简单实现",a:"简单实现"},"102.0":{t:"# MomentJS",p:`MomentJS
moment.js是一个轻量级的JavaScript时间库，它方便了日常开发中对时间的操作，提高了开发效率 ...`,l:"native/javascript/moment使用.html",a:"momentjs"},"102.1":{t:"一、引入moment.js",p:"",l:"native/javascript/moment使用.html#一、引入moment-js",a:"一、引入moment-js"},"102.2":{t:"1.Node.js方式引入",p:`（1）安装

npm install moment  
//或者
yarn add moment


（2）引入
// re ...`,l:"native/javascript/moment使用.html#_1-node-js方式引入",a:"_1-node-js方式引入"},"102.3":{t:"2.浏览器方式引入",p:`

`,l:"native/javascript/moment使用.html#_2-浏览器方式引入",a:"_2-浏览器方式引入"},"102.4":{t:"二、设定moment区域为中国",p:`// require 方式
require('moment/locale/zh-cn')
moment.locale('zh ...`,l:"native/javascript/moment使用.html#二、设定moment区域为中国",a:"二、设定moment区域为中国"},"102.5":{t:"三、使用",p:"",l:"native/javascript/moment使用.html#三、使用",a:"三、使用"},"102.6":{t:"1.获取时间",p:`（1）获取当前时间
//获取当前时间
moment()

（2）获取今天0时0分0秒
//获取今天0时0分0秒
moment ...`,l:"native/javascript/moment使用.html#_1-获取时间",a:"_1-获取时间"},"102.7":{t:"2.设置时间",p:`（1）设置年份
//设置年份
moment().year(2019)
moment().set('year', 2019)
 ...`,l:"native/javascript/moment使用.html#_2-设置时间",a:"_2-设置时间"},"102.8":{t:"3.格式化时间",p:`


格式代码
说明
返回值例子




M
数字表示的月份，没有前导零
1到12


MM
数字表示的月份，有前导零
01 ...`,l:"native/javascript/moment使用.html#_3-格式化时间",a:"_3-格式化时间"},"102.9":{t:"4.比较时间",p:`（1）获取两个日期之间的时间
//获取两个日期之间的时间
let start_date = moment().subtrac ...`,l:"native/javascript/moment使用.html#_4-比较时间",a:"_4-比较时间"},"102.10":{t:"5.转化为JavaScript原生Date对象",p:`//转化为JavaScript原生Date对象
moment().toDate()
new Date(moment())

`,l:"native/javascript/moment使用.html#_5-转化为javascript原生date对象",a:"_5-转化为javascript原生date对象"},"102.11":{t:"6.日期格式化输出实例",p:`//日期格式化输出实例
moment().format('MMMM Do YYYY, h:mm:ss a'); // 五月  ...`,l:"native/javascript/moment使用.html#_6-日期格式化输出实例",a:"_6-日期格式化输出实例"},"102.12":{t:"7.相对时间 输出实例",p:"moment(&quot;20111031&quot;, &quot;YYYYMMDD&quot;).fromNow();  ...",l:"native/javascript/moment使用.html#_7-相对时间-输出实例",a:"_7-相对时间-输出实例"},"102.13":{t:"8.日历时间输出实例",p:`moment().subtract(10, 'days').calendar(); // 2019年5月14日

momen ...`,l:"native/javascript/moment使用.html#_8-日历时间输出实例",a:"_8-日历时间输出实例"},"102.14":{t:"9.多语言支持输出实例",p:`moment().format('L');    // 2019-05-24

moment().format('l');  ...`,l:"native/javascript/moment使用.html#_9-多语言支持输出实例",a:"_9-多语言支持输出实例"},"102.15":{t:"10.其它输出实例",p:`moment().format(&quot;YYYY-MM-DD&quot;) //格式化显示当前时间
//上一个月的1号
 ...`,l:"native/javascript/moment使用.html#_10-其它输出实例",a:"_10-其它输出实例"},"103.0":{t:"# Array.reduce 方法的使用场景",p:"",l:"native/javascript/reduce方法的使用场景.html",a:"array-reduce-方法的使用场景"},"103.1":{t:"功能",p:`Array.prototype.reduce 方法泛用性很强, 这个方法功能主要是对数组中每个元素执
行一个提供的reduc ...`,l:"native/javascript/reduce方法的使用场景.html#功能",a:"功能"},"103.2":{t:"参数值",p:`reduce方法主要接收两个参数， 一个是执行操作的回调函数， 一个初始值(可选)。
`,l:"native/javascript/reduce方法的使用场景.html#参数值",a:"参数值"},"103.3":{t:"回调函数",p:"回调函数是数组中每个元素执行的函数， 其返回值将作为下一次调用回调函数时的 accumulator 参数。对于最后一次调用， ...",l:"native/javascript/reduce方法的使用场景.html#回调函数",a:"回调函数"},"103.4":{t:"initialValue",p:"第一次调用回调函数初始化 accumulator的值。 如果指定了 initialValue， 则回调函数从数组中第一个元素 ...",l:"native/javascript/reduce方法的使用场景.html#initialvalue",a:"initialvalue"},"103.5":{t:"使用场景",p:"",l:"native/javascript/reduce方法的使用场景.html#使用场景",a:"使用场景"},"103.6":{t:"一维数组求和",p:`const arr: number[] = [0, 1, 2, 3];
// acc: 表示的是累加器 accumulato ...`,l:"native/javascript/reduce方法的使用场景.html#一维数组求和",a:"一维数组求和"},"103.7":{t:"累加对象数组里的值",p:`reduce方法不仅可以求纯数字数组的和， 针对对象数组里的值也可以求和
type Item = {x : number } ...`,l:"native/javascript/reduce方法的使用场景.html#累加对象数组里的值",a:"累加对象数组里的值"},"103.8":{t:"展平嵌套数组",p:`const arr: [number, number] = [[0, 1], [2, 3], [4, 5]]
const s ...`,l:"native/javascript/reduce方法的使用场景.html#展平嵌套数组",a:"展平嵌套数组"},"103.9":{t:"统计对象中值出现的次数",p:`const names: string[] = ['陈大', '李二', '张三', '朱四', '王五', '张三']
c ...`,l:"native/javascript/reduce方法的使用场景.html#统计对象中值出现的次数",a:"统计对象中值出现的次数"},"103.10":{t:"按属性对对象进行分组",p:`type Item = { name: string, age: number }
const objArr: Item[] ...`,l:"native/javascript/reduce方法的使用场景.html#按属性对对象进行分组",a:"按属性对对象进行分组"},"103.11":{t:"使用扩展运算符和 `initialValue` 连接包含在对象数组中的数组",p:`type Item = {
  name: string;
  books: string[];
  age: number ...`,l:"native/javascript/reduce方法的使用场景.html#使用扩展运算符和-initialvalue-连接包含在对象数组中的数组",a:"使用扩展运算符和-initialvalue-连接包含在对象数组中的数组"},"103.12":{t:"数组去重",p:`:::info 备注
可以使用 Set 和 Array.from()来实现同样的效果， 如const arr = Array ...`,l:"native/javascript/reduce方法的使用场景.html#数组去重",a:"数组去重"},"103.13":{t:"使用 reduce() 来替代 .filer().map()",p:`
使用.filter() 和 .map()会遍历数组两次，但是可以使用reduce()只遍历一次并实现相同的效果， 从而更高 ...`,l:"native/javascript/reduce方法的使用场景.html#使用-reduce-来替代-filer-map",a:"使用-reduce-来替代-filer-map"},"103.14":{t:"按顺序运行promise",p:`/**
 * 链接一系列 Promise 处理程序。
 *
 * @param {array} arr——一个 Promis ...`,l:"native/javascript/reduce方法的使用场景.html#按顺序运行promise",a:"按顺序运行promise"},"103.15":{t:"在稀疏数组中使用reduce",p:`
reduce()会跳过稀疏数组中缺失的元素， 但不会跳过undefined 值

console.log([1, 2, , ...`,l:"native/javascript/reduce方法的使用场景.html#在稀疏数组中使用reduce",a:"在稀疏数组中使用reduce"},"103.16":{t:"非数组对象上调用reduce",p:`
reduce()方法读取this的length 属性， 然后访问每个整数索引

const arrLike = {
  l ...`,l:"native/javascript/reduce方法的使用场景.html#非数组对象上调用reduce",a:"非数组对象上调用reduce"},"103.17":{t:"功能性函数管道",p:`// 组合使用的构建块
const double = (x) =&gt; 2 x;
const triple = (x) = ...`,l:"native/javascript/reduce方法的使用场景.html#功能性函数管道",a:"功能性函数管道"},"104.0":{t:"# setTimeout与setInterval区别",p:`定义：在JavaScript中，setTimeout和setInterval是两个用于执行延迟操作或定期执行代码的函数
`,l:"native/javascript/setTimeout与setInterval.html",a:"settimeout与setinterval区别"},"104.1":{t:"setTimeout",p:`全局的 setTimeout() 方法设置一个定时器，一旦定时器到期，就会执行一个函数或指定的代码片段。


语法：setT ...`,l:"native/javascript/setTimeout与setInterval.html#settimeout",a:"settimeout"},"104.2":{t:"setInterval",p:`setInterval() 方法重复调用一个函数或执行一个代码片段，在每次调用之间具有固定的时间间隔。


语法：setIn ...`,l:"native/javascript/setTimeout与setInterval.html#setinterval",a:"setinterval"},"104.3":{t:"精度问题",p:"尽管setTimeout与setInterval是Javascript中常用的定时器函数，但它们在执行上存在一些精度方面的问 ...",l:"native/javascript/setTimeout与setInterval.html#精度问题",a:"精度问题"},"104.4":{t:"取消调度",p:"setTimeout 和 setInterval 都可以通过 clearTimeout 和 clearInterval 方法 ...",l:"native/javascript/setTimeout与setInterval.html#取消调度",a:"取消调度"},"104.5":{t:"利用setTimeout实现一个setInterval",p:"  const setIntervalFunctional = (callback: () =&gt; void, dela ...",l:"native/javascript/setTimeout与setInterval.html#利用settimeout实现一个setinterval",a:"利用settimeout实现一个setinterval"},"104.6":{t:"requestAnimationFrame",p:"window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前 ...",l:"native/javascript/setTimeout与setInterval.html#requestanimationframe",a:"requestanimationframe"},"104.7":{t:"对比",p:`
requestAnimationFrame通常比setTimeout和setinterval更精准， 因为它与浏览器的重绘 ...`,l:"native/javascript/setTimeout与setInterval.html#对比",a:"对比"},"105.0":{t:"# 关于this指向",p:"",l:"native/javascript/关于this指向.html",a:"关于this指向"},"105.1":{t:"this指向的规律",p:`

在函数体中， 非显式或隐式地简单调用函数时，在严格模式下， 函数内的 this 会
被绑定到 undefined 上，  ...`,l:"native/javascript/关于this指向.html#this指向的规律",a:"this指向的规律"},"105.2":{t:"全局环境中的`this`",p:`/**
 * 正常模式下 this指向的是 全局window对象
 */
function func1 ():void {
 ...`,l:"native/javascript/关于this指向.html#全局环境中的-this",a:"全局环境中的-this"},"105.3":{t:"上下文对象中调用的`this`",p:`interface Student {
  name: string
  fn: () =&gt; Student
}
co ...`,l:"native/javascript/关于this指向.html#上下文对象中调用的-this",a:"上下文对象中调用的-this"},"105.4":{t:"通过bind、call、apply 改变this指向",p:`
它们都是用来改变相关函数的 this 指向， 但这个call、apply是直接进行相关函数调用的；bind不会执行相关函数 ...`,l:"native/javascript/关于this指向.html#通过bind、call、apply-改变this指向",a:"通过bind、call、apply-改变this指向"},"105.5":{t:"构造函数和this",p:`function Foo() {
  this.bar = 'Lucas'
}

const instance = new  ...`,l:"native/javascript/关于this指向.html#构造函数和this",a:"构造函数和this"},"105.6":{t:"箭头函数中的this",p:`
箭头函数的this指向的是由其所属函数或者全局作用域决定的

/**
 * this 出现在 setTimeout的 匿名 ...`,l:"native/javascript/关于this指向.html#箭头函数中的this",a:"箭头函数中的this"},"105.7":{t:"this优先级",p:`我们常常把通过 call、bind、apply、new对 this进行绑定的情况称为显示绑定；
根据调用关系确定this指向 ...`,l:"native/javascript/关于this指向.html#this优先级",a:"this优先级"},"106.0":{t:"# 前端数据类型",p:"JavaScript 是一种有着动态类型的动态语言。JavaScript 中的变量与任何特定值类型没有任何关联，任何变量都可 ...",l:"native/javascript/前端数据类型.html",a:"前端数据类型"},"106.1":{t:"基本数据类型",p:`


类型
typeof返回值
对象包装器




Null
object
不适用


Undefined
undefine ...`,l:"native/javascript/前端数据类型.html#基本数据类型",a:"基本数据类型"},"106.2":{t:"复杂数据类型",p:"",l:"native/javascript/前端数据类型.html#复杂数据类型",a:"复杂数据类型"},"106.3":{t:"Object",p:"在计算机科学中，对象（object）是指内存中的可以被标识符引用的一块区域。在 JavaScript 中，对象是唯一可变的值 ...",l:"native/javascript/前端数据类型.html#object",a:"object"},"106.4":{t:"判断数据类型的方式",p:`
typeof 操作符
typeof运算符返回一个字符串，表示操作数的类型

除了 null，所有原始类型都可以使用type ...`,l:"native/javascript/前端数据类型.html#判断数据类型的方式",a:"判断数据类型的方式"},"107.0":{t:"# 原型与原型链",p:`!原型与原型链
注：上图中 P1是构造函数 Parent()的一个实例
`,l:"native/javascript/原型与原型链.html",a:"原型与原型链"},"107.1":{t:"前置知识",p:`
Javascript中对象分为 函数对象和 普通对象, 每个对象都有 __proto__ 属性, 但是只有函数才会有 pr ...`,l:"native/javascript/原型与原型链.html#前置知识",a:"前置知识"},"107.2":{t:"`prototype`属性",p:"prototype是函数独有的属性，从图中可以看到它从一个对象指向另一个对象，代表这个对象是这个函数的原型对象，这个对象也是 ...",l:"native/javascript/原型与原型链.html#prototype-属性",a:"prototype-属性"},"107.3":{t:"`__proto__`属性",p:"__proto__属性是对象独有的(包括函数), 从图中我们可以看到__proto__属性是从一个对象指向另一个对象，即从一 ...",l:"native/javascript/原型与原型链.html#proto-属性",a:"proto-属性"},"107.4":{t:"`constructor`属性",p:"constructor是对象才有的属性，从图中看到它是从一个对象指向一个函数的。指向的函数就是该对象的构造函数，每个对象都有 ...",l:"native/javascript/原型与原型链.html#constructor-属性",a:"constructor-属性"},"107.5":{t:"引用",p:`JavaScript原型&amp;原型链
`,l:"native/javascript/原型与原型链.html#引用",a:"引用"},"108.0":{t:"# 变量的提升",p:`关于变量的提升，先看下面一个例子
var x = 5 ;
console.log(x) // 此时打印出来的是5;

var ...`,l:"native/javascript/变量的提升.html",a:"变量的提升"},"109.0":{t:"# 回流与重绘",p:"",l:"native/javascript/回流与重绘.html",a:"回流与重绘"},"109.1":{t:"`回流（reflow）`",p:`回流（reflow）: 当render树（渲染树）中的一部分或者全部因为大小边距等引起结构变化 而需要重建的过程叫做回流
`,l:"native/javascript/回流与重绘.html#回流-reflow",a:"回流-reflow"},"109.2":{t:"`重绘（repaint）`",p:"重绘（repaint）:当render 树中的一些元素需要更新属性，而这些属性只是影响元素的外观，风格，而不会影响布局的，比 ...",l:"native/javascript/回流与重绘.html#重绘-repaint",a:"重绘-repaint"},"109.3":{t:"render树",p:`render树的节点叫做渲染器； 渲染器在文档解析和dom树创建之后创建，会计算dom节点的样式信息；
如果说元素设置成了d ...`,l:"native/javascript/回流与重绘.html#render树",a:"render树"},"109.4":{t:"何时触发回流和重绘",p:`

repaint重绘：

回流(reflow)必定引起重绘(repaint)，重绘可以单独触发
背景色、颜色、字体改变（注 ...`,l:"native/javascript/回流与重绘.html#何时触发回流和重绘",a:"何时触发回流和重绘"},"109.5":{t:"性能优化",p:`
尽量避免改变布局属性。如width, height, left, top。
除了transforms或者opacity属性 ...`,l:"native/javascript/回流与重绘.html#性能优化",a:"性能优化"},"109.6":{t:"css",p:`
减少选择器的复杂性。
避免逐个修改节点样式，尽量一次性修改，减少style修改所影响元素的数量,使用cssText来替代要 ...`,l:"native/javascript/回流与重绘.html#css",a:"css"},"109.7":{t:"js",p:"我们也知道回流的花销也不小，如果每句JS操作都去回流重绘的话，浏览器可能就会受不了。所以很多浏览器都会优化这些操作，浏览器会 ...",l:"native/javascript/回流与重绘.html#js",a:"js"},"110.0":{t:"# 数组常用的方法",p:"",l:"native/javascript/常用的数组的方法.html",a:"数组常用的方法"},"110.1":{t:"`Array.prototype.indexOf()`",p:`该方法返回数组中第一次出现给定元素的下标，如果不存在则返回 -1。
可以传两个参数 第一个参数为需要查找的元素， 第二个是可 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-indexof",a:"array-prototype-indexof"},"110.2":{t:"`Array.prototype.map()`",p:`该方法是将数组中的每个元素调用一个提供的函数，结果作为一个新的数组返回，并没有改变原来的数组
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-map",a:"array-prototype-map"},"110.3":{t:"`Array.prototype.forEach()`",p:`该方法是将数组中的每个元素执行传进提供的函数，没有返回值，直接改变原数组，注意和map方法区分
  const arr =  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-foreach",a:"array-prototype-foreach"},"110.4":{t:"`Array.prototype.filter()`",p:`该方法是将所有元素进行判断，将满足条件的元素生成一个新数组返回
  const arr = [1, 2, 3, 4, 5]
 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-filter",a:"array-prototype-filter"},"110.5":{t:"`Array.prototype.find()`",p:`该方法是将所有元素进行判断，并且返回符合条件的第一个元素的值， 否则返回undefined
  const arr = [1 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-find",a:"array-prototype-find"},"110.6":{t:"`Array.prototype.every()`",p:`该方法是将所有元素进行判断，如果所有的元素都符合判断条件，则返回true 否则返回false
  const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-every",a:"array-prototype-every"},"110.7":{t:"`Array.prototype.some()`",p:`该方法将所有元素进行判断， 如果存在至少一个元素符合判断条件，则返回true, 否则返回false
  const arr  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-some",a:"array-prototype-some"},"110.8":{t:"`Array.prototype.reduce()`与 `Array.prototype.reduceRight()`",p:`该方法是所有元素调用返回函数， 返回值为最后结果， 传入的类型必须为函数类型
两者区别是Array.prototype.re ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-reduce-与-array-prototype-reduceright",a:"array-prototype-reduce-与-array-prototype-reduceright"},"110.9":{t:"`Array.prototype.pop()`",p:`该方法是在数组后面删除最后一个元素，并返回删除的元素，该方法改变了数组的长度
const arr = [1,2,3,4,5] ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-pop",a:"array-prototype-pop"},"110.10":{t:"`Array.prototype.push()`",p:`该方法是在数组最后一个元素后面添加一个或多个元素， 返回变化后数组长度，并且更改原数组
const arr = [1,2,3 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-push",a:"array-prototype-push"},"110.11":{t:"`Array.prototype.shift()`",p:`该方法是会删除掉数组的第一项， 返回数组删除的元素， 并且改变原数组
const arr = [1,2,3,4,5]
arr ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-shift",a:"array-prototype-shift"},"110.12":{t:"`Array.prototype.unshift()`",p:`该方法是将一个或者多个元素添加到数组的开头， 返回新数组的长度， 改变原来的数组
  const arr = [1, 2,  ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-unshift",a:"array-prototype-unshift"},"110.13":{t:"`Array.isArray()`",p:`该方法是判断目标元素是否为数组，返回布尔值， 这是属于数组原型的方法
  const arr = [1, 2, 3, 4,  ...`,l:"native/javascript/常用的数组的方法.html#array-isarray",a:"array-isarray"},"110.14":{t:"`Array.prototype.concat()`",p:`该方法可以讲多个数组拼接成一个数组
const arr = [1,2,3,4]
const arr2 = [5,6,7]
c ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-concat",a:"array-prototype-concat"},"110.15":{t:"`Array.prototype.join()`",p:`该方法是将数组中的元素拼接成字符串，拼接格式为join函数传入的参数, 不改变原数组， 并且没有参数时默认为逗号,连接
co ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-join",a:"array-prototype-join"},"110.16":{t:"`Array.prototype.toString()`",p:`该方法也是将数组转化为字符串，与join方法不同的是， 拼接格式与函数参数无关，都是以逗号,拼接
const arr = [ ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-tostring",a:"array-prototype-tostring"},"110.17":{t:"`Array.prototype.slice()`",p:"该方法传入一个数字， 表示从传入的数字为要处理的元素的下标， 并把小于这个下标对应的元素的元素都删除掉，如果传入负数，则以最 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-slice",a:"array-prototype-slice"},"110.18":{t:"`Array.prototype.splice()`",p:`该方法通过移除或者替换已存在的元素和/或添加新元素，并且就地改变一个数组的内容。
最多只支持三个参数


只传入一个参数
这 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-splice",a:"array-prototype-splice"},"110.19":{t:"`Array.prototype.includes()`",p:`该方法用来判断一个数组是否包含一个指定的值，如果有则返回true， 否则返回false
  const arr = [1,2 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-includes",a:"array-prototype-includes"},"110.20":{t:"`Array.prototype.flat()`",p:`方法创建一个新的数组，并根据指定深度递归地将所有子数组元素拼接到新的数组中。
可以传一个可选参数  指定要提取嵌套数组的结构 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-flat",a:"array-prototype-flat"},"110.21":{t:"`Array.prototype.from()`",p:`该方法从可迭代对象或类数组对象创建一个新的浅拷贝的数组实例。


可迭代对象: 例如 Map和 Set 对象， 或者对象是不 ...`,l:"native/javascript/常用的数组的方法.html#array-prototype-from",a:"array-prototype-from"},"110.22":{t:"序列生成器(range)",p:`// 序列生成器函数（通常称为“range”，例如 Clojure、PHP 等）
const range = (start, ...`,l:"native/javascript/常用的数组的方法.html#序列生成器-range",a:"序列生成器-range"},"110.23":{t:"`Array.prototype.flatMap()`",p:"该方法对数组中的每个元素应用给定的回调函数，然后将结果展开一级，返回一个新数组。它等价于在调用 map() 方法后再调用深度 ...",l:"native/javascript/常用的数组的方法.html#array-prototype-flatmap",a:"array-prototype-flatmap"},"111.0":{t:"# 浅拷贝与深拷贝",p:"",l:"native/javascript/浅拷贝与深拷贝.html",a:"浅拷贝与深拷贝"},"111.1":{t:"数据类型存储",p:`Javascript是有两大数据类型：

基本数据类型
引用数据类型

基本数据类型保存在栈内存中；
引用数据类型保存在堆内 ...`,l:"native/javascript/浅拷贝与深拷贝.html#数据类型存储",a:"数据类型存储"},"111.2":{t:"浅拷贝",p:`浅拷贝 指的是创建新的数据，这个数据有着原始数据属性值的一份精确复制。
如果属性是基本类型，拷贝的就是基本类型的值，如果属性 ...`,l:"native/javascript/浅拷贝与深拷贝.html#浅拷贝",a:"浅拷贝"},"111.3":{t:"手动实现",p:`const shallowClone = (obj) =&gt; {
  const newObj = {};
  for  ...`,l:"native/javascript/浅拷贝与深拷贝.html#手动实现",a:"手动实现"},"111.4":{t:"深拷贝",p:`深拷贝开辟一个新的栈，两个对象属性完全相同，但是对应两个不同的地址，修改一个对象的属性， 不会改变另一个对象的属性
!深拷贝 ...`,l:"native/javascript/浅拷贝与深拷贝.html#深拷贝",a:"深拷贝"},"111.5":{t:"区别",p:`浅拷贝和深拷贝都创建出一个新的对象，但在复制对象属性的时候，行为就不一样

浅拷贝只复制属性指向某个对象的指针，而不复制对象 ...`,l:"native/javascript/浅拷贝与深拷贝.html#区别",a:"区别"},"111.6":{t:"小结",p:`前提为拷贝类型为引用类型的情况下：


浅拷贝是拷贝一层，属性为对象时，浅拷贝是复制，两个对象指向同一个地址


深拷贝是递 ...`,l:"native/javascript/浅拷贝与深拷贝.html#小结",a:"小结"},"111.7":{t:"文章来源",p:`面试官：深拷贝浅拷贝的区别？如何实现一个深拷贝？
`,l:"native/javascript/浅拷贝与深拷贝.html#文章来源",a:"文章来源"},"112.0":{t:"# 浏览器缓存",p:"当用户打开网站并进行交互时，网站所需的所有资源，包括 HTML、JavaScript、CSS、图片、字体以及应用程序明确请求 ...",l:"native/javascript/浏览器缓存.html",a:"浏览器缓存"},"112.1":{t:"优点",p:`
离线操作： 缓存使PWA能够在设备没有网络连接时进行工作
响应速度 即使设备不在线，如果其用户界面是从缓存中获取的， PW ...`,l:"native/javascript/浏览器缓存.html#优点",a:"优点"},"112.2":{t:"浏览器缓存过程",p:`!缓存流程
缓存命中机制流程

发送请求，根据请求头的Expires和 Cache-Control(强缓存)判断是否命中(过 ...`,l:"native/javascript/浏览器缓存.html#浏览器缓存过程",a:"浏览器缓存过程"},"112.3":{t:"强缓存",p:`强制缓存就是向浏览器缓存查找该请求结果，并根据该结果的缓存规则来决定是否使用该缓存结果的过程，强制缓存的情况主要有三种


 ...`,l:"native/javascript/浏览器缓存.html#强缓存",a:"强缓存"},"112.4":{t:"强缓存规则",p:"当浏览器向服务器发送请求时，服务器会将缓存规则放入HTTP响应报文的HTTP头中和请求结果一起返回给浏览器，控制强制缓存的字 ...",l:"native/javascript/浏览器缓存.html#强缓存规则",a:"强缓存规则"},"112.5":{t:"协商缓存",p:`协商缓存是强缓存失效后，浏览器携带混存表示向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程，主要分为两种情况

 ...`,l:"native/javascript/浏览器缓存.html#协商缓存",a:"协商缓存"},"112.6":{t:"协商缓存规则",p:"协商缓存的标识也是在响应报文的HTTP头中和请求结果一起返回给浏览器的，控制协商缓存的分别有Last-Modified/If ...",l:"native/javascript/浏览器缓存.html#协商缓存规则",a:"协商缓存规则"},"112.7":{t:"总结",p:"强制缓存优先于协商缓存进行， 若强制缓存(Expires和Cache-COntrol)生效则直接使用缓存，若不生效则进行协商 ...",l:"native/javascript/浏览器缓存.html#总结",a:"总结"},"112.8":{t:"引用",p:`彻底理解浏览器的缓存机制
浏览器缓存相关
`,l:"native/javascript/浏览器缓存.html#引用",a:"引用"},"113.0":{t:"# 类的继承",p:`继承(inheritance)是面向对象软件技术中的一个概念
如果一个类别B '继承自' 另一个类别A，就把这个B称为'A的 ...`,l:"native/javascript/类的继承.html",a:"类的继承"},"113.1":{t:"优点",p:`继承可以使得子类有父类别的各种属性和方法，而不需要再次编写相同的代码
在子类别继承父类别的同时，可以重新定义某些属性，并重写 ...`,l:"native/javascript/类的继承.html#优点",a:"优点"},"113.2":{t:"实现方式",p:`
原型链继承
构造函数继承(借助call)
组合继承
原型式继承
寄生式继承
寄生组合式继承

`,l:"native/javascript/类的继承.html#实现方式",a:"实现方式"},"113.3":{t:"原型链继承",p:"原型链继承是比较常见的继承方式之一， 其中涉及构造函数、原型和实例。三者之间存在着一定的关系，即每一个构造函数都有一个原型对 ...",l:"native/javascript/类的继承.html#原型链继承",a:"原型链继承"},"113.4":{t:"构造函数继承",p:`借助call调用 Parent函数
function Parent() {
  this.name = 'parent1'
 ...`,l:"native/javascript/类的继承.html#构造函数继承",a:"构造函数继承"},"113.5":{t:"组合继承",p:`前面两种继承方式，各有优缺点，组合继承则是将前面两种继承方式结合继承起来
function Parent () {
  th ...`,l:"native/javascript/类的继承.html#组合继承",a:"组合继承"},"113.6":{t:"原型式继承",p:`这里主要借助 Object.create 方法实现普通对象的继承
let parent = {
  name: 'paren ...`,l:"native/javascript/类的继承.html#原型式继承",a:"原型式继承"},"113.7":{t:"寄生式继承",p:`寄生式继承在上面的继承基础上进行了优化，利用这个浅拷贝的能力再进行增强，添加一些方法
let parent = {
  na ...`,l:"native/javascript/类的继承.html#寄生式继承",a:"寄生式继承"},"113.8":{t:"寄生组合式继承",p:"寄生组合式继承，借助解决普通对象的继承问题的Object.create方法，在前面几种继承方式的优缺点基础上进行改造，这也是 ...",l:"native/javascript/类的继承.html#寄生组合式继承",a:"寄生组合式继承"},"113.9":{t:"总结",p:`!类的继承
通过 Object.create 来划分不同的继承方式，最后的寄生组合式继承方式是通过组合继承改造之后的最优的继 ...`,l:"native/javascript/类的继承.html#总结",a:"总结"},"113.10":{t:"文章来源",p:`JavaScript如何实现继承
`,l:"native/javascript/类的继承.html#文章来源",a:"文章来源"},"114.0":{t:"# 获取当前页面URL信息",p:"假设当前页完整地址是：https://www.example.com:8080/path/to/page.html?id=2 ...",l:"native/javascript/获取当前页面URL信息.html",a:"获取当前页面url信息"},"115.0":{t:"# 防抖与节流",p:"防抖与节流本质上是优化高频率代码的一种手段， 如浏览器的 resize、scroll、keypress、 mousemove ...",l:"native/javascript/防抖与节流.html",a:"防抖与节流"},"115.1":{t:"节流(throttle)",p:`定义
节流是指程序在n秒内只运行一次，若在这个时间段内重复触发，则只生效一次
`,l:"native/javascript/防抖与节流.html#节流-throttle",a:"节流-throttle"},"115.2":{t:"节流实现方式",p:"声明一个变量当标志位，记录当前代码是否在执行，如果正在执行，取消这次方法的执行，直接 retun， 如果有空闲，正常触发方法 ...",l:"native/javascript/防抖与节流.html#节流实现方式",a:"节流实现方式"},"115.3":{t:"防抖(debounce)",p:`防抖是指要在n秒后开始执行程序, 若在这个时间段内被重复触发，则重新开始计时
`,l:"native/javascript/防抖与节流.html#防抖-debounce",a:"防抖-debounce"},"115.4":{t:"防抖实现方式",p:"需要一个延时定时器来辅助实现，延迟执行需要执行的代码，如果方法多次触发，把上次记录的延迟执行代码用 clearTimeout ...",l:"native/javascript/防抖与节流.html#防抖实现方式",a:"防抖实现方式"},"115.5":{t:"区别",p:`相同点

都可以通过 setTimeout 实现
目的都是，降低回调执行频率，节省计算资源

差异

防抖是在一段连续操作结 ...`,l:"native/javascript/防抖与节流.html#区别",a:"区别"},"115.6":{t:"应用场景",p:`

防抖

搜索框搜索输入，只需要用户最后一次输入完，再发送请求
手机号、邮箱验证输入检测
窗口大小resize， 只需要在 ...`,l:"native/javascript/防抖与节流.html#应用场景",a:"应用场景"},"115.7":{t:"来源",p:`防抖与节流
`,l:"native/javascript/防抖与节流.html#来源",a:"来源"},"116.0":{t:"# Node基础与拓展",p:`!Node
`,l:"native/node/index.html",a:"node基础与拓展"},"117.0":{t:"# Node 简介",p:`Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。
Node 是一个让 JavaScr ...`,l:"native/node/node简介.html",a:"node-简介"},"117.1":{t:"Node特点",p:`

1.非阻塞I/O
在单线程当中,当一段代码运行需要很长时间的时候,, 比如 一个没有终止的递归或者一个没有结束条件的循环 ...`,l:"native/node/node简介.html#node特点",a:"node特点"},"118.0":{t:"# TypeScript 基础文档与类型体操",p:`!Typescript
`,l:"native/typescript/index.html",a:"typescript-基础文档与类型体操"},"119.0":{t:"# TypeScript 常用类型工具",p:"",l:"native/typescript/常用类型工具.html",a:"typescript-常用类型工具"},"119.1":{t:"`Omit< T, K >`",p:`Omit&lt; T, K &gt; 用来从对象类型 T 中，删除指定属性 K, 组成一个新的对象返回
  interfac ...`,l:"native/typescript/常用类型工具.html#omit-t-k",a:"omit-t-k"},"119.2":{t:"`Pick< T, K >`",p:`Pick&lt; T, K &gt;返回一个新的对象类型，第一个参数T是一个对象类型，第二个参数K是T里面被选定的键名。
i ...`,l:"native/typescript/常用类型工具.html#pick-t-k",a:"pick-t-k"},"119.3":{t:"`Partial< T >`",p:`Partial&lt; T &gt;返回一个新类型，将参数类型 T的所有属性变为可选属性
interface A {
  x ...`,l:"native/typescript/常用类型工具.html#partial-t",a:"partial-t"},"119.4":{t:"`Required< T >`",p:`Required&lt;T&gt;返回一个新类型，将参数类型T的所有属性变为必选属性。 它与Partial作用刚好相反。
i ...`,l:"native/typescript/常用类型工具.html#required-t",a:"required-t"},"119.5":{t:"`Readonly< T >`",p:`Readonly&lt; T &gt;返回一个新类型， 将参数类型T的所有属性变为只读属性
interface A {
   ...`,l:"native/typescript/常用类型工具.html#readonly-t",a:"readonly-t"},"119.6":{t:"`Record< T, K >`",p:`Record&lt;T, K&gt;返回一个对象类型，参数K作为键名，参数T作为键值类型。
type T = Record& ...`,l:"native/typescript/常用类型工具.html#record-t-k",a:"record-t-k"},"119.7":{t:"`Exclude< T, U >`",p:`Exclude&lt; T, U &gt;用来从联合类型T里面，删除某些类型U，组成一个新的类型返回。
type T1 =  ...`,l:"native/typescript/常用类型工具.html#exclude-t-u",a:"exclude-t-u"},"119.8":{t:"`Extract< T, U >`",p:"Extract&lt; T, U &gt;用来从联合类型T中，提取指定类型U,组成一个新类型返回。它与Exclude&lt; ...",l:"native/typescript/常用类型工具.html#extract-t-u",a:"extract-t-u"},"119.9":{t:"`NonNullable< T >`",p:"NonNullable&lt; T &gt;用来从联合类型T中删除null类型和 undefined类型，组成一个新类型返回 ...",l:"native/typescript/常用类型工具.html#nonnullable-t",a:"nonnullable-t"},"119.10":{t:"`ReturnType< T >`",p:`ReturnType&lt; T &gt;提取函数类型T的返回值类型，作为一个新类型返回
type T1 = ReturnT ...`,l:"native/typescript/常用类型工具.html#returntype-t",a:"returntype-t"},"119.11":{t:"`Parameters< T >`",p:`Parameters&lt; T &gt;从函数类型里面提取参数类型，组成一个元组返回
type T1 = Paramete ...`,l:"native/typescript/常用类型工具.html#parameters-t",a:"parameters-t"},"119.12":{t:"`ConstructorParameters< T >`",p:`ConstructorParameters&lt; T &gt;提取构造方法T的参数类型，组成一个元祖类型返回
type T ...`,l:"native/typescript/常用类型工具.html#constructorparameters-t",a:"constructorparameters-t"},"119.13":{t:"`ThisParameterType< T >`",p:`ThisParameterType&lt; T &gt;提取函数类型中的this参数的类型
function toHex(t ...`,l:"native/typescript/常用类型工具.html#thisparametertype-t",a:"thisparametertype-t"},"119.14":{t:"`InstanceType< T >`",p:"InstanceType&lt; T &gt;提取构造函数的返回值的类型（即实例类型），参数T是一个构造函数，等同于构造函数 ...",l:"native/typescript/常用类型工具.html#instancetype-t",a:"instancetype-t"},"119.15":{t:"`Awaited< T >`",p:"Awaited&lt; T &gt;用来取出 Promise 的返回值类型，适合用在描述then()方法和await命令的参 ...",l:"native/typescript/常用类型工具.html#awaited-t",a:"awaited-t"},"119.16":{t:"`OmitThisParameter< T >`",p:`OmitThisParameter&lt; T &gt;从函数类型中移除this参数。
function toHex(thi ...`,l:"native/typescript/常用类型工具.html#omitthisparameter-t",a:"omitthisparameter-t"},"119.17":{t:"`ThisType< T >`",p:"ThisType&lt; T &gt;不返回类型， 只用来跟其它类型组成交叉类型，用来提示Typescript其它类型的th ...",l:"native/typescript/常用类型工具.html#thistype-t",a:"thistype-t"},"120.0":{t:"# 推荐文档",p:`

TypeScript入门教程
TypeScript入门教程


现代TypeScript高级教程
现代TypeScrip ...`,l:"native/typescript/推荐文档.html",a:"推荐文档"},"121.0":{t:"# 枚举(Enums)",p:`枚举是 TypeScript 中一种特殊的数据类型，允许我们为一组数值设定友好的名字。枚举的定义使用 enum 关键字

枚 ...`,l:"native/typescript/枚举.html",a:"枚举-enums"},"121.1":{t:"基本用法",p:`  enum Direction {Up = 1, Down, Left, Right,}

在这个例子中，我们定义了一个名 ...`,l:"native/typescript/枚举.html#基本用法",a:"基本用法"},"121.2":{t:"手动赋值",p:`枚举是可以手动赋值的，  并且未手动赋值的枚举值会随着上一项的赋值递增
  enum Direction { Up  = 3 ...`,l:"native/typescript/枚举.html#手动赋值",a:"手动赋值"},"121.3":{t:"常数项和计算所得项",p:"枚举的项有两种类型常数项和计算所得项， 上述示例都是为常数项的枚举值， 我们也可以向枚举中添加计算的方式来设置计算所得项的枚 ...",l:"native/typescript/枚举.html#常数项和计算所得项",a:"常数项和计算所得项"},"121.4":{t:"常数枚举",p:`常数枚举是使用 const enum 定义的枚举类型
  const enum Directions {
      Up, ...`,l:"native/typescript/枚举.html#常数枚举",a:"常数枚举"},"121.5":{t:"外部枚举",p:`外部枚举是使用 declare enum 定义的枚举类型：
declare enum Directions {
    Up ...`,l:"native/typescript/枚举.html#外部枚举",a:"外部枚举"},"122.0":{t:"# TS 泛型",p:"",l:"native/typescript/泛型.html",a:"ts-泛型"},"122.1":{t:"定义",p:"在 TypeScript 中，泛型（Generics）是一种强大的类型工具，它允许我们编写可重用、灵活和类型安全的代码。泛型 ...",l:"native/typescript/泛型.html#定义",a:"定义"},"122.2":{t:"1. 数组泛型(Array Generic)",p:"我们在指定一个数组的类型时，可以使用 类型 + 中括号 表示法来定义，例如： number[]来作为数字数组类型，字符串数组 ...",l:"native/typescript/泛型.html#_1-数组泛型-array-generic",a:"_1-数组泛型-array-generic"},"122.3":{t:"2. 函数泛型",p:`
函数泛型允许我们编写可以适用多种类型的函数， 提高代码的灵活性和可复用性。

简单的例子
我们可以实现一个函数create ...`,l:"native/typescript/泛型.html#_2-函数泛型",a:"_2-函数泛型"},"122.4":{t:"3. 接口泛型",p:`接口泛型允许我们创建可适用于不同类型的接口定义。例如：

基本用法

interface IResponse&lt;T, U ...`,l:"native/typescript/泛型.html#_3-接口泛型",a:"_3-接口泛型"},"122.5":{t:"4. 类泛型",p:`与接口类型相似， 泛型也可以用于类的类型定义中
  class GenericNumber&lt;T&gt; {
    z ...`,l:"native/typescript/泛型.html#_4-类泛型",a:"_4-类泛型"},"123.0":{t:"# Typescript中的高级类型",p:`!Typescript高级类型
`,l:"native/typescript/高级类型.html",a:"typescript中的高级类型"},"123.1":{t:"交叉类型(Intersection Types): `&`",p:`交叉类型是将多个类型合并为同一个类型，这让我们可以把现有的类型叠加到一起成为一种类型， 它包含了所需的所有类型的特性。
:w ...`,l:"native/typescript/高级类型.html#交叉类型-intersection-types",a:"交叉类型-intersection-types"},"123.2":{t:"联合类型(Union Types): `|`",p:"联合类型与交叉类型很有关联，但是使用上完全不同。 联合类型会产生一个包含所有类型的选择集的类型，表示一个值的类型是定义的联合 ...",l:"native/typescript/高级类型.html#联合类型-union-types",a:"联合类型-union-types"},"123.3":{t:"类型守卫(Type Guards)",p:`类型守卫是一种用于收窄或者断言变量的技术， 通常与联合类型与交叉类型一起使用。
类型守卫可以通过一些条件检查来确定变量的确切 ...`,l:"native/typescript/高级类型.html#类型守卫-type-guards",a:"类型守卫-type-guards"},"123.4":{t:"`typeof`类型守卫",p:`使用typeof操作符检查变量类型
const printValue = (value: string | number)  ...`,l:"native/typescript/高级类型.html#typeof-类型守卫",a:"typeof-类型守卫"},"123.5":{t:"`instanceof`类型守卫",p:`使用instanceof操作符检查对象是否属于某个类
class Cat {
  meow() {
    console. ...`,l:"native/typescript/高级类型.html#instanceof-类型守卫",a:"instanceof-类型守卫"},"123.6":{t:"自定义类型守卫",p:`通过定义一个返回类型谓词的函数， 来自定义一个类型守卫
🫸 类型谓词 的形式是 paramterName is Type这 ...`,l:"native/typescript/高级类型.html#自定义类型守卫",a:"自定义类型守卫"},"123.7":{t:"`in`操作符",p:`in操作符可以作为类型细化表达式来使用
对于n in x表达式， 其中n是字符串字面量或字符串字面量类型， 并且x是个联合类 ...`,l:"native/typescript/高级类型.html#in-操作符",a:"in-操作符"},"123.8":{t:"类型别名",p:`类型别名， 顾名思义， 就是给一个类型起一个新名字， 但是不会新创建一个类型。
类型别名有时候和接口很相似， 但是可以作用于 ...`,l:"native/typescript/高级类型.html#类型别名",a:"类型别名"},"123.9":{t:"泛型式类型别名",p:`同接口一样， 类型别名可以是泛型 - 我们可以添加参数类型并且在别名声明的右侧传入：
type Container&lt;T ...`,l:"native/typescript/高级类型.html#泛型式类型别名",a:"泛型式类型别名"},"123.10":{t:"接口与类型别名",p:`类型别名虽然可以和接口一样声明， 但是它们并不同。


接口创建了一个新的名字，可以在其它任何地方使用，但类型别名并不创建新 ...`,l:"native/typescript/高级类型.html#接口与类型别名",a:"接口与类型别名"},"123.11":{t:"元组类型(Tuple)",p:`用于表示固定长度和固定类型排列的数组。在元组中，每个位置上的元素都有一个确定的类型
let x: [string, numb ...`,l:"native/typescript/高级类型.html#元组类型-tuple",a:"元组类型-tuple"},"123.12":{t:"infer 关键字",p:`表示在extends条件语句中待推断的类型变量，它是从泛型里面进行推断
type ParamType&lt;T&gt; =  ...`,l:"native/typescript/高级类型.html#infer-关键字",a:"infer-关键字"},"123.13":{t:"引用",p:`深入理解Typescript
TypeScript手册
这才是真正让你入门Typescript类型体操的文章
`,l:"native/typescript/高级类型.html#引用",a:"引用"},"124.0":{t:"# 一些微信小程序相关问题",p:"",l:"native/weapp/index.html",a:"一些微信小程序相关问题"},"125.0":{t:"# 微信小程序 ---人脸识别",p:`微信小程序 ---人脸识别（wx.startFacialRecognitionVerify）


由于人脸核验功能涉及到用户 ...`,l:"native/weapp/微信小程序人脸识别问题.html",a:"微信小程序-人脸识别"},"126.0":{t:"# 数据结构",p:"",l:"structure/index.html",a:"数据结构"},"127.0":{t:"# 链表",p:"",l:"structure/链表.html",a:"链表"},"127.1":{t:"定义",p:"计算机科学中，链表是一种数据结构，是一组由节点组成的集合， 每个节点都有一个指针和指向它的下一个节点, 最后一个指针指向nu ...",l:"structure/链表.html#定义",a:"定义"},"127.2":{t:"特点",p:`
链表在添加或移除元素的时候不需要移动其它元素,  这样添加,移除的时间复杂度就为O(1), 而数组在添加或移除元素时，因为 ...`,l:"structure/链表.html#特点",a:"特点"},"127.3":{t:"链表节点",p:`链表节点表示链表中的一个元素，它包含一个值和一个指向下一个节点的引用。它的实现可以参考下面代码：
  class Node  ...`,l:"structure/链表.html#链表节点",a:"链表节点"},"127.4":{t:"链表实现",p:"链表提供了一系列方法来操作链表， 如开头插入节点(preappend)、末尾插入节点(append)、在指定位置插入节点(i ...",l:"structure/链表.html#链表实现",a:"链表实现"},"127.5":{t:"分类",p:`链表分为三种链表: 单向链表, 双向链表, 循环链表


单向链表
一个单向链表包含两个值： 当前节点的值和指向下一个节点的 ...`,l:"structure/链表.html#分类",a:"分类"},"127.6":{t:"双向链表实现",p:`
Comparator 比较器

  export default class Comparator {
    /**
  ...`,l:"structure/链表.html#双向链表实现",a:"双向链表实现"},"127.7":{t:"参考资料",p:`编程时光
`,l:"structure/链表.html#参考资料",a:"参考资料"},"128.0":{t:"# 构建",p:`!Build
`,l:"tools/build/index.html",a:"构建"},"129.0":{t:"# webpack5 主要升级点",p:`

持久缓存(Persistent Caching)
webpack5 引入了 更好的持久缓存机制， 利用了更稳定的Hash ...`,l:"tools/build/webpack5主要升级点.html",a:"webpack5-主要升级点"},"130.0":{t:"# AST（Abstract Syntax Tree）抽象语法树",p:"",l:"tools/build/什么是AST.html",a:"ast-abstract-syntax-tree-抽象语法树"},"130.1":{t:"定义",p:"在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是源 ...",l:"tools/build/什么是AST.html#定义",a:"定义"},"130.2":{t:"应用",p:"AST(抽象语法树)在代码语法的检查、代码风格的检查、代码的格式化、代码的高亮、代码错误提示、代码自动补全等等场景均有广泛的 ...",l:"tools/build/什么是AST.html#应用",a:"应用"},"130.3":{t:"整体流程",p:`

一个完整的编译过程可以分为三个步骤：

Parsing(解析过程): 这个过程要经词法分析、语法分析、构建AST（抽象语 ...`,l:"tools/build/什么是AST.html#整体流程",a:"整体流程"},"130.4":{t:"编译原理",p:`首先来看下浏览器的编译原理如下，可以看出来浏览器对js的编译和解释都需要源代码通过 词法分析和 语法分析转换成AST
!编译 ...`,l:"tools/build/什么是AST.html#编译原理",a:"编译原理"},"131.0":{t:"# SourceMap(源映射) 基本信息",p:"",l:"tools/build/什么是SourceMap.html",a:"sourcemap-源映射-基本信息"},"131.1":{t:"什么是Source Map",p:`
Source Map 是一个信息文件，里面储存着位置信息。也就是说，转换后代码的每一个位置所对应的转换前的位置。有了它，出 ...`,l:"tools/build/什么是SourceMap.html#什么是source-map",a:"什么是source-map"},"131.2":{t:"Source Map功能",p:"js脚本现在变得很复杂，大部份源码需要转换才能放在浏览器中运行， 随着持续开发所带来的代码量增多，实际运行的代码与开发环境的 ...",l:"tools/build/什么是SourceMap.html#source-map功能",a:"source-map功能"},"131.3":{t:"浏览器中如何使用Source Map",p:`
怎么在浏览器中使用sourceMap，chrome浏览器中默认是开启了soruce Map功能。如果被关闭可以手动开启，下 ...`,l:"tools/build/什么是SourceMap.html#浏览器中如何使用source-map",a:"浏览器中如何使用source-map"},"131.4":{t:"Source Map 关键字",p:"对于SourceMap而言，我们最常见的，莫过于在webpack的配置项devTools中进行使用, 差不多有二十来种, 但 ...",l:"tools/build/什么是SourceMap.html#source-map-关键字",a:"source-map-关键字"},"131.5":{t:"各个关键字处理示例",p:`let a = 1, b
b = a



处理结果

eval 处理后输出结果

eval(&quot;var a = 1 ...`,l:"tools/build/什么是SourceMap.html#各个关键字处理示例",a:"各个关键字处理示例"},"131.6":{t:" ",p:"",l:"tools/build/什么是SourceMap.html#",a:""},"131.7":{t:"`cheap`关键字示例",p:"```javascript\n// # sum页面\nconst sum = (a, b) =&gt; { return a + ...",l:"tools/build/什么是SourceMap.html#cheap-关键字示例",a:"cheap-关键字示例"},"131.8":{t:"常见配置项的对比",p:`


devtool
构建速度
重新构建速度
生产环境
品质(quality)




(none)
+++[^1]
+++ ...`,l:"tools/build/什么是SourceMap.html#常见配置项的对比",a:"常见配置项的对比"},"131.9":{t:"在项目中的使用",p:`

开发环境

我们在开发环境对SourceMap的要求是：快(eval), 信息全面(module)
并且由于代码未压缩， ...`,l:"tools/build/什么是SourceMap.html#在项目中的使用",a:"在项目中的使用"},"132.0":{t:"# 一些CSS相关的工具",p:`!CSS
`,l:"tools/css/index.html",a:"一些css相关的工具"},"133.0":{t:"# UnoCss",p:"",l:"tools/css/unocss.html",a:"unocss"},"133.1":{t:"定义",p:"unocss官方定义 是一个具有高性能且极具灵活性的即时原子化 CSS 引擎。它是一个引擎，而非一款框架，因为它并未提供核心 ...",l:"tools/css/unocss.html#定义",a:"定义"},"134.0":{t:"# git cherry-pick 使用",p:"",l:"tools/git/git-cherry-pick.html",a:"git-cherry-pick-使用"},"134.1":{t:"定义",p:"cherry-pick: 翻译为筛选，是git版本控制系统中很重要的一个命令， 它允许你将任意分支上的某个或者某些特定提交( ...",l:"tools/git/git-cherry-pick.html#定义",a:"定义"},"134.2":{t:"使用场景",p:`
跨分支移植补丁

假设在开发分支上修复了一个bug， 但尚未准备好合并整个分支。这时， 可以使用git cherry-pi ...`,l:"tools/git/git-cherry-pick.html#使用场景",a:"使用场景"},"134.3":{t:"示例",p:`假设是master分支某个提交应用到develop分支上



确保已经切换到了想要应用补丁的目标分支

git check ...`,l:"tools/git/git-cherry-pick.html#示例",a:"示例"},"135.0":{t:"# git 初始化",p:`
背景

本地安装了git,同时github也已经申请了账号，想通过git把github上别人的代码clone到本地。
`,l:"tools/git/git-init.html",a:"git-初始化"},"135.1":{t:"操作步骤",p:`1.在自己电脑创建本地仓库
第一步， 打开git bash,找一个存放所有git项目的目录。假设git的目录叫gitRepo ...`,l:"tools/git/git-init.html#操作步骤",a:"操作步骤"},"136.0":{t:"# git pull 与 git fetch区别",p:"",l:"tools/git/git-pull与git-fetch区别.html",a:"git-pull-与-git-fetch区别"},"136.1":{t:"1、简单概括",p:`先用一张图来理一下git fetch和git pull的概念：
!image
可以简单的概括为：
git fetch是将远程 ...`,l:"tools/git/git-pull与git-fetch区别.html#_1、简单概括",a:"_1、简单概括"},"136.2":{t:"2、分支的概念",p:`在介绍两种方法之前，我们需要先了解一下分支的概念：
分支是用来标记特定代码的提交，每一个分支通过SHA1sum值来标识，所以 ...`,l:"tools/git/git-pull与git-fetch区别.html#_2、分支的概念",a:"_2、分支的概念"},"136.3":{t:"3、git fetch 用法",p:`git fetch 命令：
git fetch &lt;远程主机名&gt; //这个命令将某个远程主机的更新全部取回本地

 ...`,l:"tools/git/git-pull与git-fetch区别.html#_3、git-fetch-用法",a:"_3、git-fetch-用法"},"136.4":{t:"4、git pull 用法",p:`前面提到，git pull 的过程可以理解为：
git fetch origin master //从远程主机的master ...`,l:"tools/git/git-pull与git-fetch区别.html#_4、git-pull-用法",a:"_4、git-pull-用法"},"137.0":{t:"# git rebase",p:"",l:"tools/git/git-rebase.html",a:"git-rebase"},"137.1":{t:"git rebase能够将分叉的分支重新合并，下面主要介绍它的两个使用场景",p:"",l:"tools/git/git-rebase.html#git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景",a:"git-rebase能够将分叉的分支重新合并-下面主要介绍它的两个使用场景"},"137.2":{t:"场景一：本地与远端同一分支提交历史不一致",p:`
方式一

多个人在同一个分支上协作时，出现冲突是很正常的，比如现在有一个项目由我和A一同开发。
我在修复了一个bug以后准 ...`,l:"tools/git/git-rebase.html#场景一-本地与远端同一分支提交历史不一致",a:"场景一-本地与远端同一分支提交历史不一致"},"137.3":{t:"场景二：不同分支之间的合并",p:`由于老板突发奇想，要求开发一个新的功能。
先创建一个分支用于开发新功能：
git checkout -b feature
H ...`,l:"tools/git/git-rebase.html#场景二-不同分支之间的合并",a:"场景二-不同分支之间的合并"},"138.0":{t:"# git rebase 合并commit",p:`
使用背景

一个repo通常是由一个team中的多个人共同维护，如果需要增加新feature，那么就是一个feature分 ...`,l:"tools/git/git-rebase合并commit.html",a:"git-rebase-合并commit"},"138.1":{t:"rebase 简介",p:"git rebase是Git中用于将一个分支的提交应用到另一个分支上的命令。它主要作用是将一个分支上的修改“衍合”(reba ...",l:"tools/git/git-rebase合并commit.html#rebase-简介",a:"rebase-简介"},"138.2":{t:"操作步骤",p:"假设我们做了一下三个commit，想把前两个提交也就是 commit 7131a52和 commit 0d11e74合并到c ...",l:"tools/git/git-rebase合并commit.html#操作步骤",a:"操作步骤"},"139.0":{t:"# git stash",p:`
git stash 命令的作用是将更改存储在一个临时区域中，使得该工作目录变成一个干净的工作状态， 从而可以去执行其它操作 ...`,l:"tools/git/git-stash的用法总结.html",a:"git-stash"},"139.1":{t:"`git stash` 常用使用场景",p:`
正在进行一些工作，但需要在不更改当前分支或提交任何更改的情况下切换到另一个分支或者进行其它操作。
想要推送某个分支但又不想 ...`,l:"tools/git/git-stash的用法总结.html#git-stash-常用使用场景",a:"git-stash-常用使用场景"},"139.2":{t:"常用的 `git stash`命令",p:"",l:"tools/git/git-stash的用法总结.html#常用的-git-stash-命令",a:"常用的-git-stash-命令"},"139.3":{t:"1. `git stash`",p:"直接保存其实是执行了命令 git stash save &quot;保存时的描述&quot;命令 只是要保存的描述为空。 执 ...",l:"tools/git/git-stash的用法总结.html#_1-git-stash",a:"_1-git-stash"},"139.4":{t:"2. `git stash list`",p:`git stash list 用于查看执行stash操作的存储列表, 列表格式类似于下面这种格式：
$ git stash  ...`,l:"tools/git/git-stash的用法总结.html#_2-git-stash-list",a:"_2-git-stash-list"},"139.5":{t:"3. `git stash show`",p:"显示做了哪些改动，默认show第一个存储,如果要显示其它存贮，后面加 stash@{$num}，比如查看第二个stash详情 ...",l:"tools/git/git-stash的用法总结.html#_3-git-stash-show",a:"_3-git-stash-show"},"139.6":{t:"4. `git stash show -p`",p:"显示第一个存储的改动，如果想显示其它存存储，命令：git stash show  stash@{$num}  -p ，比如第 ...",l:"tools/git/git-stash的用法总结.html#_4-git-stash-show-p",a:"_4-git-stash-show-p"},"139.7":{t:"5.`git stash apply`",p:"应用某个存储,但不会把存储从存储列表中删除，默认使用第一个存储,即 stash@{0}，如果要使用其它个，git stash ...",l:"tools/git/git-stash的用法总结.html#_5-git-stash-apply",a:"_5-git-stash-apply"},"139.8":{t:"6. `git stash pop`",p:"命令恢复之前缓存的工作目录，将缓存堆栈中的对应 stash删除，并将对应修改应用到当前的工作目录下,默认为第一个 stash ...",l:"tools/git/git-stash的用法总结.html#_6-git-stash-pop",a:"_6-git-stash-pop"},"139.9":{t:"7. `git stash drop  stash@`",p:`丢弃stash@{$num}存储，从列表中删除这个存储
`,l:"tools/git/git-stash的用法总结.html#num",a:"num"},"139.10":{t:"8. `git stash clear`",p:`删除所有缓存的stash

注意：说明:新增的文件，直接执行stash是不会被存储的
!git stash 不保存新建文件
 ...`,l:"tools/git/git-stash的用法总结.html#_8-git-stash-clear",a:"_8-git-stash-clear"},"140.0":{t:"# git 删除分支同步到git仓库",p:"",l:"tools/git/git删除分支同步到git仓库.html",a:"git-删除分支同步到git仓库"},"140.1":{t:"删除分支",p:`git branch -d &lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#删除分支",a:"删除分支"},"140.2":{t:"同步到git仓库上",p:`git push origin :&lt;branch name&gt;

`,l:"tools/git/git删除分支同步到git仓库.html#同步到git仓库上",a:"同步到git仓库上"},"141.0":{t:"# git常用操作",p:"",l:"tools/git/git常用操作.html",a:"git常用操作"},"141.1":{t:"工作流程",p:`!git工作流程
`,l:"tools/git/git常用操作.html#工作流程",a:"工作流程"},"142.0":{t:"# 一些git常用操作与命令",p:`&lt;!-- !Git --&gt;
!Git
`,l:"tools/git/index.html",a:"一些git常用操作与命令"},"143.0":{t:"# 图片工具",p:"",l:"tools/image/index.html",a:"图片工具"},"144.0":{t:"# 本地图片压缩工具",p:`&lt;ImageCompression/&gt;
`,l:"tools/image/图片压缩工具.html",a:"本地图片压缩工具"}},a={previewLength:62,buttonLabel:"搜索",placeholder:"搜索关键词",allow:[],ignore:[]},r={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:a};export{r as default};
