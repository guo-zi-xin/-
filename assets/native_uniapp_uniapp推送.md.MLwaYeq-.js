import{_ as c}from"./chunks/CustomLink.efBt-4JR.js";import{_ as r}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.QrrBmjNq.js";import{_ as u,c as D,j as n,a as o,G as l,a6 as p,w as F,B as y,o as d}from"./chunks/framework.8Xbk4tT3.js";import"./chunks/theme.VasyDUoe.js";const E="/web-docs/image/%E5%BC%80%E9%80%9Aunipush2.0.png",t="/web-docs/image/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E9%A1%B5%E9%9D%A2.png",A="/web-docs/image/%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81%E5%8E%82%E5%95%86%E9%85%8D%E7%BD%AE.png",B="/web-docs/image/%E5%8E%82%E5%95%86%E5%85%B7%E4%BD%93%E9%85%8D%E7%BD%AE.png",m="/web-docs/image/uni-push%E9%85%8D%E7%BD%AE.png",h="/web-docs/svg/uni-push%E6%8E%A8%E9%80%81%E6%B5%81%E7%A8%8B.svg",g="/web-docs/image/%E6%8E%A8%E9%80%81%E6%89%93%E5%8C%85.png",b="/web-docs/image/%E6%89%8B%E6%9C%BA%E9%80%9A%E7%9F%A51.png",C="/web-docs/image/%E6%89%8B%E6%9C%BA%E9%80%9A%E7%9F%A52.png",f="/web-docs/image/%E9%83%A8%E7%BD%B2%E4%BA%91%E5%87%BD%E6%95%B0.png",v="/web-docs/image/%E6%96%B0%E5%BB%BA%E4%BA%91%E6%9C%8D%E5%8A%A1%E7%A9%BA%E9%97%B4.png",P="/web-docs/image/%E6%9C%8D%E5%8A%A1%E7%A9%BA%E9%97%B4%E6%96%B0%E8%B4%AD.png",q="/web-docs/image/%E4%BA%91%E6%9C%8D%E5%8A%A1%E7%A9%BA%E9%97%B4.png",x="/web-docs/image/%E9%80%89%E6%8B%A9%E6%A8%A1%E7%89%88.png",k="/web-docs/image/%E9%80%89%E6%8B%A9%E6%8E%A8%E9%80%81%E6%9C%8D%E5%8A%A1.png",w="/web-docs/image/dbschema-opendb.png",j="/web-docs/image/dbschema-uni-id.png",I="/web-docs/image/%E4%BA%91%E5%87%BD%E6%95%B0%E8%AF%A6%E6%83%85.png",_="/web-docs/image/%E4%BA%91%E5%87%BD%E6%95%B0url%E5%8C%96.png",N="/web-docs/image/postman%E6%B5%8B%E8%AF%95%E6%8E%A5%E5%8F%A3.png",M="/web-docs/image/postman%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF.png",S="/web-docs/image/ios%E9%85%8D%E7%BD%AE%E6%8E%A8%E9%80%81.png",R=JSON.parse('{"title":"uni-app unipush指南","description":"","frontmatter":{},"headers":[],"relativePath":"native/uniapp/uniapp推送.md","filePath":"native/uniapp/uniapp推送.md","lastUpdated":1736266150000}'),X={name:"native/uniapp/uniapp推送.md"};function $(O,s,T,H,L,U){const e=r,a=c,i=y("font");return d(),D("div",null,[s[14]||(s[14]=n("h1",{id:"uni-app-unipush指南",tabindex:"-1"},[o("uni-app unipush指南 "),n("a",{class:"header-anchor",href:"#uni-app-unipush指南","aria-label":'Permalink to "uni-app unipush指南"'},"​")],-1)),l(e,{readTime:"11",words:"3.2k"}),s[15]||(s[15]=n("p",null,[n("strong",null,"UniPush 是 DCloud 联合个推公司推出的集成型统一推送服务，是所有uni-app开发者首选的推送服务")],-1)),s[16]||(s[16]=n("p",null,"有两个版本：",-1)),s[17]||(s[17]=n("ul",null,[n("li",null,"2.0版新版文档地址：")],-1)),l(a,{title:"unipush2.0接入",href:"https://uniapp.dcloud.net.cn/unipush-v2.html"}),s[18]||(s[18]=n("ul",null,[n("li",null,"1.0老板本文档地址")],-1)),l(a,{title:"unipush1.0接入",href:"https://uniapp.dcloud.net.cn/unipush-v1.html"}),s[19]||(s[19]=p('<p>目前项目中是接入了<strong>2.0</strong>版本，此文章主要讨论<code>uni-push2.0</code>版本的接入</p><h3 id="应用场景" tabindex="-1">应用场景 <a class="header-anchor" href="#应用场景" aria-label="Permalink to &quot;应用场景&quot;">​</a></h3><p>以下功能可以用uni-push 实现</p><ul><li><p>用户消息通知</p><p>当 APP 用户相关状态或者系统功能状态变化时（如用户订单通知、交易提醒、物流通知、升级提醒、社交互动提醒等），可对用户进行及时告知，或者促使用户完成特定操作。</p></li><li><p>离线语音播报 它也是一种用户消息推送，实现原理其实是自定义通知提醒铃声</p></li><li><p>营销促活通知 在日常营销推广、促销活动等场景下（如双11大促、产品上新、重要资讯等），APP可对目标用户进行定向通知栏消息+应用内消息推送，吸引用户参与活动，提升日活。</p></li><li><p>基于uniCloud的IM、聊天、客服、棋牌游戏交互等</p></li></ul><p>例如：DCloud基于uni-push2开发并开源了uni-im详情:</p>',5)),l(a,{title:"uni-im",href:"https://doc.dcloud.net.cn/uniCloud/uni-im.html"}),s[20]||(s[20]=p('<p>另外棋牌游戏等，需要客户端被动接收消息的需求都可以用uni-push实现。</p><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><h4 id="开通uni-push2-0服务" tabindex="-1">开通<code>uni-push2.0</code>服务 <a class="header-anchor" href="#开通uni-push2-0服务" aria-label="Permalink to &quot;开通`uni-push2.0`服务&quot;">​</a></h4><p>前往<code>DCLOUD</code>开发者中心， 找到<code>uniPush</code> -&gt; <code>2.0</code> -&gt; 应用信息， 按照要求开通服务</p><img src="'+E+'" alt="开通uni-push2.0"><ul><li>关联服务空间说明</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>uni-push2.0需要开发者开通uniCloud。不管您的业务服务器是否使用uniCloud，但实现推送，就要使用uniCloud服务器。</p><ul><li><p>如果您的后台业务使用uniCloud开发，那理解比较简单</p></li><li><p>如果您的后台业务没有使用uniCloud，那么也需要在uni-app项目中创建uniCloud环境。在uniCloud中写推送逻辑，暴露一个接口，再由业务后端调用这个推送接口</p></li></ul></div><p>开通之后， 就可以看到如下界面</p><img src="'+t+'" alt="消息推送页面"><p>厂商推送界面</p><img src="'+A+'" alt="Android厂商离线推送"><p>默认推送是在应用启动并联网之后才能收到的，如果想在应用没有启动不联网的时候也能推送，那就需要配置各个厂商设置，而且这些厂商会要求你的软件必须在其应用商店上架才行</p><img src="'+B+'" alt="厂商配置"><h4 id="客户端配置" tabindex="-1">客户端配置 <a class="header-anchor" href="#客户端配置" aria-label="Permalink to &quot;客户端配置&quot;">​</a></h4><h5 id="manifest-json" tabindex="-1"><code>manifest.json</code> <a class="header-anchor" href="#manifest-json" aria-label="Permalink to &quot;`manifest.json`&quot;">​</a></h5><p>找到项目中的 <code>manifest.json</code> 文件， 在HBuilderX中打开，找到<strong>安卓/IOS模块配置</strong>， 然后勾选 <code>uniPush2.0</code><em>在线推送</em>和<em>离线推送</em></p><img src="'+m+'" alt="uni-push推送"><h3 id="什么是push" tabindex="-1">什么是Push？ <a class="header-anchor" href="#什么是push" aria-label="Permalink to &quot;什么是Push？&quot;">​</a></h3><p>push，指服务器主动向客户端发送消息的技术。无需客户端持续轮询服务器，即可获得即时数据。</p><p>当客户端在线时，push通过socket协议实现。当客户端离线时，服务器找不到客户端，开发者无法自己实现推送，只能依托手机操作系统、小程序底层提供的离线消息推送，调用指定的手机厂商或小程序厂商的服务器接口来发送消息。</p><p>所以一个push系统需要3部分协作：开发者的业务服务器 + 专业push服务器 + 开发者的客户端应用。</p><p>其主要流程是：</p><ol><li>开发者的业务服务器向专业push服务器发送指令，告知需要向哪些客户端发送什么样的消息</li><li>专业push服务器再向客户端发送消息</li><li>若手机应用在线，直接收到push；若不在线，手机用户在操作系统的通知栏中看到push消息，点击后呼起客户端应用，客户端代码可以接收响应获得消息；如果是小程序的话，则是在微信消息里看到订阅消息，点击后呼起小程序并拿到启动参数.</li></ol><p>由于手机厂商众多，他们各自都有不同的推送服务，包括Apple、google（仅能在海外使用）、华为、小米、oppo、vivo、魅族，以及还有一些没有专业推送服务的中小手机品牌。他们对App后台耗电都有查杀机制，除了微信等大应用，普通应用很难常驻后台。</p><p>DCloud与个推（A股上市公司每日互动）深度合作，为uni-app的开发者提供了比传统方案便利甚多的统一推送方案<code>uni-push2</code>，利用云端一体的优势，同时提供基于uniCloud的push服务器和基于uni-app的push客户端，两者高效协同，极大的简化了push的使用。</p><p>如下图所示： 首先开发者的uniCloud应用服务器向uni-push服务器发送push消息，然后</p><ul><li>如果客户端应用在线，客户端通过socket直接收到push在线消息</li><li>客户端应用不联网时，<code>uni-push</code>服务器根据客户端类型，把push消息发给某个手机厂商的push服务器或小程序的订阅消息服务器；然后厂商push通道会把这条消息发到手机的通知栏或微信的订阅消息里；手机用户点击通知栏消息或小程序订阅消息后，启动App或小程序，客户端才能收到离线消息。</li></ul><img src="'+h+'" alt="uni-push推送流程"><h3 id="在线推送" tabindex="-1">在线推送 <a class="header-anchor" href="#在线推送" aria-label="Permalink to &quot;在线推送&quot;">​</a></h3><p>在勾选<code>unipush</code>后, 因为修改了manifest.json的配置， <strong>一定要进行一次云打包</strong>(打自定义调试基座和正式包都可以)后才会生效</p><h4 id="客户端代码" tabindex="-1">客户端代码 <a class="header-anchor" href="#客户端代码" aria-label="Permalink to &quot;客户端代码&quot;">​</a></h4><p>要实现推送， 首先需要 首先需要拿到一个客户端的唯一标识，使用<code>uni.getPushClientId</code>API</p>',32)),l(a,{title:"uni.getPushClientId API",href:"https://uniapp.dcloud.net.cn/api/plugins/push.html#getpushclientid"}),s[21]||(s[21]=p(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">onLaunch</span><span style="color:#BABED8;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">   uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPushClientId</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#82AAFF;">        success</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#C792EA;">            let</span><span style="color:#BABED8;"> push_clientid</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">cid</span></span>
<span class="line"><span style="color:#BABED8;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">客户端推送标识:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> push_clientid</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            // 保存在全局，可以在进入app登录账号后调用一次接口将设备id传给后端</span></span>
<span class="line"><span style="color:#89DDFF;">            this.</span><span style="color:#BABED8;">$options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">globalData</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">pushClientId</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> push_clientid</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">            // 一进来就掉一次接口把push_clientid传给后端</span></span>
<span class="line"><span style="color:#89DDFF;">            this.</span><span style="color:#82AAFF;">$setPushClientId</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">push_clientid</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">                console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[ set pushClientId res ] &gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">            }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        },</span></span>
<span class="line"><span style="color:#F07178;">        fail</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">err</span><span style="color:#89DDFF;">)</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">err</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">        }</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>推送消息如果要接收，可以通过调用 <code>uni.onPushMessage</code>API来进行推送消息的获取</p>`,2)),l(a,{title:"uni.onPushMessage API",href:"https://uniapp.dcloud.net.cn/api/plugins/push。html#onpushmessage"}),s[22]||(s[22]=p(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">onLaunch</span><span style="color:#BABED8;">() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // ... </span></span>
<span class="line"><span style="color:#BABED8;">  uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">onPushMessage</span><span style="color:#F07178;">(</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">收到推送消息：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> res</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">//监听推送消息</span></span>
<span class="line"><span style="color:#BABED8;">      uni</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createPushMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          title</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">title</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          content</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">content</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">          payload</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> res</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">data</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">payload</span></span>
<span class="line"><span style="color:#89DDFF;">      }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="客户端使用自定义基座调试" tabindex="-1">客户端使用自定义基座调试 <a class="header-anchor" href="#客户端使用自定义基座调试" aria-label="Permalink to &quot;客户端使用自定义基座调试&quot;">​</a></h4><p>客户端需要使用自定义基座进行云打包才能正常调试，进入 uni-app，依次进入 运行 → 运行到手机或模拟器 → 制作自定义调试基座 → 打包</p><img src="`+g+'" alt="推送打包"><p>具体可参考官方教程：</p>',5)),n("ul",null,[n("li",null,[l(a,{title:"自定义基座",href:"https://uniapp.dcloud.net.cn/tutorial/run/run-app.html#customplayground"})]),n("li",null,[l(a,{title:"使用云端证书(服务器生成的证书)",href:"https://ask.dcloud.net.cn/article/35985#server"})])]),s[23]||(s[23]=p('<p>然后使用自定义基座启动 app，将 app 的通知权限和悬浮通知权限打开</p><h5 id="推送消息" tabindex="-1">推送消息 <a class="header-anchor" href="#推送消息" aria-label="Permalink to &quot;推送消息&quot;">​</a></h5><p>在 开发者中心 → uniPush → 2.0 → 消息推送 中填写推送信息：</p><img src="'+t+'" alt="消息推送页面"><ul><li>点击 预览 → 确定</li></ul><p>这时候手机上就可以收到通知了</p><ul><li><p>APP顶部弹窗</p><img src="'+b+'" alt="手机通知1"></li><li><p>状态栏提示</p><img src="'+C+'" alt="手机通知2"></li></ul><h4 id="服务端代码" tabindex="-1">服务端代码 <a class="header-anchor" href="#服务端代码" aria-label="Permalink to &quot;服务端代码&quot;">​</a></h4>',8)),n("ol",null,[s[9]||(s[9]=n("li",null,[n("p",null,"鼠标点击项目根目录，依次执行"),n("img",{src:f,alt:"创建开发环境"})],-1)),n("li",null,[s[0]||(s[0]=n("p",null,"在uniCloud开发者平台上新建一个云服务空间",-1)),l(a,{title:"云服务空间",href:"https://unicloud.dcloud.net.cn/"}),s[1]||(s[1]=o()),s[2]||(s[2]=n("img",{src:v,alt:"新建云服务空间"},null,-1))]),s[10]||(s[10]=p('<li><p>根据提示选择自己需要的服务空间</p><img src="'+P+'" alt="云服务空间新购"></li><li><p>创建完成后，返回HBuilderX 此时就可以开始进行关联</p></li><li><p>然后右键点击uniCloud目录，选择刚开始创建的云服务空间</p><img src="'+q+'" alt="创建云服务空间"></li><li><p>在cloudfunctions目录右击，新建云函数/云对象，命名为uni-push，会创建一个uni-push目录</p><img src="'+x+'" alt="创建云函数"></li><li><p>右击uni-push目录，点击 管理公共模块或扩展库依赖，选择uni-cloud-push</p><img src="'+k+'" alt="选择扩展库"></li><li><p>右击database目录，新建DB Schema，创建这三张表:<code>opendb-tempdata</code>,<code>opendb-device</code>,<code>uni-id-device</code>，也就是json文件，直接输入并选择相应的模板。</p><img src="'+w+'" alt="选择DB"><p>选择 <code>uni-id-device</code><img src="'+j+'" alt="选择uni-id-device"></p></li>',6)),n("li",null,[s[3]||(s[3]=p(`<p>创建好表之后, 修改之前创建的uni-push的云函数：</p><ul><li>修改index.js</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> uniPush </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> uniCloud</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getPushManager</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span><span style="color:#F07178;">appId</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__UNI__XXXX</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">) </span><span style="color:#676E95;font-style:italic;">//注意这里需要传入你的应用appId</span></span>
<span class="line"><span style="color:#89DDFF;">exports.</span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;"> =</span><span style="color:#C792EA;"> async</span><span style="color:#89DDFF;"> (</span><span style="color:#BABED8;font-style:italic;">event</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;font-style:italic;"> context</span><span style="color:#89DDFF;">)</span><span style="color:#C792EA;"> =&gt;</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">event ===&gt; </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> event</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">context ===&gt; </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> context</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">  // 所有要传的参数，都在业务服务器调用此接口时传入</span></span>
<span class="line"><span style="color:#C792EA;">  const</span><span style="color:#BABED8;"> data</span><span style="color:#89DDFF;"> =</span><span style="color:#BABED8;"> JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">event</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">body</span><span style="color:#89DDFF;"> ||</span><span style="color:#89DDFF;"> &#39;</span><span style="color:#C3E88D;">{}</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#BABED8;">  console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">params ===&gt; </span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">  return</span><span style="color:#89DDFF;font-style:italic;"> await</span><span style="color:#BABED8;"> uniPush</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">data</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div><ul><li>修改package.json</li></ul><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">uni-push</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {},</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">main</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> &quot;</span><span style="color:#C3E88D;">index.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">  &quot;</span><span style="color:#C792EA;">extensions</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {</span></span>
<span class="line"><span style="color:#89DDFF;">    &quot;</span><span style="color:#FFCB6B;">uni-cloud-push</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;"> {}</span></span>
<span class="line"><span style="color:#89DDFF;">  }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,5)),l(a,{title:"uniCloud sendMessage方法及参数",href:"https://doc.dcloud.net.cn/uniCloud/uni-cloud-push/api.html"})]),s[11]||(s[11]=p(`<li><p>右键点击 uni-push 目录 点击上传部署， 部署完成后就可以在线调用</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在客户端调用云函数 在开发具体项目中，通过<code>uniCloud.callFunction</code>进行调用，unicloud是uniapp中调用云函数方法，其中name为云函数名称注意：这个是必填项！，data为传输参数编码base64编码，success为结果，跟axios请求方法类似，简洁明了</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight vp-code" tabindex="0"><code><span class="line"><span style="color:#BABED8;">uniCloud</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">callFunction</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    name</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">uni-push</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    data</span><span style="color:#89DDFF;">:{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">      // 需要传给云函数的参数</span></span>
<span class="line"><span style="color:#89DDFF;">    },</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /* 成功回调 */</span></span>
<span class="line"><span style="color:#82AAFF;">    success</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;font-style:italic;">res</span><span style="color:#C792EA;">=&gt;</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">res</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">    }</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span></code></pre></div></div></li>`,1)),n("li",null,[s[4]||(s[4]=n("p",null,"如果想在外部调用， 可以将云函数url化， 登入云函数控制台, 点击进入服务空间详情后 进行操作",-1)),l(a,{title:"云函数控制台",href:"https://unicloud.dcloud.net.cn/"}),s[5]||(s[5]=n("img",{src:I,alt:"云函数"},null,-1)),s[6]||(s[6]=n("ul",null,[n("li",null,"点击云函数详情， 进入详情界面")],-1)),s[7]||(s[7]=n("p",null,"路径可以自己定义，需要符合设置规则",-1)),s[8]||(s[8]=n("img",{src:_,alt:"云函数url化"},null,-1))]),s[12]||(s[12]=n("li",null,[n("p",null,"postman测试一下接口"),n("img",{src:N,alt:"postman测试接口"}),n("ul",null,[n("li",null,[o("没问题的话，客户端将会打印"),n("code",null,'“console.log("收到推送消息：", xxx)”'),o("，这一步最好是使用真机，运行到App基座，使用自定义调试基座运行，会在HBuilderX控制台打印。")])])],-1))]),s[24]||(s[24]=p('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>云函数调用<code>uniPush.sendMessageAPI</code>时, 有cids参数来设置推送给目标用户， 如果不传该参数， 则会向所有用户推送消息，并且十分钟内消息内容不可重复， 否则会报错</p><img src="'+M+'" alt="报错信息"></div><h3 id="离线推送" tabindex="-1">离线推送 <a class="header-anchor" href="#离线推送" aria-label="Permalink to &quot;离线推送&quot;">​</a></h3><ul><li>APP离线时，客户端收到通知会自动在通知栏创建消息，实现离线推送需要配置厂商参数。</li></ul><p>苹果需要专用的推送证书， 参考证书链接</p>',4)),l(a,{title:"ios证书链接",href:"https://blog.csdn.net/xinTianou123/article/details/128186017"}),s[25]||(s[25]=n("img",{src:S,alt:"ios推送"},null,-1)),s[26]||(s[26]=n("ul",null,[n("li",null,"安卓需要在各厂商开发者后台获取参数")],-1)),l(a,{title:"厂商推送配置链接参考",href:"https://docs.getui.com/getui/mobile/vendor/vendor_open/"}),l(i,{color:"red"},{default:F(()=>s[13]||(s[13]=[o("注意: 安卓需要退出app后，在任务管理器彻底清除进程，才会走离线推送")])),_:1}),s[27]||(s[27]=n("h4",{id:"离线推送角标问题",tabindex:"-1"},[o("离线推送角标问题 "),n("a",{class:"header-anchor",href:"#离线推送角标问题","aria-label":'Permalink to "离线推送角标问题"'},"​")],-1)),s[28]||(s[28]=n("ul",null,[n("li",null,"android、iOS设置角标:")],-1)),l(a,{title:"plus设置角标数量",href:"https://www.html5plus.org/doc/zh_cn/runtime.html?from_wecom=1#plus.runtime.setBadgeNumber"}),s[29]||(s[29]=n("ul",null,[n("li",null,"鸿蒙（(HarmonyOS Next)）设置角标：")],-1)),s[30]||(s[30]=n("p",null,[n("code",null,"uni.setAppBadgeNumber(n: number)")],-1)),l(a,{title:"云函数api",href:"https://uniapp.dcloud.net.cn/uniCloud/uni-cloud-push/api.html#uni-cloud-push"}),s[31]||(s[31]=n("h4",{id:"厂商推送限制",tabindex:"-1"},[o("厂商推送限制 "),n("a",{class:"header-anchor",href:"#厂商推送限制","aria-label":'Permalink to "厂商推送限制"'},"​")],-1)),s[32]||(s[32]=n("p",null,"各大厂商推送是有限制的， 消息也会分为不同的消息类型;",-1)),s[33]||(s[33]=n("p",null,"通常将消息分为重要等级和普通等级，且不同厂商对消息分类的名称各有不同，比如重要消息一般分类为：重要、系统、私信、服务与通讯类，普通消息一般分类为：普通、运营、公信、营销资讯类。",-1)),s[34]||(s[34]=n("p",null,"APP开发者可根据自身应用的通知场景，将消息分为重要和普通消息两大类，以实现不同级别的消息推送。",-1)),l(a,{title:"厂商推送限额说明",href:"https://docs.getui.com/getui/mobile/vendor/qps/"})])}const W=u(X,[["render",$]]);export{R as __pageData,W as default};
